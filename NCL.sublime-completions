{
    "scope": "source.ncl",
    "completions":
    [
        { "trigger": "abs", "contents": "abs(${1:value})" },
        { "trigger": "acos", "contents": "acos(${1:value})" },
        { "trigger": "addfile", "contents": "addfile(${1:file_path}, ${2:status})" },
        { "trigger": "addfiles", "contents": "addfiles(${1:file_path}, ${2:status})" },
        { "trigger": "all", "contents": "all(${1:logical_array})" },
        { "trigger": "angmom_atm", "contents": "angmom_atm(${1:u}, ${2:dp}, ${3:lat}, ${4:wgt})" },
        { "trigger": "any", "contents": "any(${1:logical_array})" },
        { "trigger": "area_conserve_remap", "contents": "area_conserve_remap(${1:loni}, ${2:lati}, ${3:fi}, ${4:lono}, ${5:lato}, ${6:opt})" },
        { "trigger": "area_hi2lores", "contents": "area_hi2lores(${1:xi}, ${2:yi}, ${3:fi}, ${4:fiCyclicX}, ${5:wy}, ${6:xo}, ${7:yo}, ${8:foOption})" },
        { "trigger": "area_poly_sphere", "contents": "area_poly_sphere(${1:lat}, ${2:lon}, ${3:rsph})" },
        { "trigger": "asciiread", "contents": "asciiread(${1:filepath}, ${2:dimensions}, ${3:datatype})" },
        { "trigger": "asciiwrite", "contents": "asciiwrite(${1:filepath}, ${2:var})" },
        { "trigger": "asin", "contents": "asin(${1:value})" },
        { "trigger": "atan", "contents": "atan(${1:value})" },
        { "trigger": "atan2", "contents": "atan2(${1:y}, ${2:x})" },
        { "trigger": "attsetvalues", "contents": "attsetvalues(${1:objects}, ${2:resources})" },
        { "trigger": "avg", "contents": "avg(${1:x})" },
        { "trigger": "betainc", "contents": "betainc(${1:x}, ${2:a}, ${3:b})" },
        { "trigger": "bin_avg", "contents": "bin_avg(${1:zlon}, ${2:zlat}, ${3:z}, ${4:glon}, ${5:glat}, ${6:opt})" },
        { "trigger": "bin_sum", "contents": "bin_sum(${1:gbin}, ${2:gknt}, ${3:glon}, ${4:glat}, ${5:zlon}, ${6:zlat}, ${7:z})" },
        { "trigger": "bw_bandpass_filter", "contents": "bw_bandpass_filter(${1:x}, ${2:fca}, ${3:fcb}, ${4:opt}, ${5:dims})" },
        { "trigger": "cancor", "contents": "cancor(${1:x}, ${2:y}, ${3:option})" },
        { "trigger": "cbinread", "contents": "cbinread(${1:filename}, ${2:dsizes}, ${3:datatype})" },
        { "trigger": "cbinwrite", "contents": "cbinwrite(${1:filename}, ${2:var})" },
        { "trigger": "cd_calendar", "contents": "cd_calendar(${1:time}, ${2:option})" },
        { "trigger": "cd_inv_calendar", "contents": "cd_inv_calendar(${1:year}, ${2:month}, ${3:day}, ${4:hour}, ${5:minute}, ${6:second}, ${7:units}, ${8:option})" },
        { "trigger": "cdfbin_p", "contents": "cdfbin_p(${1:s}, ${2:xn}, ${3:pr})" },
        { "trigger": "cdfbin_pr", "contents": "cdfbin_pr(${1:p}, ${2:s}, ${3:xn})" },
        { "trigger": "cdfbin_s", "contents": "cdfbin_s(${1:p}, ${2:xn}, ${3:pr})" },
        { "trigger": "cdfbin_xn", "contents": "cdfbin_xn(${1:p}, ${2:s}, ${3:pr})" },
        { "trigger": "cdfchi_p", "contents": "cdfchi_p(${1:x}, ${2:df})" },
        { "trigger": "cdfchi_x", "contents": "cdfchi_x(${1:p}, ${2:df})" },
        { "trigger": "cdfgam_p", "contents": "cdfgam_p(${1:x}, ${2:shape}, ${3:scale})" },
        { "trigger": "cdfgam_x", "contents": "cdfgam_x(${1:p}, ${2:shape}, ${3:scale})" },
        { "trigger": "cdfnor_p", "contents": "cdfnor_p(${1:x}, ${2:mean}, ${3:sd})" },
        { "trigger": "cdfnor_x", "contents": "cdfnor_x(${1:p}, ${2:mean}, ${3:sd})" },
        { "trigger": "cdft_p", "contents": "cdft_p(${1:t}, ${2:df})" },
        { "trigger": "cdft_t", "contents": "cdft_t(${1:p}, ${2:df})" },
        { "trigger": "ceemdan", "contents": "ceemdan(${1:x}, ${2:nimf}, ${3:nrep}, ${4:noise}, ${5:opt}, ${6:dims})" },
        { "trigger": "ceil", "contents": "ceil(${1:values})" },
        { "trigger": "center_finite_diff", "contents": "center_finite_diff(${1:q}, ${2:r}, ${3:rCyclic}, ${4:opt})" },
        { "trigger": "center_finite_diff_n", "contents": "center_finite_diff_n(${1:q}, ${2:r}, ${3:rCyclic}, ${4:opt}, ${5:dim})" },
        { "trigger": "cfftb", "contents": "cfftb(${1:cf}, ${2:cfopt})" },
        { "trigger": "cfftf", "contents": "cfftf(${1:xr}, ${2:xi}, ${3:opt})" },
        { "trigger": "cfftf_frq_reorder", "contents": "cfftf_frq_reorder(${1:cf})" },
        { "trigger": "charactertodouble", "contents": "charactertodouble(${1:char_val})" },
        { "trigger": "charactertofloat", "contents": "charactertofloat(${1:char_val})" },
        { "trigger": "charactertointeger", "contents": "charactertointeger(${1:char_val})" },
        { "trigger": "charactertolong", "contents": "charactertolong(${1:char_val})" },
        { "trigger": "charactertoshort", "contents": "charactertoshort(${1:char_val})" },
        { "trigger": "charactertostring", "contents": "charactertostring(${1:char_val})" },
        { "trigger": "chartodouble", "contents": "chartodouble(${1:char_val})" },
        { "trigger": "chartofloat", "contents": "chartofloat(${1:char_val})" },
        { "trigger": "chartoint", "contents": "chartoint(${1:char_val})" },
        { "trigger": "chartointeger", "contents": "chartointeger(${1:char_val})" },
        { "trigger": "chartolong", "contents": "chartolong(${1:char_val})" },
        { "trigger": "chartoshort", "contents": "chartoshort(${1:char_val})" },
        { "trigger": "chartostring", "contents": "chartostring(${1:char_val})" },
        { "trigger": "chiinv", "contents": "chiinv(${1:p}, ${2:df})" },
        { "trigger": "cla_sq", "contents": "cla_sq(${1:strLeft}, ${2:strRight})" },
        { "trigger": "clear", "contents": "clear(${1:wks})" },
        { "trigger": "color_index_to_rgba", "contents": "color_index_to_rgba(${1:color_indexes})" },
        { "trigger": "conform", "contents": "conform(${1:x}, ${2:r}, ${3:ndim})" },
        { "trigger": "conform_dims", "contents": "conform_dims(${1:dims}, ${2:r}, ${3:ndim})" },
        { "trigger": "cos", "contents": "cos(${1:value})" },
        { "trigger": "cosh", "contents": "cosh(${1:value})" },
        { "trigger": "count_unique_values", "contents": "count_unique_values(${1:x})" },
        { "trigger": "count_unique_values_n", "contents": "count_unique_values_n(${1:x}, ${2:dim})" },
        { "trigger": "covcorm", "contents": "covcorm(${1:x}, ${2:iopt})" },
        { "trigger": "covcorm_xy", "contents": "covcorm_xy(${1:x}, ${2:y}, ${3:iopt})" },
        { "trigger": "craybinnumrec", "contents": "craybinnumrec(${1:path})" },
        { "trigger": "craybinrecread", "contents": "craybinrecread(${1:path}, ${2:rec_num}, ${3:rec_dims}, ${4:rec_type})" },
        { "trigger": "create_graphic", "contents": "create_graphic(${1:name}, ${2:class}, ${3:parent}, ${4:resources})" },
        { "trigger": "csa1", "contents": "csa1(${1:xi}, ${2:yi}, ${3:knots}, ${4:xo})" },
        { "trigger": "csa1d", "contents": "csa1d(${1:xi}, ${2:yi}, ${3:knots}, ${4:xo})" },
        { "trigger": "csa1s", "contents": "csa1s(${1:xi}, ${2:yi}, ${3:knots}, ${4:xo})" },
        { "trigger": "csa1x", "contents": "csa1x(${1:xi}, ${2:yi}, ${3:wts}, ${4:knots}, ${5:smth}, ${6:nderiv}, ${7:xo})" },
        { "trigger": "csa1xd", "contents": "csa1xd(${1:xi}, ${2:yi}, ${3:wts}, ${4:knots}, ${5:smth}, ${6:nderiv}, ${7:xo})" },
        { "trigger": "csa1xs", "contents": "csa1xs(${1:xi}, ${2:yi}, ${3:wts}, ${4:knots}, ${5:smth}, ${6:nderiv}, ${7:xo})" },
        { "trigger": "csa2", "contents": "csa2(${1:xi}, ${2:yi}, ${3:zi}, ${4:knots}, ${5:xo}, ${6:yo})" },
        { "trigger": "csa2d", "contents": "csa2d(${1:xi}, ${2:yi}, ${3:zi}, ${4:knots}, ${5:xo}, ${6:yo})" },
        { "trigger": "csa2l", "contents": "csa2l(${1:xi}, ${2:yi}, ${3:zi}, ${4:knots}, ${5:xo}, ${6:yo})" },
        { "trigger": "csa2ld", "contents": "csa2ld(${1:xi}, ${2:yi}, ${3:zi}, ${4:knots}, ${5:xo}, ${6:yo})" },
        { "trigger": "csa2ls", "contents": "csa2ls(${1:xi}, ${2:yi}, ${3:zi}, ${4:knots}, ${5:xo}, ${6:yo})" },
        { "trigger": "csa2lx", "contents": "csa2lx(${1:xi}, ${2:yi}, ${3:zi}, ${4:wts}, ${5:knots}, ${6:smth}, ${7:nderiv}, ${8:xo}, ${9:yo})" },
        { "trigger": "csa2lxd", "contents": "csa2lxd(${1:xi}, ${2:yi}, ${3:zi}, ${4:wts}, ${5:knots}, ${6:smth}, ${7:nderiv}, ${8:xo}, ${9:yo})" },
        { "trigger": "csa2lxs", "contents": "csa2lxs(${1:xi}, ${2:yi}, ${3:zi}, ${4:wts}, ${5:knots}, ${6:smth}, ${7:nderiv}, ${8:xo}, ${9:yo})" },
        { "trigger": "csa2s", "contents": "csa2s(${1:xi}, ${2:yi}, ${3:zi}, ${4:knots}, ${5:xo}, ${6:yo})" },
        { "trigger": "csa2x", "contents": "csa2x(${1:xi}, ${2:yi}, ${3:zi}, ${4:wts}, ${5:knots}, ${6:smth}, ${7:nderiv}, ${8:xo}, ${9:yo})" },
        { "trigger": "csa2xd", "contents": "csa2xd(${1:xi}, ${2:yi}, ${3:zi}, ${4:wts}, ${5:knots}, ${6:smth}, ${7:nderiv}, ${8:xo}, ${9:yo})" },
        { "trigger": "csa2xs", "contents": "csa2xs(${1:xi}, ${2:yi}, ${3:zi}, ${4:wts}, ${5:knots}, ${6:smth}, ${7:nderiv}, ${8:xo}, ${9:yo})" },
        { "trigger": "csa3", "contents": "csa3(${1:xi}, ${2:yi}, ${3:zi}, ${4:ui}, ${5:knots}, ${6:xo}, ${7:yo}, ${8:zo})" },
        { "trigger": "csa3d", "contents": "csa3d(${1:xi}, ${2:yi}, ${3:zi}, ${4:ui}, ${5:knots}, ${6:xo}, ${7:yo}, ${8:zo})" },
        { "trigger": "csa3l", "contents": "csa3l(${1:xi}, ${2:yi}, ${3:zi}, ${4:ui}, ${5:knots}, ${6:xo}, ${7:yo}, ${8:zo})" },
        { "trigger": "csa3ld", "contents": "csa3ld(${1:xi}, ${2:yi}, ${3:zi}, ${4:ui}, ${5:knots}, ${6:xo}, ${7:yo}, ${8:zo})" },
        { "trigger": "csa3ls", "contents": "csa3ls(${1:xi}, ${2:yi}, ${3:zi}, ${4:ui}, ${5:knots}, ${6:xo}, ${7:yo}, ${8:zo})" },
        { "trigger": "csa3lx", "contents": "csa3lx(${1:xi}, ${2:yi}, ${3:zi}, ${4:ui}, ${5:wts}, ${6:knots}, ${7:smth}, ${8:nderiv}, ${9:xo}, ${10:yo}, ${11:zo})" },
        { "trigger": "csa3lxd", "contents": "csa3lxd(${1:xi}, ${2:yi}, ${3:zi}, ${4:ui}, ${5:wts}, ${6:knots}, ${7:smth}, ${8:nderiv}, ${9:xo}, ${10:yo}, ${11:zo})" },
        { "trigger": "csa3lxs", "contents": "csa3lxs(${1:xi}, ${2:yi}, ${3:zi}, ${4:ui}, ${5:wts}, ${6:knots}, ${7:smth}, ${8:nderiv}, ${9:xo}, ${10:yo}, ${11:zo})" },
        { "trigger": "csa3s", "contents": "csa3s(${1:xi}, ${2:yi}, ${3:zi}, ${4:ui}, ${5:knots}, ${6:xo}, ${7:yo}, ${8:zo})" },
        { "trigger": "csa3x", "contents": "csa3x(${1:xi}, ${2:yi}, ${3:zi}, ${4:ui}, ${5:wts}, ${6:knots}, ${7:smth}, ${8:nderiv}, ${9:xo}, ${10:yo}, ${11:zo})" },
        { "trigger": "csa3xd", "contents": "csa3xd(${1:xi}, ${2:yi}, ${3:zi}, ${4:ui}, ${5:wts}, ${6:knots}, ${7:smth}, ${8:nderiv}, ${9:xo}, ${10:yo}, ${11:zo})" },
        { "trigger": "csa3xs", "contents": "csa3xs(${1:xi}, ${2:yi}, ${3:zi}, ${4:ui}, ${5:wts}, ${6:knots}, ${7:smth}, ${8:nderiv}, ${9:xo}, ${10:yo}, ${11:zo})" },
        { "trigger": "csc2s", "contents": "csc2s(${1:x}, ${2:y}, ${3:z})" },
        { "trigger": "csgetp", "contents": "csgetp(${1:pnam})" },
        { "trigger": "css2c", "contents": "css2c(${1:lat}, ${2:lon})" },
        { "trigger": "cssetp", "contents": "cssetp(${1:pnam}, ${2:pval})" },
        { "trigger": "cssgrid", "contents": "cssgrid(${1:rlat}, ${2:rlon}, ${3:fval}, ${4:plat}, ${5:plon})" },
        { "trigger": "csstri", "contents": "csstri(${1:rlat}, ${2:rlon})" },
        { "trigger": "csvoro", "contents": "csvoro(${1:rlati}, ${2:rloni}, ${3:index}, ${4:cflag}, ${5:rlato}, ${6:rlono}, ${7:alen}, ${8:nca}, ${9:numv}, ${10:nv})" },
        { "trigger": "cumsum", "contents": "cumsum(${1:x}, ${2:opt})" },
        { "trigger": "cz2ccm", "contents": "cz2ccm(${1:ps}, ${2:phis}, ${3:tv}, ${4:p0}, ${5:hyam}, ${6:hybm}, ${7:hyai}, ${8:hybi})" },
        { "trigger": "datatondc", "contents": "datatondc(${1:plot}, ${2:x_in}, ${3:y_in}, ${4:x_out}, ${5:y_out})" },
        { "trigger": "day_of_week", "contents": "day_of_week(${1:year}, ${2:month}, ${3:day})" },
        { "trigger": "day_of_year", "contents": "day_of_year(${1:year}, ${2:month}, ${3:day})" },
        { "trigger": "days_in_month", "contents": "days_in_month(${1:year}, ${2:month})" },
        { "trigger": "default_fillvalue", "contents": "default_fillvalue(${1:var_type})" },
        { "trigger": "delete", "contents": "delete(${1:data})" },
        { "trigger": "depth_to_pres", "contents": "depth_to_pres(${1:z}, ${2:opt})" },
        { "trigger": "destroy", "contents": "destroy(${1:objects})" },
        { "trigger": "determinant", "contents": "determinant(${1:x})" },
        { "trigger": "dewtemp_trh", "contents": "dewtemp_trh(${1:tk}, ${2:rh})" },
        { "trigger": "dgeevx_lapack", "contents": "dgeevx_lapack(${1:Q}, ${2:balanc}, ${3:jobvl}, ${4:jobvr}, ${5:sense}, ${6:opt})" },
        { "trigger": "dim_acumrun_n", "contents": "dim_acumrun_n(${1:x}, ${2:lrun}, ${3:opt}, ${4:dims})" },
        { "trigger": "dim_avg", "contents": "dim_avg(${1:x})" },
        { "trigger": "dim_avg_n", "contents": "dim_avg_n(${1:x}, ${2:dims})" },
        { "trigger": "dim_avg_wgt", "contents": "dim_avg_wgt(${1:x}, ${2:w}, ${3:opt})" },
        { "trigger": "dim_avg_wgt_n", "contents": "dim_avg_wgt_n(${1:x}, ${2:w}, ${3:opt}, ${4:dim})" },
        { "trigger": "dim_cumsum", "contents": "dim_cumsum(${1:x}, ${2:opt})" },
        { "trigger": "dim_cumsum_n", "contents": "dim_cumsum_n(${1:x}, ${2:opt}, ${3:dims})" },
        { "trigger": "dim_gamfit_n", "contents": "dim_gamfit_n(${1:x}, ${2:optgam}, ${3:dims})" },
        { "trigger": "dim_gbits", "contents": "dim_gbits(${1:npack}, ${2:ibit}, ${3:nbits}, ${4:nskip}, ${5:iter})" },
        { "trigger": "dim_max", "contents": "dim_max(${1:x})" },
        { "trigger": "dim_max_n", "contents": "dim_max_n(${1:x}, ${2:dims})" },
        { "trigger": "dim_median", "contents": "dim_median(${1:x})" },
        { "trigger": "dim_median_n", "contents": "dim_median_n(${1:x}, ${2:dims})" },
        { "trigger": "dim_min", "contents": "dim_min(${1:x})" },
        { "trigger": "dim_min_n", "contents": "dim_min_n(${1:x}, ${2:dims})" },
        { "trigger": "dim_num", "contents": "dim_num(${1:x})" },
        { "trigger": "dim_num_n", "contents": "dim_num_n(${1:x}, ${2:dims})" },
        { "trigger": "dim_numrun_n", "contents": "dim_numrun_n(${1:x}, ${2:opt}, ${3:dim})" },
        { "trigger": "dim_pqsort", "contents": "dim_pqsort(${1:x}, ${2:kflag})" },
        { "trigger": "dim_pqsort_n", "contents": "dim_pqsort_n(${1:x}, ${2:kflag}, ${3:dim})" },
        { "trigger": "dim_product", "contents": "dim_product(${1:x})" },
        { "trigger": "dim_product_n", "contents": "dim_product_n(${1:x}, ${2:dims})" },
        { "trigger": "dim_rmsd", "contents": "dim_rmsd(${1:x}, ${2:y})" },
        { "trigger": "dim_rmsd_n", "contents": "dim_rmsd_n(${1:x}, ${2:y}, ${3:dims})" },
        { "trigger": "dim_rmvmean", "contents": "dim_rmvmean(${1:x})" },
        { "trigger": "dim_rmvmean_n", "contents": "dim_rmvmean_n(${1:x}, ${2:dims})" },
        { "trigger": "dim_rmvmed", "contents": "dim_rmvmed(${1:x})" },
        { "trigger": "dim_rmvmed_n", "contents": "dim_rmvmed_n(${1:x}, ${2:dims})" },
        { "trigger": "dim_spi_n", "contents": "dim_spi_n(${1:x}, ${2:nrun}, ${3:opt}, ${4:dims})" },
        { "trigger": "dim_standardize", "contents": "dim_standardize(${1:x}, ${2:opt})" },
        { "trigger": "dim_standardize_n", "contents": "dim_standardize_n(${1:x}, ${2:opt}, ${3:dims})" },
        { "trigger": "dim_stat4", "contents": "dim_stat4(${1:x})" },
        { "trigger": "dim_stat4_n", "contents": "dim_stat4_n(${1:x}, ${2:dims})" },
        { "trigger": "dim_stddev", "contents": "dim_stddev(${1:x})" },
        { "trigger": "dim_stddev_n", "contents": "dim_stddev_n(${1:x}, ${2:dims})" },
        { "trigger": "dim_sum", "contents": "dim_sum(${1:x})" },
        { "trigger": "dim_sum_n", "contents": "dim_sum_n(${1:x}, ${2:dims})" },
        { "trigger": "dim_sum_wgt", "contents": "dim_sum_wgt(${1:x}, ${2:w}, ${3:opt})" },
        { "trigger": "dim_sum_wgt_n", "contents": "dim_sum_wgt_n(${1:x}, ${2:w}, ${3:opt}, ${4:dim})" },
        { "trigger": "dim_variance", "contents": "dim_variance(${1:x})" },
        { "trigger": "dim_variance_n", "contents": "dim_variance_n(${1:x}, ${2:dims})" },
        { "trigger": "dimsizes", "contents": "dimsizes(${1:var})" },
        { "trigger": "doubletobyte", "contents": "doubletobyte(${1:double_val})" },
        { "trigger": "doubletochar", "contents": "doubletochar(${1:double_val})" },
        { "trigger": "doubletocharacter", "contents": "doubletocharacter(${1:double_val})" },
        { "trigger": "doubletofloat", "contents": "doubletofloat(${1:double_val})" },
        { "trigger": "doubletoint", "contents": "doubletoint(${1:double_val})" },
        { "trigger": "doubletointeger", "contents": "doubletointeger(${1:double_val})" },
        { "trigger": "doubletolong", "contents": "doubletolong(${1:double_val})" },
        { "trigger": "doubletoshort", "contents": "doubletoshort(${1:double_val})" },
        { "trigger": "dpres_hybrid_ccm", "contents": "dpres_hybrid_ccm(${1:ps}, ${2:p0}, ${3:hyai}, ${4:hybi})" },
        { "trigger": "dpres_plevel", "contents": "dpres_plevel(${1:plev}, ${2:psfc}, ${3:ptop}, ${4:iopt})" },
        { "trigger": "draw", "contents": "draw(${1:objects})" },
        { "trigger": "draw_color_palette", "contents": "draw_color_palette(${1:wks}, ${2:colors}, ${3:opt})" },
        { "trigger": "dsgetp", "contents": "dsgetp(${1:pnam})" },
        { "trigger": "dsgrid2", "contents": "dsgrid2(${1:x}, ${2:y}, ${3:z}, ${4:xo}, ${5:yo})" },
        { "trigger": "dsgrid2d", "contents": "dsgrid2d(${1:x}, ${2:y}, ${3:z}, ${4:xo}, ${5:yo})" },
        { "trigger": "dsgrid2s", "contents": "dsgrid2s(${1:x}, ${2:y}, ${3:z}, ${4:xo}, ${5:yo})" },
        { "trigger": "dsgrid3", "contents": "dsgrid3(${1:x}, ${2:y}, ${3:z}, ${4:u}, ${5:xo}, ${6:yo}, ${7:zo})" },
        { "trigger": "dsgrid3d", "contents": "dsgrid3d(${1:x}, ${2:y}, ${3:z}, ${4:u}, ${5:xo}, ${6:yo}, ${7:zo})" },
        { "trigger": "dsgrid3s", "contents": "dsgrid3s(${1:x}, ${2:y}, ${3:z}, ${4:u}, ${5:xo}, ${6:yo}, ${7:zo})" },
        { "trigger": "dspnt2", "contents": "dspnt2(${1:x}, ${2:y}, ${3:z}, ${4:xo}, ${5:yo})" },
        { "trigger": "dspnt2d", "contents": "dspnt2d(${1:x}, ${2:y}, ${3:z}, ${4:xo}, ${5:yo})" },
        { "trigger": "dspnt2s", "contents": "dspnt2s(${1:x}, ${2:y}, ${3:z}, ${4:xo}, ${5:yo})" },
        { "trigger": "dspnt3", "contents": "dspnt3(${1:x}, ${2:y}, ${3:z}, ${4:u}, ${5:xo}, ${6:yo}, ${7:zo})" },
        { "trigger": "dspnt3d", "contents": "dspnt3d(${1:x}, ${2:y}, ${3:z}, ${4:u}, ${5:xo}, ${6:yo}, ${7:zo})" },
        { "trigger": "dspnt3s", "contents": "dspnt3s(${1:x}, ${2:y}, ${3:z}, ${4:u}, ${5:xo}, ${6:yo}, ${7:zo})" },
        { "trigger": "dssetp", "contents": "dssetp(${1:pnam}, ${2:pval})" },
        { "trigger": "dtrend", "contents": "dtrend(${1:y}, ${2:return_info})" },
        { "trigger": "dtrend_msg", "contents": "dtrend_msg(${1:x}, ${2:y}, ${3:remove_mean}, ${4:return_info})" },
        { "trigger": "dtrend_msg_n", "contents": "dtrend_msg_n(${1:x}, ${2:y}, ${3:remove_mean}, ${4:return_info}, ${5:dim})" },
        { "trigger": "dtrend_n", "contents": "dtrend_n(${1:y}, ${2:return_info}, ${3:dim})" },
        { "trigger": "dtrend_quadratic", "contents": "dtrend_quadratic(${1:y}, ${2:option})" },
        { "trigger": "dtrend_quadratic_msg_n", "contents": "dtrend_quadratic_msg_n(${1:y}, ${2:remove_mean}, ${3:return_info}, ${4:dim})" },
        { "trigger": "dv2uvf", "contents": "dv2uvf(${1:dv}, ${2:ud}, ${3:vd})" },
        { "trigger": "dv2uvg", "contents": "dv2uvg(${1:dv}, ${2:ud}, ${3:vd})" },
        { "trigger": "dz_height", "contents": "dz_height(${1:z}, ${2:zsfc}, ${3:ztop}, ${4:iopt})" },
        { "trigger": "echo_off", "contents": "echo_off()" },
        { "trigger": "echo_on", "contents": "echo_on()" },
        { "trigger": "eemd", "contents": "eemd(${1:x}, ${2:nimf}, ${3:nrep}, ${4:noise}, ${5:opt}, ${6:dims})" },
        { "trigger": "eof2data", "contents": "eof2data(${1:ev}, ${2:ev_ts})" },
        { "trigger": "eof2data_n", "contents": "eof2data_n(${1:ev}, ${2:ev_ts}, ${3:dim})" },
        { "trigger": "eof_varimax", "contents": "eof_varimax(${1:evec})" },
        { "trigger": "eofcor", "contents": "eofcor(${1:data}, ${2:neval})" },
        { "trigger": "eofcor_pcmsg", "contents": "eofcor_pcmsg(${1:data}, ${2:neval}, ${3:pcrit})" },
        { "trigger": "eofcor_ts", "contents": "eofcor_ts(${1:data}, ${2:evec})" },
        { "trigger": "eofcov", "contents": "eofcov(${1:data}, ${2:neval})" },
        { "trigger": "eofcov_pcmsg", "contents": "eofcov_pcmsg(${1:data}, ${2:neval}, ${3:pcrit})" },
        { "trigger": "eofcov_ts", "contents": "eofcov_ts(${1:data}, ${2:evec})" },
        { "trigger": "eofunc", "contents": "eofunc(${1:data}, ${2:neval}, ${3:optEOF})" },
        { "trigger": "eofunc_n", "contents": "eofunc_n(${1:data}, ${2:neval}, ${3:optEOF}, ${4:dim})" },
        { "trigger": "eofunc_ts", "contents": "eofunc_ts(${1:data}, ${2:evec}, ${3:optETS})" },
        { "trigger": "eofunc_ts_n", "contents": "eofunc_ts_n(${1:data}, ${2:evec}, ${3:optETS}, ${4:dim})" },
        { "trigger": "eofunc_varimax", "contents": "eofunc_varimax(${1:evec}, ${2:optEVX})" },
        { "trigger": "equiv_sample_size", "contents": "equiv_sample_size(${1:x}, ${2:siglvl}, ${3:opt})" },
        { "trigger": "erf", "contents": "erf(${1:x})" },
        { "trigger": "erfc", "contents": "erfc(${1:x})" },
        { "trigger": "esacr", "contents": "esacr(${1:x}, ${2:mxlag})" },
        { "trigger": "esacr_n", "contents": "esacr_n(${1:x}, ${2:mxlag}, ${3:dim})" },
        { "trigger": "esacv", "contents": "esacv(${1:x}, ${2:mxlag})" },
        { "trigger": "esccr", "contents": "esccr(${1:x}, ${2:y}, ${3:mxlag})" },
        { "trigger": "esccv", "contents": "esccv(${1:x}, ${2:y}, ${3:mxlag})" },
        { "trigger": "escorc", "contents": "escorc(${1:x}, ${2:y})" },
        { "trigger": "escorc_n", "contents": "escorc_n(${1:x}, ${2:y}, ${3:dims_x}, ${4:dims_y})" },
        { "trigger": "escovc", "contents": "escovc(${1:x}, ${2:y})" },
        { "trigger": "exit", "contents": "exit()" },
        { "trigger": "exp", "contents": "exp(${1:value})" },
        { "trigger": "exp_tapersh", "contents": "exp_tapersh(${1:a}, ${2:b}, ${3:N}, ${4:r})" },
        { "trigger": "exp_tapersh_wgts", "contents": "exp_tapersh_wgts(${1:M}, ${2:N}, ${3:r})" },
        { "trigger": "exp_tapershC", "contents": "exp_tapershC(${1:ab}, ${2:N}, ${3:r})" },
        { "trigger": "extval_mlegev", "contents": "extval_mlegev(${1:x}, ${2:dims}, ${3:opt})" },
        { "trigger": "ezfftb", "contents": "ezfftb(${1:cf}, ${2:xbar})" },
        { "trigger": "ezfftb_n", "contents": "ezfftb_n(${1:cf}, ${2:xbar}, ${3:dim})" },
        { "trigger": "ezfftf", "contents": "ezfftf(${1:x})" },
        { "trigger": "ezfftf_n", "contents": "ezfftf_n(${1:x}, ${2:dim})" },
        { "trigger": "f2fosh", "contents": "f2fosh(${1:grid})" },
        { "trigger": "f2foshv", "contents": "f2foshv(${1:ureg}, ${2:vreg}, ${3:uoff}, ${4:voff})" },
        { "trigger": "f2fsh", "contents": "f2fsh(${1:grid}, ${2:outdims})" },
        { "trigger": "f2fshv", "contents": "f2fshv(${1:ua}, ${2:va}, ${3:ub}, ${4:vb})" },
        { "trigger": "f2gsh", "contents": "f2gsh(${1:grid}, ${2:outdims}, ${3:twave})" },
        { "trigger": "f2gshv", "contents": "f2gshv(${1:ua}, ${2:va}, ${3:ub}, ${4:vb}, ${5:twave})" },
        { "trigger": "fabs", "contents": "fabs(${1:value})" },
        { "trigger": "fbindirread", "contents": "fbindirread(${1:path}, ${2:rec_num}, ${3:rec_dims}, ${4:rec_type})" },
        { "trigger": "fbindirwrite", "contents": "fbindirwrite(${1:path}, ${2:var})" },
        { "trigger": "fbinnumrec", "contents": "fbinnumrec(${1:path})" },
        { "trigger": "fbinread", "contents": "fbinread(${1:filepath}, ${2:rec_dims}, ${3:rec_type})" },
        { "trigger": "fbinrecread", "contents": "fbinrecread(${1:path}, ${2:rec_num}, ${3:rec_dims}, ${4:rec_type})" },
        { "trigger": "fbinrecwrite", "contents": "fbinrecwrite(${1:path}, ${2:rec_num}, ${3:var})" },
        { "trigger": "fbinwrite", "contents": "fbinwrite(${1:filepath}, ${2:value})" },
        { "trigger": "fft2db", "contents": "fft2db(${1:coef})" },
        { "trigger": "fft2df", "contents": "fft2df(${1:x})" },
        { "trigger": "fftshift", "contents": "fftshift(${1:x}, ${2:mode})" },
        { "trigger": "fileattdef", "contents": "fileattdef(${1:thefile}, ${2:variable})" },
        { "trigger": "filechunkdimdef", "contents": "filechunkdimdef(${1:thefile}, ${2:dim_names}, ${3:dim_sizes}, ${4:dim_unlimited})" },
        { "trigger": "filedimdef", "contents": "filedimdef(${1:thefile}, ${2:dim_names}, ${3:dim_sizes}, ${4:dim_unlimited})" },
        { "trigger": "fileexists", "contents": "fileexists(${1:file_path})" },
        { "trigger": "filegrpdef", "contents": "filegrpdef(${1:thefile}, ${2:grp_names})" },
        { "trigger": "filevarattdef", "contents": "filevarattdef(${1:thefile}, ${2:varnames}, ${3:variable})" },
        { "trigger": "filevarchunkdef", "contents": "filevarchunkdef(${1:thefile}, ${2:var_name}, ${3:chunk_dim_sizes})" },
        { "trigger": "filevarcompressleveldef", "contents": "filevarcompressleveldef(${1:thefile}, ${2:var_name}, ${3:compressLevel})" },
        { "trigger": "filevardef", "contents": "filevardef(${1:thefile}, ${2:var_names}, ${3:var_types}, ${4:dim_names})" },
        { "trigger": "filevardimsizes", "contents": "filevardimsizes(${1:thefile}, ${2:varname})" },
        { "trigger": "filwgts_lancos", "contents": "filwgts_lancos(${1:nwt}, ${2:ihp}, ${3:fca}, ${4:fcb}, ${5:nsigma})" },
        { "trigger": "filwgts_lanczos", "contents": "filwgts_lanczos(${1:nwt}, ${2:ihp}, ${3:fca}, ${4:fcb}, ${5:nsigma})" },
        { "trigger": "filwgts_normal", "contents": "filwgts_normal(${1:nwt}, ${2:sigma}, ${3:option})" },
        { "trigger": "floattobyte", "contents": "floattobyte(${1:float_val})" },
        { "trigger": "floattochar", "contents": "floattochar(${1:float_val})" },
        { "trigger": "floattocharacter", "contents": "floattocharacter(${1:float_val})" },
        { "trigger": "floattoint", "contents": "floattoint(${1:float_val})" },
        { "trigger": "floattointeger", "contents": "floattointeger(${1:float_val})" },
        { "trigger": "floattolong", "contents": "floattolong(${1:float_val})" },
        { "trigger": "floattoshort", "contents": "floattoshort(${1:float_val})" },
        { "trigger": "floor", "contents": "floor(${1:values})" },
        { "trigger": "fluxEddy", "contents": "fluxEddy(${1:x}, ${2:y})" },
        { "trigger": "fo2fsh", "contents": "fo2fsh(${1:grid})" },
        { "trigger": "fo2fshv", "contents": "fo2fshv(${1:uoff}, ${2:voff}, ${3:ureg}, ${4:vreg})" },
        { "trigger": "fourier_info", "contents": "fourier_info(${1:x}, ${2:nhx}, ${3:sclPhase})" },
        { "trigger": "frame", "contents": "frame(${1:wks})" },
        { "trigger": "fspan", "contents": "fspan(${1:start}, ${2:finish}, ${3:npts})" },
        { "trigger": "ftcurv", "contents": "ftcurv(${1:xi}, ${2:yi}, ${3:xo})" },
        { "trigger": "ftcurvd", "contents": "ftcurvd(${1:xi}, ${2:yi}, ${3:xo})" },
        { "trigger": "ftcurvi", "contents": "ftcurvi(${1:xl}, ${2:xr}, ${3:xi}, ${4:yi})" },
        { "trigger": "ftcurvp", "contents": "ftcurvp(${1:xi}, ${2:yi}, ${3:p}, ${4:xo})" },
        { "trigger": "ftcurvpi", "contents": "ftcurvpi(${1:xl}, ${2:xr}, ${3:p}, ${4:xi}, ${5:yi})" },
        { "trigger": "ftcurvps", "contents": "ftcurvps(${1:xi}, ${2:yi}, ${3:p}, ${4:d}, ${5:xo})" },
        { "trigger": "ftcurvs", "contents": "ftcurvs(${1:xi}, ${2:yi}, ${3:d}, ${4:xo})" },
        { "trigger": "ftest", "contents": "ftest(${1:var1}, ${2:s1}, ${3:var2}, ${4:s2}, ${5:opt})" },
        { "trigger": "ftgetp", "contents": "ftgetp(${1:pnam})" },
        { "trigger": "ftkurv", "contents": "ftkurv(${1:xi}, ${2:yi}, ${3:t}, ${4:xo}, ${5:yo})" },
        { "trigger": "ftkurvd", "contents": "ftkurvd(${1:xi}, ${2:yi}, ${3:t}, ${4:xo}, ${5:yo}, ${6:xd}, ${7:yd}, ${8:xdd}, ${9:ydd})" },
        { "trigger": "ftkurvp", "contents": "ftkurvp(${1:xi}, ${2:yi}, ${3:t}, ${4:xo}, ${5:yo})" },
        { "trigger": "ftkurvpd", "contents": "ftkurvpd(${1:xi}, ${2:yi}, ${3:t}, ${4:xo}, ${5:yo}, ${6:xd}, ${7:yd}, ${8:xdd}, ${9:ydd})" },
        { "trigger": "ftsetp", "contents": "ftsetp(${1:pnam}, ${2:pval})" },
        { "trigger": "ftsurf", "contents": "ftsurf(${1:xi}, ${2:yi}, ${3:zi}, ${4:xo}, ${5:yo})" },
        { "trigger": "g2fsh", "contents": "g2fsh(${1:grid}, ${2:outdims})" },
        { "trigger": "g2fshv", "contents": "g2fshv(${1:ua}, ${2:va}, ${3:ub}, ${4:vb})" },
        { "trigger": "g2gsh", "contents": "g2gsh(${1:grid}, ${2:outdims}, ${3:twave})" },
        { "trigger": "g2gshv", "contents": "g2gshv(${1:ua}, ${2:va}, ${3:ub}, ${4:vb}, ${5:twave})" },
        { "trigger": "gamma", "contents": "gamma(${1:x})" },
        { "trigger": "gammainc", "contents": "gammainc(${1:x}, ${2:a})" },
        { "trigger": "gaus", "contents": "gaus(${1:nlat})" },
        { "trigger": "gaus_lobat", "contents": "gaus_lobat(${1:nlat})" },
        { "trigger": "gaus_lobat_wgt", "contents": "gaus_lobat_wgt(${1:lat})" },
        { "trigger": "gc_aangle", "contents": "gc_aangle(${1:lat}, ${2:lon})" },
        { "trigger": "gc_clkwise", "contents": "gc_clkwise(${1:lat}, ${2:lon})" },
        { "trigger": "gc_dangle", "contents": "gc_dangle(${1:lat}, ${2:lon})" },
        { "trigger": "gc_inout", "contents": "gc_inout(${1:plat}, ${2:plon}, ${3:lat}, ${4:lon})" },
        { "trigger": "gc_latlon", "contents": "gc_latlon(${1:lat1}, ${2:lon1}, ${3:lat2}, ${4:lon2}, ${5:npts}, ${6:iu})" },
        { "trigger": "gc_onarc", "contents": "gc_onarc(${1:p_lat}, ${2:p_lon}, ${3:lat}, ${4:lon})" },
        { "trigger": "gc_pnt2gc", "contents": "gc_pnt2gc(${1:p_lat}, ${2:p_lon}, ${3:lat}, ${4:lon})" },
        { "trigger": "gc_qarea", "contents": "gc_qarea(${1:lat}, ${2:lon})" },
        { "trigger": "gc_tarea", "contents": "gc_tarea(${1:lat}, ${2:lon})" },
        { "trigger": "generate_2d_array", "contents": "generate_2d_array(${1:mlow}, ${2:mhigh}, ${3:dlow}, ${4:dhigh}, ${5:iseed}, ${6:dsizes})" },
        { "trigger": "get_bitfield", "contents": "get_bitfield(${1:packedvar}, ${2:startbit}, ${3:numbits})" },
        { "trigger": "get_color_rgba", "contents": "get_color_rgba(${1:color_map}, ${2:levels}, ${3:values})" },
        { "trigger": "get_cpu_time", "contents": "get_cpu_time()" },
        { "trigger": "get_isolines", "contents": "get_isolines(${1:contour_plot_id}, ${2:levels})" },
        { "trigger": "get_ncl_version", "contents": "get_ncl_version()" },
        { "trigger": "get_script_name", "contents": "get_script_name()" },
        { "trigger": "get_script_prefix_name", "contents": "get_script_prefix_name()" },
        { "trigger": "get_sphere_radius", "contents": "get_sphere_radius()" },
        { "trigger": "get_unique_values", "contents": "get_unique_values(${1:x})" },
        { "trigger": "getbitsone", "contents": "getbitsone(${1:npack})" },
        { "trigger": "getenv", "contents": "getenv(${1:env_name})" },
        { "trigger": "getfileatts", "contents": "getfileatts(${1:thefile})" },
        { "trigger": "getfiledimnames", "contents": "getfiledimnames(${1:thefile})" },
        { "trigger": "getfiledims", "contents": "getfiledims(${1:thefile})" },
        { "trigger": "getfiledimsizes", "contents": "getfiledimsizes(${1:thefile})" },
        { "trigger": "getfilegrpnames", "contents": "getfilegrpnames(${1:thefile})" },
        { "trigger": "getfilepath", "contents": "getfilepath(${1:thefile})" },
        { "trigger": "getfilevaratts", "contents": "getfilevaratts(${1:thefile}, ${2:varname})" },
        { "trigger": "getfilevarchunkdimsizes", "contents": "getfilevarchunkdimsizes(${1:thefile}, ${2:varname})" },
        { "trigger": "getfilevardimnames", "contents": "getfilevardimnames(${1:thefile}, ${2:varname})" },
        { "trigger": "getfilevardims", "contents": "getfilevardims(${1:thefile}, ${2:varname})" },
        { "trigger": "getfilevardimsizes", "contents": "getfilevardimsizes(${1:thefile}, ${2:varname})" },
        { "trigger": "getfilevarnames", "contents": "getfilevarnames(${1:thefile})" },
        { "trigger": "getfilevartypes", "contents": "getfilevartypes(${1:thefile}, ${2:var})" },
        { "trigger": "getvaratts", "contents": "getvaratts(${1:var})" },
        { "trigger": "getvardimnames", "contents": "getvardimnames(${1:var})" },
        { "trigger": "getvardims", "contents": "getvardims(${1:var})" },
        { "trigger": "getvardimsizes", "contents": "getvardimsizes(${1:var})" },
        { "trigger": "gradsf", "contents": "gradsf(${1:z}, ${2:gzx}, ${3:gzy})" },
        { "trigger": "gradsg", "contents": "gradsg(${1:z}, ${2:gzx}, ${3:gzy})" },
        { "trigger": "greg2jul", "contents": "greg2jul(${1:year}, ${2:month}, ${3:day}, ${4:hour})" },
        { "trigger": "grid2triple", "contents": "grid2triple(${1:x}, ${2:y}, ${3:z})" },
        { "trigger": "hlsrgb", "contents": "hlsrgb(${1:hls})" },
        { "trigger": "hsvrgb", "contents": "hsvrgb(${1:hsv})" },
        { "trigger": "hydro", "contents": "hydro(${1:p}, ${2:tkv}, ${3:zsfc})" },
        { "trigger": "hyi2hyo", "contents": "hyi2hyo(${1:p0}, ${2:hyai}, ${3:hybi}, ${4:ps}, ${5:xi}, ${6:hyao}, ${7:hybo}, ${8:intflg})" },
        { "trigger": "idsfft", "contents": "idsfft(${1:xc}, ${2:yc}, ${3:zc}, ${4:dim})" },
        { "trigger": "igradsf", "contents": "igradsf(${1:gzx}, ${2:gzy}, ${3:z})" },
        { "trigger": "igradsg", "contents": "igradsg(${1:gzx}, ${2:gzy}, ${3:z})" },
        { "trigger": "ilapsf", "contents": "ilapsf(${1:zlap}, ${2:zlmbda}, ${3:z})" },
        { "trigger": "ilapsg", "contents": "ilapsg(${1:zlap}, ${2:zlmbda}, ${3:z})" },
        { "trigger": "ilapvf", "contents": "ilapvf(${1:ulap}, ${2:vlap}, ${3:u}, ${4:v})" },
        { "trigger": "ilapvg", "contents": "ilapvg(${1:ulap}, ${2:vlap}, ${3:u}, ${4:v})" },
        { "trigger": "ind", "contents": "ind(${1:larray})" },
        { "trigger": "ind_resolve", "contents": "ind_resolve(${1:indices}, ${2:dsizes})" },
        { "trigger": "indStrSubset", "contents": "indStrSubset(${1:str}, ${2:str_subset})" },
        { "trigger": "int2p", "contents": "int2p(${1:pin}, ${2:xin}, ${3:pout}, ${4:linlog})" },
        { "trigger": "int2p_n", "contents": "int2p_n(${1:pin}, ${2:xin}, ${3:pout}, ${4:linlog}, ${5:pdim})" },
        { "trigger": "integertobyte", "contents": "integertobyte(${1:integer_val})" },
        { "trigger": "integertochar", "contents": "integertochar(${1:integer_val})" },
        { "trigger": "integertocharacter", "contents": "integertocharacter(${1:integer_val})" },
        { "trigger": "integertoshort", "contents": "integertoshort(${1:integer_val})" },
        { "trigger": "inttobyte", "contents": "inttobyte(${1:integer_val})" },
        { "trigger": "inttochar", "contents": "inttochar(${1:integer_val})" },
        { "trigger": "inttoshort", "contents": "inttoshort(${1:integer_val})" },
        { "trigger": "inverse_matrix", "contents": "inverse_matrix(${1:A})" },
        { "trigger": "is_string_numeric", "contents": "is_string_numeric(${1:arg})" },
        { "trigger": "isatt", "contents": "isatt(${1:var}, ${2:attnames})" },
        { "trigger": "isbigendian", "contents": "isbigendian()" },
        { "trigger": "isbyte", "contents": "isbyte(${1:arg})" },
        { "trigger": "ischar", "contents": "ischar(${1:arg})" },
        { "trigger": "isconform", "contents": "isconform(${1:x}, ${2:y})" },
        { "trigger": "iscoord", "contents": "iscoord(${1:var}, ${2:coord_names})" },
        { "trigger": "isdefined", "contents": "isdefined(${1:idn_names})" },
        { "trigger": "isdim", "contents": "isdim(${1:var}, ${2:dimnames})" },
        { "trigger": "isdimnamed", "contents": "isdimnamed(${1:var}, ${2:dim_nums})" },
        { "trigger": "isdouble", "contents": "isdouble(${1:arg})" },
        { "trigger": "isenumeric", "contents": "isenumeric(${1:arg})" },
        { "trigger": "isfile", "contents": "isfile(${1:arg})" },
        { "trigger": "isfilepresent", "contents": "isfilepresent(${1:file_path})" },
        { "trigger": "isfilevar", "contents": "isfilevar(${1:thefile}, ${2:varnames})" },
        { "trigger": "isfilevaratt", "contents": "isfilevaratt(${1:thefile}, ${2:varname}, ${3:attnames})" },
        { "trigger": "isfilevarcoord", "contents": "isfilevarcoord(${1:thefile}, ${2:varname}, ${3:coordname})" },
        { "trigger": "isfilevardim", "contents": "isfilevardim(${1:thefile}, ${2:varname}, ${3:dimnames})" },
        { "trigger": "isfloat", "contents": "isfloat(${1:arg})" },
        { "trigger": "isfunc", "contents": "isfunc(${1:func_names})" },
        { "trigger": "isgraphic", "contents": "isgraphic(${1:arg})" },
        { "trigger": "isint", "contents": "isint(${1:arg})" },
        { "trigger": "isint64", "contents": "isint64(${1:arg})" },
        { "trigger": "isinteger", "contents": "isinteger(${1:arg})" },
        { "trigger": "isleapyear", "contents": "isleapyear(${1:year})" },
        { "trigger": "islogical", "contents": "islogical(${1:arg})" },
        { "trigger": "islong", "contents": "islong(${1:arg})" },
        { "trigger": "ismissing", "contents": "ismissing(${1:data})" },
        { "trigger": "isnan_ieee", "contents": "isnan_ieee(${1:x})" },
        { "trigger": "isnumeric", "contents": "isnumeric(${1:arg})" },
        { "trigger": "ispan", "contents": "ispan(${1:start}, ${2:finish}, ${3:stride})" },
        { "trigger": "isproc", "contents": "isproc(${1:proc_names})" },
        { "trigger": "isscalar", "contents": "isscalar(${1:x})" },
        { "trigger": "isshort", "contents": "isshort(${1:arg})" },
        { "trigger": "issnumeric", "contents": "issnumeric(${1:arg})" },
        { "trigger": "isstring", "contents": "isstring(${1:arg})" },
        { "trigger": "isStrSubset", "contents": "isStrSubset(${1:str}, ${2:str_subset})" },
        { "trigger": "isubyte", "contents": "isubyte(${1:arg})" },
        { "trigger": "isuint", "contents": "isuint(${1:arg})" },
        { "trigger": "isuint64", "contents": "isuint64(${1:arg})" },
        { "trigger": "isulong", "contents": "isulong(${1:arg})" },
        { "trigger": "isunlimited", "contents": "isunlimited(${1:thefile}, ${2:dim_name})" },
        { "trigger": "isunsigned", "contents": "isunsigned(${1:arg})" },
        { "trigger": "isushort", "contents": "isushort(${1:arg})" },
        { "trigger": "isvar", "contents": "isvar(${1:varnames})" },
        { "trigger": "jul2greg", "contents": "jul2greg(${1:julian})" },
        { "trigger": "kde_n_test", "contents": "kde_n_test(${1:x}, ${2:bin}, ${3:dims})" },
        { "trigger": "kmeans_as136", "contents": "kmeans_as136(${1:x}, ${2:k}, ${3:opt})" },
        { "trigger": "kolsm2_n", "contents": "kolsm2_n(${1:x}, ${2:y}, ${3:dims})" },
        { "trigger": "kron_product", "contents": "kron_product(${1:a}, ${2:b})" },
        { "trigger": "lapsf", "contents": "lapsf(${1:z}, ${2:zlap})" },
        { "trigger": "lapsg", "contents": "lapsg(${1:z}, ${2:zlap})" },
        { "trigger": "lapvf", "contents": "lapvf(${1:u}, ${2:v}, ${3:ulap}, ${4:vlap})" },
        { "trigger": "lapvg", "contents": "lapvg(${1:u}, ${2:v}, ${3:ulap}, ${4:vlap})" },
        { "trigger": "latlon2utm", "contents": "latlon2utm(${1:latlon}, ${2:datum})" },
        { "trigger": "lclvl", "contents": "lclvl(${1:p}, ${2:tk}, ${3:tdk})" },
        { "trigger": "lderuvf", "contents": "lderuvf(${1:u}, ${2:v}, ${3:uy}, ${4:vy})" },
        { "trigger": "lderuvg", "contents": "lderuvg(${1:u}, ${2:v}, ${3:uy}, ${4:vy})" },
        { "trigger": "linint1", "contents": "linint1(${1:xi}, ${2:fi}, ${3:fiCyclic}, ${4:xo}, ${5:foOption})" },
        { "trigger": "linint1_n", "contents": "linint1_n(${1:xi}, ${2:fi}, ${3:fiCyclic}, ${4:xo}, ${5:foOption}, ${6:dim})" },
        { "trigger": "linint2", "contents": "linint2(${1:xi}, ${2:yi}, ${3:fi}, ${4:fiCyclicX}, ${5:xo}, ${6:yo}, ${7:foOption})" },
        { "trigger": "linint2_points", "contents": "linint2_points(${1:xi}, ${2:yi}, ${3:fi}, ${4:fiCyclicX}, ${5:xo}, ${6:yo}, ${7:Option})" },
        { "trigger": "linmsg", "contents": "linmsg(${1:x}, ${2:opt})" },
        { "trigger": "linmsg_n", "contents": "linmsg_n(${1:x}, ${2:opt}, ${3:dim})" },
        { "trigger": "linrood_latwgt", "contents": "linrood_latwgt(${1:nlat})" },
        { "trigger": "linrood_wgt", "contents": "linrood_wgt(${1:nlat})" },
        { "trigger": "list_files", "contents": "list_files()" },
        { "trigger": "list_filevars", "contents": "list_filevars(${1:filevar})" },
        { "trigger": "list_hlus", "contents": "list_hlus()" },
        { "trigger": "list_procfuncs", "contents": "list_procfuncs()" },
        { "trigger": "list_vars", "contents": "list_vars()" },
        { "trigger": "ListAppend", "contents": "ListAppend(${1:f}, ${2:v})" },
        { "trigger": "ListCount", "contents": "ListCount(${1:f})" },
        { "trigger": "ListGetType", "contents": "ListGetType(${1:f})" },
        { "trigger": "ListIndex", "contents": "ListIndex(${1:f}, ${2:v})" },
        { "trigger": "ListIndexFromName", "contents": "ListIndexFromName(${1:f}, ${2:vn})" },
        { "trigger": "ListPop", "contents": "ListPop(${1:f})" },
        { "trigger": "ListPush", "contents": "ListPush(${1:f}, ${2:v})" },
        { "trigger": "ListSetType", "contents": "ListSetType(${1:f}, ${2:option})" },
        { "trigger": "loadscript", "contents": "loadscript(${1:filename})" },
        { "trigger": "local_max", "contents": "local_max(${1:x}, ${2:cyclic}, ${3:delta})" },
        { "trigger": "local_min", "contents": "local_min(${1:x}, ${2:cyclic}, ${3:delta})" },
        { "trigger": "log", "contents": "log(${1:value})" },
        { "trigger": "log10", "contents": "log10(${1:value})" },
        { "trigger": "longtobyte", "contents": "longtobyte(${1:long_val})" },
        { "trigger": "longtochar", "contents": "longtochar(${1:long_val})" },
        { "trigger": "longtocharacter", "contents": "longtocharacter(${1:long_val})" },
        { "trigger": "longtoint", "contents": "longtoint(${1:long_val})" },
        { "trigger": "longtointeger", "contents": "longtointeger(${1:long_val})" },
        { "trigger": "longtoshort", "contents": "longtoshort(${1:long_val})" },
        { "trigger": "lspoly", "contents": "lspoly(${1:x}, ${2:y}, ${3:wgt}, ${4:n})" },
        { "trigger": "lspoly_n", "contents": "lspoly_n(${1:x}, ${2:y}, ${3:wgt}, ${4:n}, ${5:dim})" },
        { "trigger": "mask", "contents": "mask(${1:array}, ${2:marray}, ${3:mvalue})" },
        { "trigger": "max", "contents": "max(${1:value})" },
        { "trigger": "maxind", "contents": "maxind(${1:arg})" },
        { "trigger": "min", "contents": "min(${1:value})" },
        { "trigger": "minind", "contents": "minind(${1:arg})" },
        { "trigger": "mixed_layer_depth", "contents": "mixed_layer_depth(${1:pot_density}, ${2:kmt}, ${3:ht}, ${4:depth}, ${5:offset})" },
        { "trigger": "mixhum_ptd", "contents": "mixhum_ptd(${1:p}, ${2:tdk}, ${3:iswit})" },
        { "trigger": "mixhum_ptrh", "contents": "mixhum_ptrh(${1:p}, ${2:tk}, ${3:rh}, ${4:iswit})" },
        { "trigger": "mjo_cross_coh2pha", "contents": "mjo_cross_coh2pha(${1:STC}, ${2:opt})" },
        { "trigger": "mjo_cross_segment", "contents": "mjo_cross_segment(${1:x}, ${2:y}, ${3:opt})" },
        { "trigger": "moc_globe_atl", "contents": "moc_globe_atl(${1:lat_aux_grid}, ${2:a_wvel}, ${3:a_bolus}, ${4:a_submeso}, ${5:tlat}, ${6:rmlak})" },
        { "trigger": "monthday", "contents": "monthday(${1:year}, ${2:day})" },
        { "trigger": "namedcolor2rgb", "contents": "namedcolor2rgb(${1:colors})" },
        { "trigger": "namedcolor2rgba", "contents": "namedcolor2rgba(${1:colors})" },
        { "trigger": "natgrid", "contents": "natgrid(${1:x}, ${2:y}, ${3:z}, ${4:xo}, ${5:yo})" },
        { "trigger": "natgridd", "contents": "natgridd(${1:x}, ${2:y}, ${3:z}, ${4:xo}, ${5:yo})" },
        { "trigger": "natgrids", "contents": "natgrids(${1:x}, ${2:y}, ${3:z}, ${4:xo}, ${5:yo})" },
        { "trigger": "ncargpath", "contents": "ncargpath(${1:char})" },
        { "trigger": "ncargversion", "contents": "ncargversion()" },
        { "trigger": "ndctodata", "contents": "ndctodata(${1:plot}, ${2:x_in}, ${3:y_in}, ${4:x_out}, ${5:y_out})" },
        { "trigger": "ndtooned", "contents": "ndtooned(${1:val})" },
        { "trigger": "new", "contents": "new(${1:dimension_sizes}, ${2:vartype}, ${3:parameter})" },
        { "trigger": "NewList", "contents": "NewList(${1:s})" },
        { "trigger": "ngezlogo", "contents": "ngezlogo(${1:wks})" },
        { "trigger": "nggcog", "contents": "nggcog(${1:clat}, ${2:clon}, ${3:crad}, ${4:alat}, ${5:alon})" },
        { "trigger": "nggetp", "contents": "nggetp(${1:pnam})" },
        { "trigger": "nglogo", "contents": "nglogo(${1:wks}, ${2:x}, ${3:y}, ${4:size}, ${5:type}, ${6:col1}, ${7:col2})" },
        { "trigger": "ngsetp", "contents": "ngsetp(${1:pnam}, ${2:pval})" },
        { "trigger": "NhlAddAnnotation", "contents": "NhlAddAnnotation(${1:plot_id}, ${2:anno_view_id})" },
        { "trigger": "NhlAddData", "contents": "NhlAddData(${1:dcomms}, ${2:res_name}, ${3:data_items})" },
        { "trigger": "NhlAddOverlay", "contents": "NhlAddOverlay(${1:base_id}, ${2:transform_id}, ${3:after_id})" },
        { "trigger": "NhlAddPrimitive", "contents": "NhlAddPrimitive(${1:base_id}, ${2:primitive_ids}, ${3:before_id})" },
        { "trigger": "NhlAppGetDefaultParentId", "contents": "NhlAppGetDefaultParentId()" },
        { "trigger": "NhlChangeWorkstation", "contents": "NhlChangeWorkstation(${1:objects}, ${2:workstation})" },
        { "trigger": "NhlClassName", "contents": "NhlClassName(${1:objects})" },
        { "trigger": "NhlClearWorkstation", "contents": "NhlClearWorkstation(${1:wks})" },
        { "trigger": "NhlDataPolygon", "contents": "NhlDataPolygon(${1:objects}, ${2:style}, ${3:x}, ${4:y})" },
        { "trigger": "NhlDataPolyline", "contents": "NhlDataPolyline(${1:objects}, ${2:style}, ${3:x}, ${4:y})" },
        { "trigger": "NhlDataPolymarker", "contents": "NhlDataPolymarker(${1:objects}, ${2:style}, ${3:x}, ${4:y})" },
        { "trigger": "NhlDataToNDC", "contents": "NhlDataToNDC(${1:plot}, ${2:x_in}, ${3:y_in}, ${4:x_out}, ${5:y_out})" },
        { "trigger": "NhlDestroy", "contents": "NhlDestroy(${1:objects})" },
        { "trigger": "NhlDraw", "contents": "NhlDraw(${1:objects})" },
        { "trigger": "NhlFrame", "contents": "NhlFrame(${1:wks})" },
        { "trigger": "NhlFreeColor", "contents": "NhlFreeColor(${1:workstations}, ${2:color_index})" },
        { "trigger": "NhlGetBB", "contents": "NhlGetBB(${1:objects})" },
        { "trigger": "NhlGetClassResources", "contents": "NhlGetClassResources(${1:class_name}, ${2:filter_string})" },
        { "trigger": "NhlGetErrorObjectId", "contents": "NhlGetErrorObjectId()" },
        { "trigger": "NhlGetNamedColorIndex", "contents": "NhlGetNamedColorIndex(${1:wks}, ${2:color_name})" },
        { "trigger": "NhlGetParentId", "contents": "NhlGetParentId(${1:objs})" },
        { "trigger": "NhlGetParentWorkstation", "contents": "NhlGetParentWorkstation(${1:objs})" },
        { "trigger": "NhlGetWorkspaceObjectId", "contents": "NhlGetWorkspaceObjectId()" },
        { "trigger": "NhlIsAllocatedColor", "contents": "NhlIsAllocatedColor(${1:workstations}, ${2:color_index})" },
        { "trigger": "NhlIsApp", "contents": "NhlIsApp(${1:objects})" },
        { "trigger": "NhlIsDataComm", "contents": "NhlIsDataComm(${1:objects})" },
        { "trigger": "NhlIsDataItem", "contents": "NhlIsDataItem(${1:objects})" },
        { "trigger": "NhlIsDataSpec", "contents": "NhlIsDataSpec(${1:objects})" },
        { "trigger": "NhlIsTransform", "contents": "NhlIsTransform(${1:objects})" },
        { "trigger": "NhlIsView", "contents": "NhlIsView(${1:objects})" },
        { "trigger": "NhlIsWorkstation", "contents": "NhlIsWorkstation(${1:objects})" },
        { "trigger": "NhlName", "contents": "NhlName(${1:objects})" },
        { "trigger": "NhlNDCPolygon", "contents": "NhlNDCPolygon(${1:objects}, ${2:style}, ${3:x}, ${4:y})" },
        { "trigger": "NhlNDCPolyline", "contents": "NhlNDCPolyline(${1:objects}, ${2:style}, ${3:x}, ${4:y})" },
        { "trigger": "NhlNDCPolymarker", "contents": "NhlNDCPolymarker(${1:objects}, ${2:style}, ${3:x}, ${4:y})" },
        { "trigger": "NhlNDCToData", "contents": "NhlNDCToData(${1:plot}, ${2:x_in}, ${3:y_in}, ${4:x_out}, ${5:y_out})" },
        { "trigger": "NhlNewColor", "contents": "NhlNewColor(${1:workstations}, ${2:red}, ${3:green}, ${4:blue})" },
        { "trigger": "NhlNewDashPattern", "contents": "NhlNewDashPattern(${1:wks}, ${2:dash_patterns})" },
        { "trigger": "NhlNewMarker", "contents": "NhlNewMarker(${1:wks}, ${2:marker_strings}, ${3:font_num}, ${4:xoffset}, ${5:yoffset}, ${6:aspect_ratio}, ${7:size}, ${8:angle})" },
        { "trigger": "NhlPalGetDefined", "contents": "NhlPalGetDefined()" },
        { "trigger": "NhlRemoveAnnotation", "contents": "NhlRemoveAnnotation(${1:plot_id}, ${2:anno_manager_id})" },
        { "trigger": "NhlRemoveData", "contents": "NhlRemoveData(${1:plot_objs}, ${2:resname}, ${3:data_objs})" },
        { "trigger": "NhlRemoveOverlay", "contents": "NhlRemoveOverlay(${1:base_id}, ${2:plot_id}, ${3:restore})" },
        { "trigger": "NhlRemovePrimitive", "contents": "NhlRemovePrimitive(${1:base_id}, ${2:primitive_ids})" },
        { "trigger": "NhlSetColor", "contents": "NhlSetColor(${1:workstations}, ${2:color_index}, ${3:red}, ${4:green}, ${5:blue})" },
        { "trigger": "NhlSetDashPattern", "contents": "NhlSetDashPattern(${1:wks}, ${2:dash_indexes}, ${3:dash_patterns})" },
        { "trigger": "NhlSetMarker", "contents": "NhlSetMarker(${1:wks}, ${2:marker_indexes}, ${3:marker_strings}, ${4:font_num}, ${5:xoffset}, ${6:yoffset}, ${7:aspect_ratio}, ${8:size}, ${9:angle})" },
        { "trigger": "NhlUpdateData", "contents": "NhlUpdateData(${1:dcomms})" },
        { "trigger": "NhlUpdateWorkstation", "contents": "NhlUpdateWorkstation(${1:wks})" },
        { "trigger": "nice_mnmxintvl", "contents": "nice_mnmxintvl(${1:cmin}, ${2:cmax}, ${3:max_levels}, ${4:outside})" },
        { "trigger": "nngetaspectd", "contents": "nngetaspectd(${1:i}, ${2:j})" },
        { "trigger": "nngetaspects", "contents": "nngetaspects(${1:i}, ${2:j})" },
        { "trigger": "nngetp", "contents": "nngetp(${1:pnam})" },
        { "trigger": "nngetsloped", "contents": "nngetsloped(${1:i}, ${2:j})" },
        { "trigger": "nngetslopes", "contents": "nngetslopes(${1:i}, ${2:j})" },
        { "trigger": "nngetwts", "contents": "nngetwts(${1:numw}, ${2:nbrs}, ${3:wts}, ${4:xe}, ${5:ye}, ${6:ze})" },
        { "trigger": "nngetwtsd", "contents": "nngetwtsd(${1:numw}, ${2:nbrs}, ${3:wts}, ${4:xe}, ${5:ye}, ${6:ze})" },
        { "trigger": "nnpnt", "contents": "nnpnt(${1:x}, ${2:y})" },
        { "trigger": "nnpntd", "contents": "nnpntd(${1:x}, ${2:y})" },
        { "trigger": "nnpntend", "contents": "nnpntend()" },
        { "trigger": "nnpntendd", "contents": "nnpntendd()" },
        { "trigger": "nnpntinit", "contents": "nnpntinit(${1:x}, ${2:y}, ${3:z})" },
        { "trigger": "nnpntinitd", "contents": "nnpntinitd(${1:x}, ${2:y}, ${3:z})" },
        { "trigger": "nnpntinits", "contents": "nnpntinits(${1:x}, ${2:y}, ${3:z})" },
        { "trigger": "nnpnts", "contents": "nnpnts(${1:x}, ${2:y})" },
        { "trigger": "nnsetp", "contents": "nnsetp(${1:pnam}, ${2:pval})" },
        { "trigger": "num", "contents": "num(${1:val})" },
        { "trigger": "obj_anal_ic", "contents": "obj_anal_ic(${1:zlon}, ${2:zlat}, ${3:z}, ${4:glon}, ${5:glat}, ${6:rscan}, ${7:option})" },
        { "trigger": "omega_ccm", "contents": "omega_ccm(${1:u}, ${2:v}, ${3:div}, ${4:dpsl}, ${5:dpsm}, ${6:pmid}, ${7:pdel}, ${8:psfc}, ${9:hybdif}, ${10:hybm}, ${11:nprlev})" },
        { "trigger": "onedtond", "contents": "onedtond(${1:val}, ${2:dims})" },
        { "trigger": "overlay", "contents": "overlay(${1:base_id}, ${2:transform_id})" },
        { "trigger": "paleo_outline", "contents": "paleo_outline(${1:oro}, ${2:lat}, ${3:lon}, ${4:landvalue}, ${5:basename})" },
        { "trigger": "pdfxy_bin", "contents": "pdfxy_bin(${1:x}, ${2:y}, ${3:binxbnd}, ${4:binybnd}, ${5:opt})" },
        { "trigger": "poisson_grid_fill", "contents": "poisson_grid_fill(${1:x}, ${2:is_cyclic}, ${3:guess_type}, ${4:nscan}, ${5:epsx}, ${6:relc}, ${7:opt})" },
        { "trigger": "pop_remap", "contents": "pop_remap(${1:x_dst}, ${2:map_wts}, ${3:dst_add}, ${4:src_add}, ${5:x_src})" },
        { "trigger": "potmp_insitu_ocn", "contents": "potmp_insitu_ocn(${1:t}, ${2:s}, ${3:pres}, ${4:pref}, ${5:dims}, ${6:opt})" },
        { "trigger": "prcwater_dp", "contents": "prcwater_dp(${1:q}, ${2:p})" },
        { "trigger": "pres2hybrid", "contents": "pres2hybrid(${1:p}, ${2:ps}, ${3:p0}, ${4:xi}, ${5:hyao}, ${6:hybo}, ${7:intflg})" },
        { "trigger": "pres_hybrid_ccm", "contents": "pres_hybrid_ccm(${1:ps}, ${2:p0}, ${3:hya}, ${4:hyb})" },
        { "trigger": "pres_hybrid_jra55", "contents": "pres_hybrid_jra55(${1:ps}, ${2:hyai}, ${3:hybi})" },
        { "trigger": "pres_sigma", "contents": "pres_sigma(${1:sigma}, ${2:ps})" },
        { "trigger": "print", "contents": "print(${1:data})" },
        { "trigger": "print_table", "contents": "print_table(${1:alist}, ${2:format})" },
        { "trigger": "printFileVarSummary", "contents": "printFileVarSummary(${1:file}, ${2:varname})" },
        { "trigger": "printVarSummary", "contents": "printVarSummary(${1:data})" },
        { "trigger": "product", "contents": "product(${1:x})" },
        { "trigger": "pslec", "contents": "pslec(${1:t}, ${2:phis}, ${3:ps}, ${4:pres})" },
        { "trigger": "pslhor", "contents": "pslhor(${1:z}, ${2:t}, ${3:phis}, ${4:ps}, ${5:pres}, ${6:lats})" },
        { "trigger": "pslhyp", "contents": "pslhyp(${1:pres}, ${2:z}, ${3:tv})" },
        { "trigger": "qsort", "contents": "qsort(${1:value})" },
        { "trigger": "rand", "contents": "rand()" },
        { "trigger": "random_chi", "contents": "random_chi(${1:df}, ${2:N})" },
        { "trigger": "random_gamma", "contents": "random_gamma(${1:locp}, ${2:shape}, ${3:N})" },
        { "trigger": "random_normal", "contents": "random_normal(${1:av}, ${2:sd}, ${3:N})" },
        { "trigger": "random_setallseed", "contents": "random_setallseed(${1:iseed1}, ${2:iseed2})" },
        { "trigger": "random_uniform", "contents": "random_uniform(${1:low}, ${2:high}, ${3:N})" },
        { "trigger": "rcm2points", "contents": "rcm2points(${1:lat2d}, ${2:lon2d}, ${3:fi}, ${4:lat}, ${5:lon}, ${6:opt})" },
        { "trigger": "rcm2rgrid", "contents": "rcm2rgrid(${1:lat2d}, ${2:lon2d}, ${3:fi}, ${4:lat}, ${5:lon}, ${6:Option})" },
        { "trigger": "rdsstoi", "contents": "rdsstoi(${1:nyrstrt}, ${2:nyrlast}, ${3:mlon}, ${4:nlat}, ${5:info})" },
        { "trigger": "read_colormap_file", "contents": "read_colormap_file(${1:filename})" },
        { "trigger": "reg_multlin", "contents": "reg_multlin(${1:y}, ${2:x}, ${3:option})" },
        { "trigger": "regcoef", "contents": "regcoef(${1:x}, ${2:y}, ${3:tval}, ${4:nptxy})" },
        { "trigger": "regCoef_n", "contents": "regCoef_n(${1:x}, ${2:y}, ${3:dims_x}, ${4:dims_y})" },
        { "trigger": "regline", "contents": "regline(${1:x}, ${2:y})" },
        { "trigger": "relhum", "contents": "relhum(${1:t}, ${2:w}, ${3:p})" },
        { "trigger": "relhum_ice", "contents": "relhum_ice(${1:t}, ${2:w}, ${3:p})" },
        { "trigger": "relhum_water", "contents": "relhum_water(${1:t}, ${2:w}, ${3:p})" },
        { "trigger": "replace_ieeenan", "contents": "replace_ieeenan(${1:x}, ${2:value}, ${3:option})" },
        { "trigger": "reshape", "contents": "reshape(${1:val}, ${2:dims})" },
        { "trigger": "reshape_ind", "contents": "reshape_ind(${1:val}, ${2:indexes}, ${3:dims})" },
        { "trigger": "rgbhls", "contents": "rgbhls(${1:rgb})" },
        { "trigger": "rgbhsv", "contents": "rgbhsv(${1:rgb})" },
        { "trigger": "rgbyiq", "contents": "rgbyiq(${1:rgb})" },
        { "trigger": "rgrid2rcm", "contents": "rgrid2rcm(${1:lat}, ${2:lon}, ${3:fi}, ${4:lat2d}, ${5:lon2d}, ${6:Option})" },
        { "trigger": "rhomb_trunc", "contents": "rhomb_trunc(${1:a}, ${2:b}, ${3:T})" },
        { "trigger": "rip_cape_2d", "contents": "rip_cape_2d(${1:p}, ${2:t}, ${3:q}, ${4:z}, ${5:zsfc}, ${6:psfc}, ${7:opt})" },
        { "trigger": "rip_cape_3d", "contents": "rip_cape_3d(${1:p}, ${2:t}, ${3:q}, ${4:z}, ${5:zsfc}, ${6:psfc}, ${7:opt})" },
        { "trigger": "round", "contents": "round(${1:x}, ${2:opt})" },
        { "trigger": "rtest", "contents": "rtest(${1:r}, ${2:Nr}, ${3:opt})" },
        { "trigger": "runave", "contents": "runave(${1:x}, ${2:nave}, ${3:opt})" },
        { "trigger": "runave_n", "contents": "runave_n(${1:x}, ${2:nave}, ${3:opt}, ${4:dim})" },
        { "trigger": "set_default_fillvalue", "contents": "set_default_fillvalue(${1:type}, ${2:value})" },
        { "trigger": "set_sphere_radius", "contents": "set_sphere_radius(${1:radius})" },
        { "trigger": "setfileoption", "contents": "setfileoption(${1:format_or_file}, ${2:option}, ${3:value})" },
        { "trigger": "sfvp2uvf", "contents": "sfvp2uvf(${1:sf}, ${2:vp}, ${3:u}, ${4:v})" },
        { "trigger": "sfvp2uvg", "contents": "sfvp2uvg(${1:sf}, ${2:vp}, ${3:u}, ${4:v})" },
        { "trigger": "shaec", "contents": "shaec(${1:g}, ${2:a}, ${3:b})" },
        { "trigger": "shagc", "contents": "shagc(${1:g}, ${2:a}, ${3:b})" },
        { "trigger": "shgetnp", "contents": "shgetnp(${1:px}, ${2:py}, ${3:pz}, ${4:x}, ${5:y}, ${6:z}, ${7:flag})" },
        { "trigger": "shgetp", "contents": "shgetp(${1:pnam})" },
        { "trigger": "shgrid", "contents": "shgrid(${1:xi}, ${2:yi}, ${3:zi}, ${4:ui}, ${5:xo}, ${6:yo}, ${7:zo})" },
        { "trigger": "shorttobyte", "contents": "shorttobyte(${1:short_val})" },
        { "trigger": "shorttochar", "contents": "shorttochar(${1:short_val})" },
        { "trigger": "shorttocharacter", "contents": "shorttocharacter(${1:short_val})" },
        { "trigger": "show_ascii", "contents": "show_ascii()" },
        { "trigger": "shsec", "contents": "shsec(${1:a}, ${2:b}, ${3:g})" },
        { "trigger": "shsetp", "contents": "shsetp(${1:pnam}, ${2:pval})" },
        { "trigger": "shsgc", "contents": "shsgc(${1:a}, ${2:b}, ${3:g})" },
        { "trigger": "shsgc_R42", "contents": "shsgc_R42(${1:a}, ${2:b})" },
        { "trigger": "sigma2hybrid", "contents": "sigma2hybrid(${1:x}, ${2:sigx}, ${3:hya}, ${4:hyb}, ${5:p0}, ${6:ps}, ${7:intyp})" },
        { "trigger": "simpeq", "contents": "simpeq(${1:fi}, ${2:dx})" },
        { "trigger": "simpne", "contents": "simpne(${1:x}, ${2:y})" },
        { "trigger": "sin", "contents": "sin(${1:value})" },
        { "trigger": "sindex_yrmo", "contents": "sindex_yrmo(${1:slpt}, ${2:slpd}, ${3:iprnt})" },
        { "trigger": "sinh", "contents": "sinh(${1:value})" },
        { "trigger": "sizeof", "contents": "sizeof(${1:data})" },
        { "trigger": "sleep", "contents": "sleep(${1:seconds})" },
        { "trigger": "smth9", "contents": "smth9(${1:x}, ${2:p}, ${3:q}, ${4:wrap})" },
        { "trigger": "snindex_yrmo", "contents": "snindex_yrmo(${1:slpt}, ${2:slpd}, ${3:iprnt}, ${4:soi_noise})" },
        { "trigger": "solve_linsys", "contents": "solve_linsys(${1:A}, ${2:B})" },
        { "trigger": "span_color_indexes", "contents": "span_color_indexes(${1:color_map}, ${2:num_colors})" },
        { "trigger": "span_color_rgba", "contents": "span_color_rgba(${1:color_map}, ${2:num_colors})" },
        { "trigger": "span_named_colors", "contents": "span_named_colors(${1:colors}, ${2:opt})" },
        { "trigger": "sparse_matrix_mult", "contents": "sparse_matrix_mult(${1:row}, ${2:col}, ${3:S}, ${4:x}, ${5:dims})" },
        { "trigger": "spcorr", "contents": "spcorr(${1:x}, ${2:y})" },
        { "trigger": "spcorr_n", "contents": "spcorr_n(${1:x}, ${2:y}, ${3:dim})" },
        { "trigger": "specx_anal", "contents": "specx_anal(${1:x}, ${2:iopt}, ${3:jave}, ${4:pct})" },
        { "trigger": "specxy_anal", "contents": "specxy_anal(${1:x}, ${2:y}, ${3:iopt}, ${4:jave}, ${5:pct})" },
        { "trigger": "sprintf", "contents": "sprintf(${1:format}, ${2:array})" },
        { "trigger": "sprinti", "contents": "sprinti(${1:format}, ${2:array})" },
        { "trigger": "sqrt", "contents": "sqrt(${1:value})" },
        { "trigger": "sqsort", "contents": "sqsort(${1:value})" },
        { "trigger": "srand", "contents": "srand(${1:seed})" },
        { "trigger": "stat2", "contents": "stat2(${1:x}, ${2:xmean}, ${3:xvar}, ${4:nptused})" },
        { "trigger": "stat4", "contents": "stat4(${1:x}, ${2:xmean}, ${3:xvar}, ${4:xskew}, ${5:xkurt}, ${6:nptused})" },
        { "trigger": "stat_medrng", "contents": "stat_medrng(${1:x}, ${2:xmedian}, ${3:xmrange}, ${4:xrange}, ${5:nptused})" },
        { "trigger": "stat_trim", "contents": "stat_trim(${1:x}, ${2:ptrim}, ${3:xmeant}, ${4:xsdt}, ${5:nptused})" },
        { "trigger": "status_exit", "contents": "status_exit(${1:code})" },
        { "trigger": "stdatmus_p2tdz", "contents": "stdatmus_p2tdz(${1:p})" },
        { "trigger": "stdatmus_z2tdp", "contents": "stdatmus_z2tdp(${1:z})" },
        { "trigger": "stddev", "contents": "stddev(${1:data})" },
        { "trigger": "str_capital", "contents": "str_capital(${1:string_val})" },
        { "trigger": "str_concat", "contents": "str_concat(${1:string_val})" },
        { "trigger": "str_fields_count", "contents": "str_fields_count(${1:string_val}, ${2:delimiter})" },
        { "trigger": "str_get_cols", "contents": "str_get_cols(${1:string_val}, ${2:start_col}, ${3:end_col})" },
        { "trigger": "str_get_dq", "contents": "str_get_dq()" },
        { "trigger": "str_get_field", "contents": "str_get_field(${1:string_val}, ${2:field_number}, ${3:delimiter})" },
        { "trigger": "str_get_nl", "contents": "str_get_nl()" },
        { "trigger": "str_get_sq", "contents": "str_get_sq()" },
        { "trigger": "str_get_tab", "contents": "str_get_tab()" },
        { "trigger": "str_index_of_substr", "contents": "str_index_of_substr(${1:str}, ${2:substr}, ${3:opt})" },
        { "trigger": "str_insert", "contents": "str_insert(${1:string_val}, ${2:subString}, ${3:position})" },
        { "trigger": "str_is_blank", "contents": "str_is_blank(${1:string_val})" },
        { "trigger": "str_join", "contents": "str_join(${1:string_val}, ${2:delim})" },
        { "trigger": "str_left_strip", "contents": "str_left_strip(${1:string_val})" },
        { "trigger": "str_lower", "contents": "str_lower(${1:string_val})" },
        { "trigger": "str_match", "contents": "str_match(${1:string_array}, ${2:sub_string})" },
        { "trigger": "str_match_bool", "contents": "str_match_bool(${1:string_array}, ${2:sub_string})" },
        { "trigger": "str_match_bool_ic", "contents": "str_match_bool_ic(${1:string_array}, ${2:sub_string})" },
        { "trigger": "str_match_ic", "contents": "str_match_ic(${1:string_array}, ${2:sub_string})" },
        { "trigger": "str_match_ic_regex", "contents": "str_match_ic_regex(${1:string_array}, ${2:expression})" },
        { "trigger": "str_match_ind", "contents": "str_match_ind(${1:string_array}, ${2:sub_string})" },
        { "trigger": "str_match_ind_ic", "contents": "str_match_ind_ic(${1:string_array}, ${2:sub_string})" },
        { "trigger": "str_match_ind_ic_regex", "contents": "str_match_ind_ic_regex(${1:string_array}, ${2:expression})" },
        { "trigger": "str_match_ind_regex", "contents": "str_match_ind_regex(${1:string_array}, ${2:expression})" },
        { "trigger": "str_match_regex", "contents": "str_match_regex(${1:string_array}, ${2:expression})" },
        { "trigger": "str_right_strip", "contents": "str_right_strip(${1:string_val})" },
        { "trigger": "str_split", "contents": "str_split(${1:string_val}, ${2:delimiter})" },
        { "trigger": "str_split_by_length", "contents": "str_split_by_length(${1:string_val}, ${2:length_val})" },
        { "trigger": "str_split_csv", "contents": "str_split_csv(${1:string_val}, ${2:delimiter}, ${3:option})" },
        { "trigger": "str_squeeze", "contents": "str_squeeze(${1:string_val})" },
        { "trigger": "str_strip", "contents": "str_strip(${1:string_val})" },
        { "trigger": "str_sub_str", "contents": "str_sub_str(${1:string_val}, ${2:oldString}, ${3:newString})" },
        { "trigger": "str_switch", "contents": "str_switch(${1:string_val})" },
        { "trigger": "str_upper", "contents": "str_upper(${1:string_val})" },
        { "trigger": "stringtochar", "contents": "stringtochar(${1:string_val})" },
        { "trigger": "stringtocharacter", "contents": "stringtocharacter(${1:string_val})" },
        { "trigger": "stringtodouble", "contents": "stringtodouble(${1:string_val})" },
        { "trigger": "stringtofloat", "contents": "stringtofloat(${1:string_val})" },
        { "trigger": "stringtoint", "contents": "stringtoint(${1:string_val})" },
        { "trigger": "stringtointeger", "contents": "stringtointeger(${1:string_val})" },
        { "trigger": "stringtolong", "contents": "stringtolong(${1:string_val})" },
        { "trigger": "stringtoshort", "contents": "stringtoshort(${1:string_val})" },
        { "trigger": "strlen", "contents": "strlen(${1:str})" },
        { "trigger": "student_t", "contents": "student_t(${1:t}, ${2:df})" },
        { "trigger": "subprocess", "contents": "subprocess(${1:command})" },
        { "trigger": "subprocess_wait", "contents": "subprocess_wait(${1:id}, ${2:is_blocking})" },
        { "trigger": "sum", "contents": "sum(${1:x})" },
        { "trigger": "svd_lapack", "contents": "svd_lapack(${1:A}, ${2:jobu}, ${3:jobv}, ${4:optv}, ${5:U}, ${6:V})" },
        { "trigger": "svdcov", "contents": "svdcov(${1:x}, ${2:y}, ${3:nsvd}, ${4:homlft}, ${5:hetlft}, ${6:homrgt}, ${7:hetrgt})" },
        { "trigger": "svdcov_sv", "contents": "svdcov_sv(${1:x}, ${2:y}, ${3:nsvd}, ${4:svLeft}, ${5:svRight})" },
        { "trigger": "svdstd", "contents": "svdstd(${1:x}, ${2:y}, ${3:nsvd}, ${4:homlft}, ${5:hetlft}, ${6:homrgt}, ${7:hetrgt})" },
        { "trigger": "svdstd_sv", "contents": "svdstd_sv(${1:x}, ${2:y}, ${3:nsvd}, ${4:svLeft}, ${5:svRight})" },
        { "trigger": "system", "contents": "system(${1:command})" },
        { "trigger": "systemfunc", "contents": "systemfunc(${1:command})" },
        { "trigger": "tan", "contents": "tan(${1:value})" },
        { "trigger": "tanh", "contents": "tanh(${1:value})" },
        { "trigger": "taper", "contents": "taper(${1:x}, ${2:p}, ${3:option})" },
        { "trigger": "taper_n", "contents": "taper_n(${1:x}, ${2:p}, ${3:option}, ${4:dim})" },
        { "trigger": "tdclrs", "contents": "tdclrs(${1:wks}, ${2:color_scheme}, ${3:shade_intensity}, ${4:shade_range}, ${5:color_index1}, ${6:color_index2}, ${7:nblocks})" },
        { "trigger": "tdctri", "contents": "tdctri(${1:rtri}, ${2:ntri}, ${3:axis}, ${4:rcut})" },
        { "trigger": "tdcudp", "contents": "tdcudp()" },
        { "trigger": "tdcurv", "contents": "tdcurv(${1:wks}, ${2:ucurv}, ${3:vcurv}, ${4:wcurv}, ${5:iarh}, ${6:arhl}, ${7:arhw})" },
        { "trigger": "tddtri", "contents": "tddtri(${1:wks}, ${2:rtri}, ${3:ntri}, ${4:itwk})" },
        { "trigger": "tdez2d", "contents": "tdez2d(${1:wks}, ${2:x}, ${3:y}, ${4:z}, ${5:rmult}, ${6:theta}, ${7:phi}, ${8:ist})" },
        { "trigger": "tdez3d", "contents": "tdez3d(${1:wks}, ${2:x}, ${3:y}, ${4:z}, ${5:u}, ${6:value}, ${7:rmult}, ${8:theta}, ${9:phi}, ${10:ist})" },
        { "trigger": "tdgetp", "contents": "tdgetp(${1:pnam})" },
        { "trigger": "tdgrds", "contents": "tdgrds(${1:wks}, ${2:uvwmin}, ${3:uvwmax}, ${4:uvwstep}, ${5:igrt}, ${6:ihide})" },
        { "trigger": "tdgrid", "contents": "tdgrid(${1:wks}, ${2:xbegin}, ${3:xstep}, ${4:nx}, ${5:ybegin}, ${6:ystep}, ${7:ny}, ${8:grid_flag})" },
        { "trigger": "tdgtrs", "contents": "tdgtrs(${1:render_index}, ${2:bot_fill_index1}, ${3:bot_fill_index2}, ${4:top_fill_index1}, ${5:top_fill_index2}, ${6:bot_line_index}, ${7:top_line_index}, ${8:draw_edge}, ${9:udist}, ${10:vdist}, ${11:wdist})" },
        { "trigger": "tdinit", "contents": "tdinit(${1:eye}, ${2:origin}, ${3:orient}, ${4:otep})" },
        { "trigger": "tditri", "contents": "tditri(${1:u}, ${2:v}, ${3:w}, ${4:f}, ${5:fiso}, ${6:rtri}, ${7:ntri}, ${8:render_index})" },
        { "trigger": "tdlbla", "contents": "tdlbla(${1:wks}, ${2:axis}, ${3:info_label}, ${4:num_labels}, ${5:xrl_edge}, ${6:ybt_edge}, ${7:angle})" },
        { "trigger": "tdlblp", "contents": "tdlblp()" },
        { "trigger": "tdlbls", "contents": "tdlbls(${1:wks}, ${2:uvwmin}, ${3:uvwmax}, ${4:uvwnum_lab}, ${5:uvwinfo_lab}, ${6:edge_flag})" },
        { "trigger": "tdline", "contents": "tdline(${1:wks}, ${2:uvw1}, ${3:uvw2})" },
        { "trigger": "tdlndp", "contents": "tdlndp()" },
        { "trigger": "tdlnpa", "contents": "tdlnpa(${1:wks}, ${2:uvw1}, ${3:uvw2})" },
        { "trigger": "tdlpdp", "contents": "tdlpdp()" },
        { "trigger": "tdmtri", "contents": "tdmtri(${1:marker_type}, ${2:center_point}, ${3:radius}, ${4:rtri}, ${5:ntri}, ${6:render_index}, ${7:uvwmin}, ${8:uvwmax})" },
        { "trigger": "tdotri", "contents": "tdotri(${1:rtri}, ${2:ntri}, ${3:rtwk}, ${4:order_flag})" },
        { "trigger": "tdpara", "contents": "tdpara(${1:uvw00}, ${2:uvw10}, ${3:uvw01})" },
        { "trigger": "tdplch", "contents": "tdplch(${1:wks}, ${2:xpos}, ${3:ypos}, ${4:chrs}, ${5:size}, ${6:angle}, ${7:counter})" },
        { "trigger": "tdprpa", "contents": "tdprpa(${1:xyipa})" },
        { "trigger": "tdprpi", "contents": "tdprpi(${1:xyi2d})" },
        { "trigger": "tdprpt", "contents": "tdprpt(${1:uvwi3d})" },
        { "trigger": "tdsetp", "contents": "tdsetp(${1:pnam}, ${2:pval})" },
        { "trigger": "tdsort", "contents": "tdsort(${1:rwrk}, ${2:sort_flag})" },
        { "trigger": "tdstri", "contents": "tdstri(${1:u}, ${2:v}, ${3:w}, ${4:rtri}, ${5:ntri}, ${6:render_index})" },
        { "trigger": "tdstrs", "contents": "tdstrs(${1:render_index}, ${2:bot_fill_index1}, ${3:bot_fill_index2}, ${4:top_fill_index1}, ${5:top_fill_index2}, ${6:bot_line_index}, ${7:top_line_index}, ${8:draw_edge}, ${9:udist}, ${10:vdist}, ${11:wdist})" },
        { "trigger": "tdttri", "contents": "tdttri(${1:u}, ${2:v}, ${3:w}, ${4:marker_type}, ${5:radius}, ${6:gap_size}, ${7:rtri}, ${8:ntri}, ${9:render_index}, ${10:uvwmin}, ${11:uvwmax})" },
        { "trigger": "thornthwaite", "contents": "thornthwaite(${1:t}, ${2:lat}, ${3:opt}, ${4:dim})" },
        { "trigger": "tobyte", "contents": "tobyte(${1:input_val})" },
        { "trigger": "tochar", "contents": "tochar(${1:input_val})" },
        { "trigger": "todouble", "contents": "todouble(${1:input_val})" },
        { "trigger": "tofloat", "contents": "tofloat(${1:input_val})" },
        { "trigger": "toint", "contents": "toint(${1:input_val})" },
        { "trigger": "toint64", "contents": "toint64(${1:input_val})" },
        { "trigger": "tointeger", "contents": "tointeger(${1:input_val})" },
        { "trigger": "tolong", "contents": "tolong(${1:input_val})" },
        { "trigger": "toshort", "contents": "toshort(${1:input_val})" },
        { "trigger": "tosigned", "contents": "tosigned(${1:input_val})" },
        { "trigger": "tostring", "contents": "tostring(${1:input_val})" },
        { "trigger": "tostring_with_format", "contents": "tostring_with_format(${1:input_val}, ${2:format})" },
        { "trigger": "totype", "contents": "totype(${1:input_val}, ${2:type_val})" },
        { "trigger": "toubyte", "contents": "toubyte(${1:input_val})" },
        { "trigger": "touint", "contents": "touint(${1:input_val})" },
        { "trigger": "touint64", "contents": "touint64(${1:input_val})" },
        { "trigger": "toulong", "contents": "toulong(${1:input_val})" },
        { "trigger": "tounsigned", "contents": "tounsigned(${1:input_val})" },
        { "trigger": "toushort", "contents": "toushort(${1:input_val})" },
        { "trigger": "trend_manken", "contents": "trend_manken(${1:x}, ${2:opt}, ${3:dims})" },
        { "trigger": "tri_trunc", "contents": "tri_trunc(${1:a}, ${2:b}, ${3:T})" },
        { "trigger": "triple2grid", "contents": "triple2grid(${1:x}, ${2:y}, ${3:data}, ${4:xgrid}, ${5:ygrid}, ${6:option})" },
        { "trigger": "triple2grid2d", "contents": "triple2grid2d(${1:x}, ${2:y}, ${3:data}, ${4:xgrid}, ${5:ygrid}, ${6:option})" },
        { "trigger": "trop_wmo", "contents": "trop_wmo(${1:p}, ${2:t}, ${3:punit}, ${4:opt})" },
        { "trigger": "ttest", "contents": "ttest(${1:ave1}, ${2:var1}, ${3:s1}, ${4:ave2}, ${5:var2}, ${6:s2}, ${7:iflag}, ${8:tval_opt})" },
        { "trigger": "typeof", "contents": "typeof(${1:val})" },
        { "trigger": "undef", "contents": "undef(${1:names})" },
        { "trigger": "unique_string", "contents": "unique_string(${1:prefix_string})" },
        { "trigger": "update", "contents": "update(${1:wks})" },
        { "trigger": "ushorttoint", "contents": "ushorttoint(${1:short_val})" },
        { "trigger": "ut_calendar", "contents": "ut_calendar(${1:time}, ${2:option})" },
        { "trigger": "ut_calendar_fix", "contents": "ut_calendar_fix(${1:time}, ${2:option})" },
        { "trigger": "ut_inv_calendar", "contents": "ut_inv_calendar(${1:year}, ${2:month}, ${3:day}, ${4:hour}, ${5:minute}, ${6:second}, ${7:units}, ${8:option})" },
        { "trigger": "ut_inv_calendar_fix", "contents": "ut_inv_calendar_fix(${1:year}, ${2:month}, ${3:day}, ${4:hour}, ${5:minute}, ${6:second}, ${7:units}, ${8:option})" },
        { "trigger": "utm2latlon", "contents": "utm2latlon(${1:xy}, ${2:datum})" },
        { "trigger": "uv2dv_cfd", "contents": "uv2dv_cfd(${1:u}, ${2:v}, ${3:lat}, ${4:lon}, ${5:boundOpt})" },
        { "trigger": "uv2dvf", "contents": "uv2dvf(${1:u}, ${2:v}, ${3:dv})" },
        { "trigger": "uv2dvg", "contents": "uv2dvg(${1:u}, ${2:v}, ${3:dv})" },
        { "trigger": "uv2sfvpf", "contents": "uv2sfvpf(${1:u}, ${2:v}, ${3:sf}, ${4:vp})" },
        { "trigger": "uv2sfvpg", "contents": "uv2sfvpg(${1:u}, ${2:v}, ${3:sf}, ${4:vp})" },
        { "trigger": "uv2vr_cfd", "contents": "uv2vr_cfd(${1:u}, ${2:v}, ${3:lat}, ${4:lon}, ${5:boundOpt})" },
        { "trigger": "uv2vrdvf", "contents": "uv2vrdvf(${1:u}, ${2:v}, ${3:vr}, ${4:dv})" },
        { "trigger": "uv2vrdvg", "contents": "uv2vrdvg(${1:u}, ${2:v}, ${3:vr}, ${4:dv})" },
        { "trigger": "uv2vrf", "contents": "uv2vrf(${1:u}, ${2:v}, ${3:vort})" },
        { "trigger": "uv2vrg", "contents": "uv2vrg(${1:u}, ${2:v}, ${3:vort})" },
        { "trigger": "v5d_close", "contents": "v5d_close()" },
        { "trigger": "v5d_create", "contents": "v5d_create(${1:fname}, ${2:numtimes}, ${3:numvars}, ${4:nr}, ${5:nc}, ${6:nl}, ${7:varname}, ${8:timestamp}, ${9:datestamp}, ${10:compress}, ${11:projection}, ${12:proj_args}, ${13:vertical}, ${14:vert_args})" },
        { "trigger": "v5d_setLowLev", "contents": "v5d_setLowLev(${1:lowLev})" },
        { "trigger": "v5d_setUnits", "contents": "v5d_setUnits(${1:variable}, ${2:units})" },
        { "trigger": "v5d_write", "contents": "v5d_write(${1:timestep}, ${2:varnum}, ${3:data})" },
        { "trigger": "v5d_write_var", "contents": "v5d_write_var(${1:data})" },
        { "trigger": "variance", "contents": "variance(${1:value})" },
        { "trigger": "vhaec", "contents": "vhaec(${1:u}, ${2:v}, ${3:br}, ${4:bi}, ${5:cr}, ${6:ci})" },
        { "trigger": "vhagc", "contents": "vhagc(${1:u}, ${2:v}, ${3:br}, ${4:bi}, ${5:cr}, ${6:ci})" },
        { "trigger": "vhsec", "contents": "vhsec(${1:br}, ${2:bi}, ${3:cr}, ${4:ci}, ${5:u}, ${6:v})" },
        { "trigger": "vhsgc", "contents": "vhsgc(${1:br}, ${2:bi}, ${3:cr}, ${4:ci}, ${5:u}, ${6:v})" },
        { "trigger": "vibeta", "contents": "vibeta(${1:p}, ${2:x}, ${3:linlog}, ${4:psfc}, ${5:pbot}, ${6:ptop})" },
        { "trigger": "vinth2p", "contents": "vinth2p(${1:datai}, ${2:hbcofa}, ${3:hbcofb}, ${4:plevo}, ${5:psfc}, ${6:intyp}, ${7:p0}, ${8:ii}, ${9:kxtrp})" },
        { "trigger": "vinth2p_ecmwf", "contents": "vinth2p_ecmwf(${1:datai}, ${2:hbcofa}, ${3:hbcofb}, ${4:plevo}, ${5:psfc}, ${6:intyp}, ${7:p0}, ${8:ii}, ${9:kxtrp}, ${10:varflg}, ${11:tbot}, ${12:phis})" },
        { "trigger": "vinth2p_ecmwf_nodes", "contents": "vinth2p_ecmwf_nodes(${1:datai}, ${2:hbcofa}, ${3:hbcofb}, ${4:plevo}, ${5:psfc}, ${6:intyp}, ${7:p0}, ${8:ii}, ${9:kxtrp}, ${10:varflg}, ${11:tbot}, ${12:phis})" },
        { "trigger": "vinth2p_nodes", "contents": "vinth2p_nodes(${1:datai}, ${2:hbcofa}, ${3:hbcofb}, ${4:plevo}, ${5:psfc}, ${6:intyp}, ${7:p0}, ${8:ii}, ${9:kxtrp})" },
        { "trigger": "vintp2p_ecmwf", "contents": "vintp2p_ecmwf(${1:datai}, ${2:presi}, ${3:plevo}, ${4:psfc}, ${5:intyp}, ${6:ii}, ${7:kxtrp}, ${8:varflg}, ${9:tbot}, ${10:phis})" },
        { "trigger": "vr2uvf", "contents": "vr2uvf(${1:vor}, ${2:ur}, ${3:vr})" },
        { "trigger": "vr2uvg", "contents": "vr2uvg(${1:vor}, ${2:ur}, ${3:vr})" },
        { "trigger": "vrdv2uvf", "contents": "vrdv2uvf(${1:vr}, ${2:dv}, ${3:ud}, ${4:vd})" },
        { "trigger": "vrdv2uvg", "contents": "vrdv2uvg(${1:vr}, ${2:dv}, ${3:u}, ${4:v})" },
        { "trigger": "wavelet", "contents": "wavelet(${1:y}, ${2:mother}, ${3:dt}, ${4:param}, ${5:s0}, ${6:dj}, ${7:jtot}, ${8:npad}, ${9:noise}, ${10:isigtest}, ${11:siglvl}, ${12:nadof})" },
        { "trigger": "wavelet_default", "contents": "wavelet_default(${1:y}, ${2:mother})" },
        { "trigger": "weibull", "contents": "weibull(${1:x}, ${2:opt}, ${3:dims})" },
        { "trigger": "wetbulb", "contents": "wetbulb(${1:p}, ${2:tc}, ${3:tdc})" },
        { "trigger": "wgt_area_smooth", "contents": "wgt_area_smooth(${1:field}, ${2:wgt}, ${3:opt})" },
        { "trigger": "wgt_areaave", "contents": "wgt_areaave(${1:q}, ${2:wgty}, ${3:wgtx}, ${4:opt})" },
        { "trigger": "wgt_areaave2", "contents": "wgt_areaave2(${1:q}, ${2:wgt}, ${3:opt})" },
        { "trigger": "wgt_arearmse", "contents": "wgt_arearmse(${1:q}, ${2:r}, ${3:wgty}, ${4:wgtx}, ${5:opt})" },
        { "trigger": "wgt_arearmse2", "contents": "wgt_arearmse2(${1:q}, ${2:r}, ${3:wgt}, ${4:opt})" },
        { "trigger": "wgt_areasum2", "contents": "wgt_areasum2(${1:q}, ${2:wgt}, ${3:opt})" },
        { "trigger": "wgt_runave", "contents": "wgt_runave(${1:x}, ${2:wgt}, ${3:opt})" },
        { "trigger": "wgt_runave_n", "contents": "wgt_runave_n(${1:x}, ${2:wgt}, ${3:opt}, ${4:dim})" },
        { "trigger": "wgt_vert_avg_beta", "contents": "wgt_vert_avg_beta(${1:p}, ${2:datai}, ${3:psfc}, ${4:punits}, ${5:opt})" },
        { "trigger": "wgt_volave", "contents": "wgt_volave(${1:q}, ${2:wgtz}, ${3:wgty}, ${4:wgtx}, ${5:opt})" },
        { "trigger": "wgt_volave_ccm", "contents": "wgt_volave_ccm(${1:q}, ${2:wgtz}, ${3:wgty}, ${4:wgtx}, ${5:opt})" },
        { "trigger": "wgt_volrmse", "contents": "wgt_volrmse(${1:q}, ${2:r}, ${3:wgtz}, ${4:wgty}, ${5:wgtx}, ${6:opt})" },
        { "trigger": "wgt_volrmse_ccm", "contents": "wgt_volrmse_ccm(${1:q}, ${2:r}, ${3:wgtq}, ${4:wgtr}, ${5:wgty}, ${6:wgtx}, ${7:opt})" },
        { "trigger": "where", "contents": "where(${1:condtnl_expr}, ${2:true_value}, ${3:false_value})" },
        { "trigger": "wk_smooth121", "contents": "wk_smooth121(${1:x})" },
        { "trigger": "wmbarb", "contents": "wmbarb(${1:wks}, ${2:x}, ${3:y}, ${4:dx}, ${5:dy})" },
        { "trigger": "wmbarbmap", "contents": "wmbarbmap(${1:wks}, ${2:lat}, ${3:lon}, ${4:u}, ${5:v})" },
        { "trigger": "wmdrft", "contents": "wmdrft(${1:wks}, ${2:y}, ${3:x})" },
        { "trigger": "wmgetp", "contents": "wmgetp(${1:pnam})" },
        { "trigger": "wmlabs", "contents": "wmlabs(${1:wks}, ${2:x}, ${3:y}, ${4:sym})" },
        { "trigger": "wmsetp", "contents": "wmsetp(${1:pnam}, ${2:pval})" },
        { "trigger": "wmstnm", "contents": "wmstnm(${1:wks}, ${2:x}, ${3:y}, ${4:imdat})" },
        { "trigger": "wmvect", "contents": "wmvect(${1:wks}, ${2:x}, ${3:y}, ${4:dx}, ${5:dy})" },
        { "trigger": "wmvectmap", "contents": "wmvectmap(${1:wks}, ${2:lat}, ${3:lon}, ${4:u}, ${5:v})" },
        { "trigger": "wmvlbl", "contents": "wmvlbl(${1:wks}, ${2:x}, ${3:y})" },
        { "trigger": "wrf_avo", "contents": "wrf_avo(${1:u}, ${2:v}, ${3:msfu}, ${4:msfv}, ${5:msfm}, ${6:cor}, ${7:dx}, ${8:dy}, ${9:opt})" },
        { "trigger": "wrf_cape_2d", "contents": "wrf_cape_2d(${1:p}, ${2:t}, ${3:q}, ${4:z}, ${5:zsfc}, ${6:psfc}, ${7:opt})" },
        { "trigger": "wrf_cape_3d", "contents": "wrf_cape_3d(${1:p}, ${2:t}, ${3:q}, ${4:z}, ${5:zsfc}, ${6:psfc}, ${7:opt})" },
        { "trigger": "wrf_dbz", "contents": "wrf_dbz(${1:P}, ${2:T}, ${3:qv}, ${4:qr}, ${5:qs}, ${6:qg}, ${7:ivarint}, ${8:iliqskin})" },
        { "trigger": "wrf_eth", "contents": "wrf_eth(${1:qv}, ${2:T}, ${3:P})" },
        { "trigger": "wrf_helicity", "contents": "wrf_helicity(${1:UA}, ${2:VA}, ${3:Z}, ${4:TER}, ${5:top})" },
        { "trigger": "wrf_ij_to_ll", "contents": "wrf_ij_to_ll(${1:iloc}, ${2:jloc}, ${3:opt})" },
        { "trigger": "wrf_interp_1d", "contents": "wrf_interp_1d(${1:v_in}, ${2:z_in}, ${3:z_out})" },
        { "trigger": "wrf_interp_2d_xy", "contents": "wrf_interp_2d_xy(${1:v3d}, ${2:xy})" },
        { "trigger": "wrf_interp_3d_z", "contents": "wrf_interp_3d_z(${1:v3d}, ${2:vert}, ${3:loc})" },
        { "trigger": "wrf_latlon_to_ij", "contents": "wrf_latlon_to_ij(${1:lat_wrf}, ${2:lon_wrf}, ${3:lat_pts}, ${4:lon_pts})" },
        { "trigger": "wrf_ll_to_ij", "contents": "wrf_ll_to_ij(${1:lon}, ${2:lat}, ${3:opt})" },
        { "trigger": "wrf_omega", "contents": "wrf_omega(${1:qv}, ${2:t}, ${3:v}, ${4:p})" },
        { "trigger": "wrf_pvo", "contents": "wrf_pvo(${1:u}, ${2:v}, ${3:THETA}, ${4:P}, ${5:msfu}, ${6:msfv}, ${7:msfm}, ${8:cor}, ${9:dx}, ${10:dy}, ${11:opt})" },
        { "trigger": "wrf_rh", "contents": "wrf_rh(${1:qv}, ${2:P}, ${3:T})" },
        { "trigger": "wrf_slp", "contents": "wrf_slp(${1:Z}, ${2:T}, ${3:P}, ${4:Q})" },
        { "trigger": "wrf_smooth_2d", "contents": "wrf_smooth_2d(${1:fld}, ${2:iter})" },
        { "trigger": "wrf_td", "contents": "wrf_td(${1:P}, ${2:qv})" },
        { "trigger": "wrf_tk", "contents": "wrf_tk(${1:P}, ${2:THETA})" },
        { "trigger": "wrf_updraft_helicity", "contents": "wrf_updraft_helicity(${1:ZP}, ${2:MAPFCT}, ${3:US}, ${4:VS}, ${5:W}, ${6:dx}, ${7:dy}, ${8:opt})" },
        { "trigger": "wrf_uvmet", "contents": "wrf_uvmet(${1:u}, ${2:v}, ${3:lat}, ${4:lon}, ${5:cen_lon}, ${6:cone})" },
        { "trigger": "wrf_virtual_temp", "contents": "wrf_virtual_temp(${1:t}, ${2:qv})" },
        { "trigger": "wrf_wetbulb", "contents": "wrf_wetbulb(${1:p}, ${2:t}, ${3:qv})" },
        { "trigger": "wrf_wps_close_int", "contents": "wrf_wps_close_int(${1:istatus})" },
        { "trigger": "wrf_wps_open_int", "contents": "wrf_wps_open_int(${1:filename})" },
        { "trigger": "wrf_wps_rddata_int", "contents": "wrf_wps_rddata_int(${1:istatus}, ${2:nx}, ${3:ny})" },
        { "trigger": "wrf_wps_rdhead_int", "contents": "wrf_wps_rdhead_int(${1:istatus}, ${2:rhead}, ${3:field}, ${4:date}, ${5:units}, ${6:map_source}, ${7:description})" },
        { "trigger": "wrf_wps_read_int", "contents": "wrf_wps_read_int(${1:filename})" },
        { "trigger": "wrf_wps_write_int", "contents": "wrf_wps_write_int(${1:filename}, ${2:field}, ${3:units}, ${4:description}, ${5:data}, ${6:opt})" },
        { "trigger": "write_matrix", "contents": "write_matrix(${1:data}, ${2:fmtf}, ${3:option})" },
        { "trigger": "write_table", "contents": "write_table(${1:filename}, ${2:option}, ${3:alist}, ${4:format})" },
        { "trigger": "yiqrgb", "contents": "yiqrgb(${1:yiq})" },
        { "trigger": "z2geouv", "contents": "z2geouv(${1:z}, ${2:lat}, ${3:lon}, ${4:iopt})" },
        { "trigger": "zonal_mpsi", "contents": "zonal_mpsi(${1:v}, ${2:lat}, ${3:p}, ${4:ps})" },
        { "trigger": "addfiles_GetVar", "contents": "addfiles_GetVar(${1:f}, ${2:files}, ${3:name})" },
        { "trigger": "advect_variable", "contents": "advect_variable(${1:u}, ${2:v}, ${3:x}, ${4:gridType}, ${5:longName}, ${6:units}, ${7:opt})" },
        { "trigger": "advect_variable_cfd", "contents": "advect_variable_cfd(${1:u}, ${2:v}, ${3:x}, ${4:lat}, ${5:lon}, ${6:cyclic}, ${7:longName}, ${8:units}, ${9:opt})" },
        { "trigger": "albedo_ccm", "contents": "albedo_ccm(${1:flux1}, ${2:flux2}, ${3:formula})" },
        { "trigger": "area_conserve_remap_Wrap", "contents": "area_conserve_remap_Wrap(${1:loni}, ${2:lati}, ${3:fi}, ${4:lono}, ${5:lato}, ${6:opt})" },
        { "trigger": "area_hi2lores_Wrap", "contents": "area_hi2lores_Wrap(${1:xi}, ${2:yi}, ${3:fi}, ${4:fiCyclicX}, ${5:wy}, ${6:xo}, ${7:yo}, ${8:foOption})" },
        { "trigger": "array_append_record", "contents": "array_append_record(${1:x1}, ${2:x2}, ${3:opt})" },
        { "trigger": "assignFillValue", "contents": "assignFillValue(${1:var_from}, ${2:var_to})" },
        { "trigger": "beta_dfdy_rossby", "contents": "beta_dfdy_rossby(${1:lat}, ${2:opt})" },
        { "trigger": "brunt_vaisala_atm", "contents": "brunt_vaisala_atm(${1:th}, ${2:z}, ${3:opt}, ${4:dim})" },
        { "trigger": "byte2flt", "contents": "byte2flt(${1:x})" },
        { "trigger": "byte2flt_hdf", "contents": "byte2flt_hdf(${1:x})" },
        { "trigger": "calcDayAnomTLL", "contents": "calcDayAnomTLL(${1:x}, ${2:yyyyddd}, ${3:clmDay})" },
        { "trigger": "calcMonAnomLLLT", "contents": "calcMonAnomLLLT(${1:x}, ${2:xAve})" },
        { "trigger": "calcMonAnomLLT", "contents": "calcMonAnomLLT(${1:x}, ${2:xAve})" },
        { "trigger": "calcMonAnomTLL", "contents": "calcMonAnomTLL(${1:x}, ${2:xAve})" },
        { "trigger": "calcMonAnomTLLL", "contents": "calcMonAnomTLLL(${1:x}, ${2:xAve})" },
        { "trigger": "calculate_daily_values", "contents": "calculate_daily_values(${1:x}, ${2:arith}, ${3:nDim}, ${4:opt})" },
        { "trigger": "calculate_monthly_values", "contents": "calculate_monthly_values(${1:x}, ${2:arith}, ${3:nDim}, ${4:opt})" },
        { "trigger": "calculate_segment_values", "contents": "calculate_segment_values(${1:x}, ${2:arith}, ${3:nDim}, ${4:opt})" },
        { "trigger": "cd_convert", "contents": "cd_convert(${1:dateFrom}, ${2:unitsTo})" },
        { "trigger": "changeCase", "contents": "changeCase(${1:x}, ${2:case})" },
        { "trigger": "changeCaseChar", "contents": "changeCaseChar(${1:x})" },
        { "trigger": "clmDayHourTLL", "contents": "clmDayHourTLL(${1:x}, ${2:yyyydddhh}, ${3:hour}, ${4:opt_shape})" },
        { "trigger": "clmDayHourTLLL", "contents": "clmDayHourTLLL(${1:x}, ${2:yyyydddhh}, ${3:hour}, ${4:opt_shape})" },
        { "trigger": "clmDayTLL", "contents": "clmDayTLL(${1:x}, ${2:yyyyddd})" },
        { "trigger": "clmDayTLLL", "contents": "clmDayTLLL(${1:x}, ${2:yyyyddd})" },
        { "trigger": "clmMon2clmDay", "contents": "clmMon2clmDay(${1:xClmMon}, ${2:retOrder}, ${3:opt})" },
        { "trigger": "clmMonLLLT", "contents": "clmMonLLLT(${1:x})" },
        { "trigger": "clmMonLLT", "contents": "clmMonLLT(${1:x})" },
        { "trigger": "clmMonTLL", "contents": "clmMonTLL(${1:x})" },
        { "trigger": "clmMonTLLL", "contents": "clmMonTLLL(${1:x})" },
        { "trigger": "closest_val", "contents": "closest_val(${1:xval}, ${2:x})" },
        { "trigger": "cohsq_c2p", "contents": "cohsq_c2p(${1:cohsq}, ${2:edof})" },
        { "trigger": "cohsq_p2c", "contents": "cohsq_p2c(${1:prob}, ${2:edof})" },
        { "trigger": "copy_VarAtts", "contents": "copy_VarAtts(${1:var_from}, ${2:var_to})" },
        { "trigger": "copy_VarCoords", "contents": "copy_VarCoords(${1:var_from}, ${2:var_to})" },
        { "trigger": "copy_VarCoords_1", "contents": "copy_VarCoords_1(${1:var_from}, ${2:var_to})" },
        { "trigger": "copy_VarCoords_2", "contents": "copy_VarCoords_2(${1:var_from}, ${2:var_to})" },
        { "trigger": "copy_VarMeta", "contents": "copy_VarMeta(${1:var_from}, ${2:var_to})" },
        { "trigger": "copyatt", "contents": "copyatt(${1:var_to}, ${2:var_from})" },
        { "trigger": "coriolis_param", "contents": "coriolis_param(${1:lat})" },
        { "trigger": "crossp3", "contents": "crossp3(${1:a}, ${2:b})" },
        { "trigger": "cshstringtolist", "contents": "cshstringtolist(${1:cshlist})" },
        { "trigger": "cssgrid_Wrap", "contents": "cssgrid_Wrap(${1:rlat}, ${2:rlon}, ${3:fval}, ${4:plat}, ${5:plon})" },
        { "trigger": "dble2flt", "contents": "dble2flt(${1:x})" },
        { "trigger": "decimalPlaces", "contents": "decimalPlaces(${1:x}, ${2:nplaces}, ${3:round})" },
        { "trigger": "delete_VarAtts", "contents": "delete_VarAtts(${1:var}, ${2:atts})" },
        { "trigger": "demod_cmplx", "contents": "demod_cmplx(${1:x}, ${2:frqdem}, ${3:frqcut}, ${4:nwt}, ${5:ndim}, ${6:opt})" },
        { "trigger": "dim_avg_n_Wrap", "contents": "dim_avg_n_Wrap(${1:x}, ${2:dims})" },
        { "trigger": "dim_avg_wgt_n_Wrap", "contents": "dim_avg_wgt_n_Wrap(${1:x}, ${2:w}, ${3:opt}, ${4:dim})" },
        { "trigger": "dim_avg_wgt_Wrap", "contents": "dim_avg_wgt_Wrap(${1:x}, ${2:w}, ${3:opt})" },
        { "trigger": "dim_avg_Wrap", "contents": "dim_avg_Wrap(${1:x})" },
        { "trigger": "dim_cumsum_n_Wrap", "contents": "dim_cumsum_n_Wrap(${1:x}, ${2:opt}, ${3:dims})" },
        { "trigger": "dim_cumsum_Wrap", "contents": "dim_cumsum_Wrap(${1:x}, ${2:opt})" },
        { "trigger": "dim_max_n_Wrap", "contents": "dim_max_n_Wrap(${1:x}, ${2:dims})" },
        { "trigger": "dim_maxind", "contents": "dim_maxind(${1:arg}, ${2:dim})" },
        { "trigger": "dim_min_n_Wrap", "contents": "dim_min_n_Wrap(${1:x}, ${2:dims})" },
        { "trigger": "dim_minind", "contents": "dim_minind(${1:arg}, ${2:dim})" },
        { "trigger": "dim_rmsd_n_Wrap", "contents": "dim_rmsd_n_Wrap(${1:x}, ${2:y}, ${3:dims})" },
        { "trigger": "dim_rmsd_Wrap", "contents": "dim_rmsd_Wrap(${1:x}, ${2:y})" },
        { "trigger": "dim_rmvmean_n_Wrap", "contents": "dim_rmvmean_n_Wrap(${1:x}, ${2:dims})" },
        { "trigger": "dim_rmvmean_Wrap", "contents": "dim_rmvmean_Wrap(${1:x})" },
        { "trigger": "dim_rmvmed_n_Wrap", "contents": "dim_rmvmed_n_Wrap(${1:x}, ${2:dims})" },
        { "trigger": "dim_rmvmed_Wrap", "contents": "dim_rmvmed_Wrap(${1:x})" },
        { "trigger": "dim_standardize_n_Wrap", "contents": "dim_standardize_n_Wrap(${1:x}, ${2:opt}, ${3:dims})" },
        { "trigger": "dim_standardize_Wrap", "contents": "dim_standardize_Wrap(${1:x}, ${2:opt})" },
        { "trigger": "dim_stddev_n_Wrap", "contents": "dim_stddev_n_Wrap(${1:x}, ${2:dims})" },
        { "trigger": "dim_stddev_Wrap", "contents": "dim_stddev_Wrap(${1:x})" },
        { "trigger": "dim_sum_n_Wrap", "contents": "dim_sum_n_Wrap(${1:x}, ${2:dims})" },
        { "trigger": "dim_sum_wgt_n_Wrap", "contents": "dim_sum_wgt_n_Wrap(${1:x}, ${2:w}, ${3:opt}, ${4:dim})" },
        { "trigger": "dim_sum_wgt_Wrap", "contents": "dim_sum_wgt_Wrap(${1:x}, ${2:w}, ${3:opt})" },
        { "trigger": "dim_sum_Wrap", "contents": "dim_sum_Wrap(${1:x})" },
        { "trigger": "dim_variance_n_Wrap", "contents": "dim_variance_n_Wrap(${1:x}, ${2:dims})" },
        { "trigger": "dim_variance_Wrap", "contents": "dim_variance_Wrap(${1:x})" },
        { "trigger": "dpres_hybrid_ccm_se", "contents": "dpres_hybrid_ccm_se(${1:ps}, ${2:p0}, ${3:hyai}, ${4:hybi})" },
        { "trigger": "dpres_plevel_Wrap", "contents": "dpres_plevel_Wrap(${1:plev}, ${2:psfc}, ${3:ptop}, ${4:iopt})" },
        { "trigger": "dtrend_leftdim", "contents": "dtrend_leftdim(${1:y}, ${2:return_info})" },
        { "trigger": "dv2uvF_Wrap", "contents": "dv2uvF_Wrap(${1:dv})" },
        { "trigger": "dv2uvG_Wrap", "contents": "dv2uvG_Wrap(${1:dv})" },
        { "trigger": "eady_growth_rate", "contents": "eady_growth_rate(${1:th}, ${2:u}, ${3:z}, ${4:lat}, ${5:opt}, ${6:dim})" },
        { "trigger": "enthalpy", "contents": "enthalpy(${1:t}, ${2:w}, ${3:iounit})" },
        { "trigger": "eofcor_Wrap", "contents": "eofcor_Wrap(${1:data}, ${2:neval})" },
        { "trigger": "eofcov_Wrap", "contents": "eofcov_Wrap(${1:data}, ${2:neval})" },
        { "trigger": "eofunc_n_Wrap", "contents": "eofunc_n_Wrap(${1:data}, ${2:neval}, ${3:optEOF}, ${4:dim})" },
        { "trigger": "eofunc_north", "contents": "eofunc_north(${1:eval}, ${2:N}, ${3:prinfo})" },
        { "trigger": "eofunc_ts_n_Wrap", "contents": "eofunc_ts_n_Wrap(${1:data}, ${2:evec}, ${3:optETS}, ${4:dim})" },
        { "trigger": "eofunc_ts_Wrap", "contents": "eofunc_ts_Wrap(${1:data}, ${2:evec}, ${3:optETS})" },
        { "trigger": "eofunc_varimax_reorder", "contents": "eofunc_varimax_reorder(${1:evec_rot})" },
        { "trigger": "eofunc_varimax_Wrap", "contents": "eofunc_varimax_Wrap(${1:evec}, ${2:optEVX})" },
        { "trigger": "eofunc_Wrap", "contents": "eofunc_Wrap(${1:data}, ${2:neval}, ${3:optEOF})" },
        { "trigger": "epflux", "contents": "epflux(${1:u}, ${2:v}, ${3:t}, ${4:plvl}, ${5:lat}, ${6:opt})" },
        { "trigger": "epsZero", "contents": "epsZero(${1:x}, ${2:eps})" },
        { "trigger": "exponential_curve_fit", "contents": "exponential_curve_fit(${1:x}, ${2:y}, ${3:dims}, ${4:opt})" },
        { "trigger": "extract_globalatts_hdf5", "contents": "extract_globalatts_hdf5(${1:info}, ${2:key_word})" },
        { "trigger": "f2fosh_Wrap", "contents": "f2fosh_Wrap(${1:grid})" },
        { "trigger": "f2foshv_Wrap", "contents": "f2foshv_Wrap(${1:ureg}, ${2:vreg}, ${3:uoff}, ${4:voff})" },
        { "trigger": "f2fsh_Wrap", "contents": "f2fsh_Wrap(${1:grid}, ${2:outdims})" },
        { "trigger": "f2fshv_Wrap", "contents": "f2fshv_Wrap(${1:ua}, ${2:va}, ${3:ub}, ${4:vb})" },
        { "trigger": "f2gsh_Wrap", "contents": "f2gsh_Wrap(${1:grid}, ${2:outdims}, ${3:twave})" },
        { "trigger": "f2gshv_Wrap", "contents": "f2gshv_Wrap(${1:ua}, ${2:va}, ${3:ub}, ${4:vb}, ${5:twave})" },
        { "trigger": "fbindirSwap", "contents": "fbindirSwap(${1:in_file}, ${2:dims}, ${3:type}, ${4:out_file})" },
        { "trigger": "fbinseqSwap1", "contents": "fbinseqSwap1(${1:in_file}, ${2:out_file}, ${3:type}, ${4:dims})" },
        { "trigger": "fbinseqSwap2", "contents": "fbinseqSwap2(${1:in_file}, ${2:out_file}, ${3:type}, ${4:dims})" },
        { "trigger": "fire_index_haines", "contents": "fire_index_haines(${1:p}, ${2:t}, ${3:td}, ${4:opt})" },
        { "trigger": "flt2dble", "contents": "flt2dble(${1:x})" },
        { "trigger": "flt2string", "contents": "flt2string(${1:x})" },
        { "trigger": "fo2fsh_Wrap", "contents": "fo2fsh_Wrap(${1:grid})" },
        { "trigger": "fo2fshv_Wrap", "contents": "fo2fshv_Wrap(${1:uoff}, ${2:voff}, ${3:ureg}, ${4:vreg})" },
        { "trigger": "g2fsh_Wrap", "contents": "g2fsh_Wrap(${1:grid}, ${2:outdims})" },
        { "trigger": "g2fshv_Wrap", "contents": "g2fshv_Wrap(${1:ua}, ${2:va}, ${3:ub}, ${4:vb})" },
        { "trigger": "g2gsh_Wrap", "contents": "g2gsh_Wrap(${1:grid}, ${2:outdims}, ${3:twave})" },
        { "trigger": "g2gshv_Wrap", "contents": "g2gshv_Wrap(${1:ua}, ${2:va}, ${3:ub}, ${4:vb}, ${5:twave})" },
        { "trigger": "generate_sample_indices", "contents": "generate_sample_indices(${1:N}, ${2:method})" },
        { "trigger": "generate_unique_indices", "contents": "generate_unique_indices(${1:N})" },
        { "trigger": "genNormalDist", "contents": "genNormalDist(${1:xAve}, ${2:xStd}, ${3:opt})" },
        { "trigger": "geolocation_circle", "contents": "geolocation_circle(${1:clat}, ${2:clon}, ${3:crad}, ${4:urad}, ${5:N}, ${6:opt})" },
        { "trigger": "get1Dindex_Collapse", "contents": "get1Dindex_Collapse(${1:x}, ${2:exclude_value})" },
        { "trigger": "get1Dindex_Exclude", "contents": "get1Dindex_Exclude(${1:x}, ${2:exclude_value})" },
        { "trigger": "get_d2r", "contents": "get_d2r(${1:val})" },
        { "trigger": "get_file_suffix", "contents": "get_file_suffix(${1:fileName}, ${2:opt})" },
        { "trigger": "get_pi", "contents": "get_pi(${1:val})" },
        { "trigger": "get_r2d", "contents": "get_r2d(${1:val})" },
        { "trigger": "GetFillColor", "contents": "GetFillColor(${1:cnlevels}, ${2:cmap}, ${3:value})" },
        { "trigger": "GetFillColorIndex", "contents": "GetFillColorIndex(${1:cnlevels}, ${2:indices}, ${3:value})" },
        { "trigger": "getFillValue", "contents": "getFillValue(${1:x})" },
        { "trigger": "getind_latlon2d", "contents": "getind_latlon2d(${1:lat2d}, ${2:lon2d}, ${3:lat}, ${4:lon})" },
        { "trigger": "getVarFillValue", "contents": "getVarFillValue(${1:x})" },
        { "trigger": "grad_latlon_cfd", "contents": "grad_latlon_cfd(${1:z}, ${2:lat}, ${3:lon}, ${4:cyclic}, ${5:opt})" },
        { "trigger": "grib_stime2itime", "contents": "grib_stime2itime(${1:stime})" },
        { "trigger": "hyi2hyo_Wrap", "contents": "hyi2hyo_Wrap(${1:p0}, ${2:hyai}, ${3:hybi}, ${4:ps}, ${5:xi}, ${6:hyao}, ${7:hybo}, ${8:intflg})" },
        { "trigger": "ilapsF_Wrap", "contents": "ilapsF_Wrap(${1:zlap}, ${2:zlmbda})" },
        { "trigger": "ilapsG_Wrap", "contents": "ilapsG_Wrap(${1:zlap}, ${2:zlmbda})" },
        { "trigger": "ind_nearest_coord", "contents": "ind_nearest_coord(${1:z}, ${2:zcoord}, ${3:iopt})" },
        { "trigger": "int2dble", "contents": "int2dble(${1:x})" },
        { "trigger": "int2flt", "contents": "int2flt(${1:x})" },
        { "trigger": "int2p_n_Wrap", "contents": "int2p_n_Wrap(${1:pin}, ${2:xin}, ${3:pout}, ${4:linlog}, ${5:pdim})" },
        { "trigger": "int2p_Wrap", "contents": "int2p_Wrap(${1:pin}, ${2:xin}, ${3:pout}, ${4:linlog})" },
        { "trigger": "isconstant", "contents": "isconstant(${1:x})" },
        { "trigger": "isMonotonic", "contents": "isMonotonic(${1:x})" },
        { "trigger": "keyword_values", "contents": "keyword_values(${1:filename}, ${2:keyname}, ${3:keytype})" },
        { "trigger": "latent_heat_water", "contents": "latent_heat_water(${1:t}, ${2:iounit}, ${3:key}, ${4:opt})" },
        { "trigger": "latGau", "contents": "latGau(${1:nlat}, ${2:name}, ${3:longname}, ${4:units})" },
        { "trigger": "latGauWgt", "contents": "latGauWgt(${1:nlat}, ${2:name}, ${3:longname}, ${4:units})" },
        { "trigger": "latGlobeF", "contents": "latGlobeF(${1:nlat}, ${2:name}, ${3:longname}, ${4:units})" },
        { "trigger": "latGlobeFo", "contents": "latGlobeFo(${1:nlat}, ${2:name}, ${3:longname}, ${4:units})" },
        { "trigger": "latRegWgt", "contents": "latRegWgt(${1:lat}, ${2:nType}, ${3:opt})" },
        { "trigger": "linint1_n_Wrap", "contents": "linint1_n_Wrap(${1:xi}, ${2:fi}, ${3:fiCyclic}, ${4:xo}, ${5:foOption}, ${6:dim})" },
        { "trigger": "linint1_Wrap", "contents": "linint1_Wrap(${1:xi}, ${2:fi}, ${3:fiCyclic}, ${4:xo}, ${5:foOption})" },
        { "trigger": "linint2_points_Wrap", "contents": "linint2_points_Wrap(${1:xi}, ${2:yi}, ${3:fi}, ${4:fiCyclicX}, ${5:xo}, ${6:yo}, ${7:Option})" },
        { "trigger": "linint2_Wrap", "contents": "linint2_Wrap(${1:xi}, ${2:yi}, ${3:fi}, ${4:fiCyclicX}, ${5:xo}, ${6:yo}, ${7:foOption})" },
        { "trigger": "local_max_1d", "contents": "local_max_1d(${1:x}, ${2:cyclic}, ${3:delta}, ${4:iopt})" },
        { "trigger": "local_min_1d", "contents": "local_min_1d(${1:x}, ${2:cyclic}, ${3:delta}, ${4:iopt})" },
        { "trigger": "lonFlip", "contents": "lonFlip(${1:x})" },
        { "trigger": "lonGlobeF", "contents": "lonGlobeF(${1:nlon}, ${2:name}, ${3:longname}, ${4:units})" },
        { "trigger": "lonGlobeFo", "contents": "lonGlobeFo(${1:nlon}, ${2:name}, ${3:longname}, ${4:units})" },
        { "trigger": "lonPivot", "contents": "lonPivot(${1:x}, ${2:pivotLon})" },
        { "trigger": "merge_levels_sfc", "contents": "merge_levels_sfc(${1:x}, ${2:xsfc}, ${3:opt})" },
        { "trigger": "mixhum_convert", "contents": "mixhum_convert(${1:wq}, ${2:wqType}, ${3:iounit})" },
        { "trigger": "mod", "contents": "mod(${1:n}, ${2:m})" },
        { "trigger": "month_to_annual", "contents": "month_to_annual(${1:x}, ${2:opt})" },
        { "trigger": "month_to_annual_weighted", "contents": "month_to_annual_weighted(${1:yyyymm}, ${2:x}, ${3:opt})" },
        { "trigger": "month_to_season", "contents": "month_to_season(${1:xMon}, ${2:season})" },
        { "trigger": "month_to_season12", "contents": "month_to_season12(${1:xMon})" },
        { "trigger": "month_to_seasonN", "contents": "month_to_seasonN(${1:xMon}, ${2:season})" },
        { "trigger": "monthly_total_to_daily_mean", "contents": "monthly_total_to_daily_mean(${1:yyyymm}, ${2:x}, ${3:opt})" },
        { "trigger": "nameDim", "contents": "nameDim(${1:x}, ${2:dimNames}, ${3:longName}, ${4:units})" },
        { "trigger": "natgrid_Wrap", "contents": "natgrid_Wrap(${1:x}, ${2:y}, ${3:z}, ${4:xo}, ${5:yo})" },
        { "trigger": "NewCosWeight", "contents": "NewCosWeight(${1:y})" },
        { "trigger": "niceLatLon2D", "contents": "niceLatLon2D(${1:lat2d}, ${2:lon2d})" },
        { "trigger": "NormCosWgtGlobe", "contents": "NormCosWgtGlobe(${1:lat})" },
        { "trigger": "numAsciiCol", "contents": "numAsciiCol(${1:file_name})" },
        { "trigger": "numAsciiRow", "contents": "numAsciiRow(${1:file_name})" },
        { "trigger": "numeric2int", "contents": "numeric2int(${1:x}, ${2:iopt})" },
        { "trigger": "obj_anal_ic_deprecated", "contents": "obj_anal_ic_deprecated(${1:zlon}, ${2:zlat}, ${3:z}, ${4:glon}, ${5:glat}, ${6:rscan}, ${7:option})" },
        { "trigger": "obj_anal_ic_Wrap", "contents": "obj_anal_ic_Wrap(${1:zlon}, ${2:zlat}, ${3:z}, ${4:glon}, ${5:glat}, ${6:rscan}, ${7:option})" },
        { "trigger": "omega_ccm_driver", "contents": "omega_ccm_driver(${1:p0}, ${2:psfc}, ${3:u}, ${4:v}, ${5:hyam}, ${6:hybm}, ${7:hyai}, ${8:hybi})" },
        { "trigger": "omega_to_w", "contents": "omega_to_w(${1:omega}, ${2:p}, ${3:t})" },
        { "trigger": "oneDtostring", "contents": "oneDtostring(${1:x})" },
        { "trigger": "pack_values", "contents": "pack_values(${1:x}, ${2:packType}, ${3:opt})" },
        { "trigger": "parse_globalatts_hdf5", "contents": "parse_globalatts_hdf5(${1:f}, ${2:attName})" },
        { "trigger": "pattern_cor", "contents": "pattern_cor(${1:x}, ${2:y}, ${3:w}, ${4:opt})" },
        { "trigger": "pdfx", "contents": "pdfx(${1:x}, ${2:nbin}, ${3:opt})" },
        { "trigger": "pdfxy", "contents": "pdfxy(${1:x}, ${2:y}, ${3:nbinx}, ${4:nbiny}, ${5:opt})" },
        { "trigger": "pdfxy_conform", "contents": "pdfxy_conform(${1:x}, ${2:y}, ${3:nbinx}, ${4:nbiny}, ${5:opt})" },
        { "trigger": "pot_temp", "contents": "pot_temp(${1:p}, ${2:t}, ${3:dim}, ${4:opt})" },
        { "trigger": "pot_temp_equiv", "contents": "pot_temp_equiv(${1:p}, ${2:t}, ${3:w}, ${4:dim}, ${5:humVarType})" },
        { "trigger": "pot_temp_equiv_tlcl", "contents": "pot_temp_equiv_tlcl(${1:p}, ${2:t}, ${3:tlcl}, ${4:w}, ${5:iounits})" },
        { "trigger": "pot_vort_hybrid", "contents": "pot_vort_hybrid(${1:p}, ${2:u}, ${3:v}, ${4:t}, ${5:lat}, ${6:gridType}, ${7:opt})" },
        { "trigger": "pot_vort_isobaric", "contents": "pot_vort_isobaric(${1:p}, ${2:u}, ${3:v}, ${4:t}, ${5:lat}, ${6:gridType}, ${7:opt})" },
        { "trigger": "precip_rain_snow", "contents": "precip_rain_snow(${1:prc}, ${2:tmp}, ${3:train}, ${4:tsnow})" },
        { "trigger": "pres2hybrid_Wrap", "contents": "pres2hybrid_Wrap(${1:p}, ${2:ps}, ${3:p0}, ${4:xi}, ${5:hyao}, ${6:hybo}, ${7:intflg})" },
        { "trigger": "pres_hybrid_ccm_se", "contents": "pres_hybrid_ccm_se(${1:ps}, ${2:p0}, ${3:hya}, ${4:hyb})" },
        { "trigger": "print_clock", "contents": "print_clock(${1:title})" },
        { "trigger": "printMinMax", "contents": "printMinMax(${1:data}, ${2:opt})" },
        { "trigger": "quadroots", "contents": "quadroots(${1:a}, ${2:b}, ${3:c})" },
        { "trigger": "qvector_isobaric", "contents": "qvector_isobaric(${1:u}, ${2:v}, ${3:t}, ${4:ss}, ${5:p}, ${6:pdim}, ${7:gridType}, ${8:opt})" },
        { "trigger": "qvector_isobaric_cfd", "contents": "qvector_isobaric_cfd(${1:u}, ${2:v}, ${3:t}, ${4:ss}, ${5:p}, ${6:pdim}, ${7:gridType}, ${8:opt})" },
        { "trigger": "rcm2points_Wrap", "contents": "rcm2points_Wrap(${1:lat2d}, ${2:lon2d}, ${3:fi}, ${4:lat}, ${5:lon}, ${6:opt})" },
        { "trigger": "rcm2rgrid_Wrap", "contents": "rcm2rgrid_Wrap(${1:lat2d}, ${2:lon2d}, ${3:fi}, ${4:lat}, ${5:lon}, ${6:Option})" },
        { "trigger": "readAsciiHead", "contents": "readAsciiHead(${1:filename}, ${2:opt})" },
        { "trigger": "readAsciiTable", "contents": "readAsciiTable(${1:filename}, ${2:ncol}, ${3:data_type}, ${4:opt})" },
        { "trigger": "reg_multlin_stats", "contents": "reg_multlin_stats(${1:y}, ${2:x}, ${3:opt})" },
        { "trigger": "region_ind", "contents": "region_ind(${1:lat2d}, ${2:lon2d}, ${3:latS}, ${4:latN}, ${5:lonW}, ${6:lonE})" },
        { "trigger": "regline_stats", "contents": "regline_stats(${1:x}, ${2:y})" },
        { "trigger": "regline_weight", "contents": "regline_weight(${1:x}, ${2:y}, ${3:yu}, ${4:opt})" },
        { "trigger": "relhum_ttd", "contents": "relhum_ttd(${1:t}, ${2:td}, ${3:opt})" },
        { "trigger": "replaceSingleChar", "contents": "replaceSingleChar(${1:x}, ${2:oldC}, ${3:newC})" },
        { "trigger": "RGBtoCmap", "contents": "RGBtoCmap(${1:filename})" },
        { "trigger": "rgrid2rcm_Wrap", "contents": "rgrid2rcm_Wrap(${1:lat}, ${2:lon}, ${3:fi}, ${4:lat2d}, ${5:lon2d}, ${6:Option})" },
        { "trigger": "rho_mwjf", "contents": "rho_mwjf(${1:t2d}, ${2:s2d}, ${3:depth})" },
        { "trigger": "rigrad_bruntv_atm", "contents": "rigrad_bruntv_atm(${1:thv}, ${2:u}, ${3:v}, ${4:z}, ${5:opt}, ${6:dim})" },
        { "trigger": "rm_single_dims", "contents": "rm_single_dims(${1:x})" },
        { "trigger": "rmAnnCycle1D", "contents": "rmAnnCycle1D(${1:x})" },
        { "trigger": "rmInsufData", "contents": "rmInsufData(${1:x}, ${2:percent})" },
        { "trigger": "rmMonAnnCycLLLT", "contents": "rmMonAnnCycLLLT(${1:x})" },
        { "trigger": "rmMonAnnCycLLT", "contents": "rmMonAnnCycLLT(${1:x})" },
        { "trigger": "rmMonAnnCycTLL", "contents": "rmMonAnnCycTLL(${1:x})" },
        { "trigger": "runave_n_Wrap", "contents": "runave_n_Wrap(${1:x}, ${2:nave}, ${3:opt}, ${4:dim})" },
        { "trigger": "runave_Wrap", "contents": "runave_Wrap(${1:x}, ${2:nave}, ${3:opt})" },
        { "trigger": "satvpr_water_bolton", "contents": "satvpr_water_bolton(${1:t}, ${2:iounit})" },
        { "trigger": "satvpr_water_stipanuk", "contents": "satvpr_water_stipanuk(${1:t}, ${2:iounit})" },
        { "trigger": "scale_values", "contents": "scale_values(${1:x}, ${2:minRet}, ${3:maxRet}, ${4:opt})" },
        { "trigger": "shear_stretch_deform", "contents": "shear_stretch_deform(${1:u}, ${2:v}, ${3:lat}, ${4:gridType}, ${5:opt})" },
        { "trigger": "shear_stretch_deform_cfd", "contents": "shear_stretch_deform_cfd(${1:u}, ${2:v}, ${3:lat}, ${4:lon}, ${5:cyclic}, ${6:opt})" },
        { "trigger": "short2flt", "contents": "short2flt(${1:x})" },
        { "trigger": "short2flt_hdf", "contents": "short2flt_hdf(${1:x})" },
        { "trigger": "shsgc_R42_Wrap", "contents": "shsgc_R42_Wrap(${1:a}, ${2:b})" },
        { "trigger": "sign_f90", "contents": "sign_f90(${1:X}, ${2:Y})" },
        { "trigger": "sign_matlab", "contents": "sign_matlab(${1:X})" },
        { "trigger": "smth9_Wrap", "contents": "smth9_Wrap(${1:x}, ${2:p}, ${3:q}, ${4:wrap})" },
        { "trigger": "smthClmDayTLL", "contents": "smthClmDayTLL(${1:clmDay}, ${2:nHarm})" },
        { "trigger": "smthClmDayTLLL", "contents": "smthClmDayTLLL(${1:clmDay}, ${2:nHarm})" },
        { "trigger": "SqrtCosWeight", "contents": "SqrtCosWeight(${1:y})" },
        { "trigger": "stat_dispersion", "contents": "stat_dispersion(${1:x}, ${2:opt})" },
        { "trigger": "static_energy_atm", "contents": "static_energy_atm(${1:t}, ${2:q}, ${3:z}, ${4:iounit})" },
        { "trigger": "static_stability", "contents": "static_stability(${1:p}, ${2:t}, ${3:dim}, ${4:sopt})" },
        { "trigger": "stdMonLLLT", "contents": "stdMonLLLT(${1:x})" },
        { "trigger": "stdMonLLT", "contents": "stdMonLLT(${1:x})" },
        { "trigger": "stdMonTLL", "contents": "stdMonTLL(${1:x})" },
        { "trigger": "stdMonTLLL", "contents": "stdMonTLLL(${1:x})" },
        { "trigger": "symMinMaxPlt", "contents": "symMinMaxPlt(${1:x}, ${2:ncontours}, ${3:outside}, ${4:res})" },
        { "trigger": "table_attach_columns", "contents": "table_attach_columns(${1:t1}, ${2:t2}, ${3:opt})" },
        { "trigger": "table_attach_rows", "contents": "table_attach_rows(${1:t1}, ${2:t2}, ${3:opt})" },
        { "trigger": "taylor_stats", "contents": "taylor_stats(${1:t}, ${2:r}, ${3:w}, ${4:opt})" },
        { "trigger": "temp_virtual", "contents": "temp_virtual(${1:t}, ${2:w}, ${3:iounit})" },
        { "trigger": "time_reassign", "contents": "time_reassign(${1:f}, ${2:timeName})" },
        { "trigger": "time_reassign_cv2var", "contents": "time_reassign_cv2var(${1:f}, ${2:timeName}, ${3:varName})" },
        { "trigger": "time_to_newtime", "contents": "time_to_newtime(${1:time}, ${2:new_time_unit})" },
        { "trigger": "time_to_newtime_fix", "contents": "time_to_newtime_fix(${1:time}, ${2:new_time_unit})" },
        { "trigger": "tlcl_evp_bolton", "contents": "tlcl_evp_bolton(${1:t}, ${2:evp}, ${3:iounit})" },
        { "trigger": "tlcl_mixr_bolton", "contents": "tlcl_mixr_bolton(${1:t}, ${2:mixr}, ${3:p}, ${4:iounit})" },
        { "trigger": "tlcl_rh_bolton", "contents": "tlcl_rh_bolton(${1:t}, ${2:rh}, ${3:iounit})" },
        { "trigger": "tlcl_td_bolton", "contents": "tlcl_td_bolton(${1:t}, ${2:td}, ${3:iounit})" },
        { "trigger": "transpose", "contents": "transpose(${1:x})" },
        { "trigger": "triple2grid_Wrap", "contents": "triple2grid_Wrap(${1:x}, ${2:y}, ${3:data}, ${4:xgrid}, ${5:ygrid}, ${6:option})" },
        { "trigger": "unwrap_phase", "contents": "unwrap_phase(${1:phase})" },
        { "trigger": "ut_convert", "contents": "ut_convert(${1:dateFrom}, ${2:unitsTo})" },
        { "trigger": "ut_convert_fix", "contents": "ut_convert_fix(${1:dateFrom}, ${2:unitsTo})" },
        { "trigger": "uv2dvF_Wrap", "contents": "uv2dvF_Wrap(${1:u}, ${2:v})" },
        { "trigger": "uv2dvG_Wrap", "contents": "uv2dvG_Wrap(${1:u}, ${2:v})" },
        { "trigger": "uv2vrF_Wrap", "contents": "uv2vrF_Wrap(${1:u}, ${2:v})" },
        { "trigger": "uv2vrG_Wrap", "contents": "uv2vrG_Wrap(${1:u}, ${2:v})" },
        { "trigger": "vapor_pres_rh", "contents": "vapor_pres_rh(${1:rh}, ${2:esat})" },
        { "trigger": "venn2_difference", "contents": "venn2_difference(${1:a}, ${2:b})" },
        { "trigger": "venn2_intersection", "contents": "venn2_intersection(${1:a}, ${2:b})" },
        { "trigger": "venn2_union", "contents": "venn2_union(${1:a}, ${2:b})" },
        { "trigger": "vr2uvF_Wrap", "contents": "vr2uvF_Wrap(${1:vr})" },
        { "trigger": "vr2uvG_Wrap", "contents": "vr2uvG_Wrap(${1:vr})" },
        { "trigger": "w_to_omega", "contents": "w_to_omega(${1:w}, ${2:p}, ${3:t})" },
        { "trigger": "wallClockElapseTime", "contents": "wallClockElapseTime(${1:date}, ${2:title}, ${3:opt})" },
        { "trigger": "wave_number_spc", "contents": "wave_number_spc(${1:x}, ${2:grid_type})" },
        { "trigger": "wetbulb_stull", "contents": "wetbulb_stull(${1:t}, ${2:rh}, ${3:iounit}, ${4:opt})" },
        { "trigger": "wgt_areaave_Wrap", "contents": "wgt_areaave_Wrap(${1:q}, ${2:wgty}, ${3:wgtx}, ${4:opt})" },
        { "trigger": "wgt_runave_leftdim", "contents": "wgt_runave_leftdim(${1:x}, ${2:wgt}, ${3:opt})" },
        { "trigger": "wgt_runave_n_Wrap", "contents": "wgt_runave_n_Wrap(${1:x}, ${2:wgt}, ${3:opt}, ${4:dim})" },
        { "trigger": "wgt_runave_Wrap", "contents": "wgt_runave_Wrap(${1:x}, ${2:wgt}, ${3:opt})" },
        { "trigger": "wgt_vertical_n", "contents": "wgt_vertical_n(${1:x}, ${2:dp}, ${3:iopt}, ${4:dim})" },
        { "trigger": "wind_component", "contents": "wind_component(${1:wspd}, ${2:wdir}, ${3:opt})" },
        { "trigger": "wind_direction", "contents": "wind_direction(${1:u}, ${2:v}, ${3:opt})" },
        { "trigger": "wind_speed", "contents": "wind_speed(${1:u}, ${2:v})" },
        { "trigger": "wind_stats", "contents": "wind_stats(${1:wspd}, ${2:wdir}, ${3:nDim}, ${4:opt})" },
        { "trigger": "yyyyddd_to_yyyymmdd", "contents": "yyyyddd_to_yyyymmdd(${1:yyyyddd})" },
        { "trigger": "yyyymm_time", "contents": "yyyymm_time(${1:yrStrt}, ${2:yrLast}, ${3:TYPE})" },
        { "trigger": "yyyymm_to_yyyyfrac", "contents": "yyyymm_to_yyyyfrac(${1:yyyymm}, ${2:mm_offset})" },
        { "trigger": "yyyymmdd_time", "contents": "yyyymmdd_time(${1:yrStrt}, ${2:yrLast}, ${3:TYPE})" },
        { "trigger": "yyyymmdd_to_yyyyddd", "contents": "yyyymmdd_to_yyyyddd(${1:yyyymmdd})" },
        { "trigger": "yyyymmdd_to_yyyyfrac", "contents": "yyyymmdd_to_yyyyfrac(${1:yyyymmdd}, ${2:dd_offset})" },
        { "trigger": "yyyymmddhh_time", "contents": "yyyymmddhh_time(${1:yrStrt}, ${2:yrLast}, ${3:hrStep}, ${4:TYPE})" },
        { "trigger": "yyyymmddhh_to_yyyyfrac", "contents": "yyyymmddhh_to_yyyyfrac(${1:yyyymmddhh}, ${2:hh_offset})" },
        { "trigger": "zonal_mpsi_Wrap", "contents": "zonal_mpsi_Wrap(${1:v}, ${2:lat}, ${3:p}, ${4:ps})" },
        { "trigger": "zonalAve", "contents": "zonalAve(${1:x})" },
        { "trigger": "zscore", "contents": "zscore(${1:x}, ${2:flag}, ${3:dims})" },
        { "trigger": "box_percentile_plot", "contents": "box_percentile_plot(${1:wks}, ${2:data}, ${3:res}, ${4:box_res}, ${5:line_res}, ${6:marker_res}, ${7:per_res})" },
        { "trigger": "calendar_decode2", "contents": "calendar_decode2(${1:time}, ${2:option})" },
        { "trigger": "calendar_decode2_fix", "contents": "calendar_decode2_fix(${1:time}, ${2:option})" },
        { "trigger": "cd_inv_string", "contents": "cd_inv_string(${1:str_time}, ${2:time_format})" },
        { "trigger": "cd_string", "contents": "cd_string(${1:time}, ${2:inFormat})" },
        { "trigger": "kf_filter", "contents": "kf_filter(${1:x}, ${2:obsPerDay}, ${3:tMin}, ${4:tMax}, ${5:kMin}, ${6:kMax}, ${7:hMin}, ${8:hMax}, ${9:waveName})" },
        { "trigger": "run_cor", "contents": "run_cor(${1:x}, ${2:y}, ${3:time}, ${4:wSize})" },
        { "trigger": "time_axis_labels", "contents": "time_axis_labels(${1:time}, ${2:resplot}, ${3:restick})" },
        { "trigger": "ut_string", "contents": "ut_string(${1:time}, ${2:inFormat})" },
        { "trigger": "ut_string_fix", "contents": "ut_string_fix(${1:time}, ${2:inFormat})" },
        { "trigger": "wrf_contour", "contents": "wrf_contour(${1:nc_file}, ${2:wks}, ${3:data}, ${4:res})" },
        { "trigger": "wrf_map", "contents": "wrf_map(${1:wks}, ${2:nc_file}, ${3:res})" },
        { "trigger": "wrf_map_overlay", "contents": "wrf_map_overlay(${1:wks}, ${2:map}, ${3:plots}, ${4:res})" },
        { "trigger": "wrf_map_overlays", "contents": "wrf_map_overlays(${1:nc_file}, ${2:wks}, ${3:plots}, ${4:plt_res}, ${5:map_res})" },
        { "trigger": "wrf_map_resources", "contents": "wrf_map_resources(${1:nc_file}, ${2:res})" },
        { "trigger": "wrf_map_zoom", "contents": "wrf_map_zoom(${1:wks}, ${2:nc_file}, ${3:res}, ${4:y_start}, ${5:y_end}, ${6:x_start}, ${7:x_end})" },
        { "trigger": "wrf_overlay", "contents": "wrf_overlay(${1:wks}, ${2:plots}, ${3:res})" },
        { "trigger": "wrf_overlays", "contents": "wrf_overlays(${1:nc_file}, ${2:wks}, ${3:plots}, ${4:res})" },
        { "trigger": "wrf_user_getvar", "contents": "wrf_user_getvar(${1:file_handle}, ${2:variable}, ${3:time})" },
        { "trigger": "wrf_user_ij_to_ll", "contents": "wrf_user_ij_to_ll(${1:file_handle}, ${2:i}, ${3:j}, ${4:opt})" },
        { "trigger": "wrf_user_interp_level", "contents": "wrf_user_interp_level(${1:var3d}, ${2:vert}, ${3:desired_levels}, ${4:opt})" },
        { "trigger": "wrf_user_interp_line", "contents": "wrf_user_interp_line(${1:var2d}, ${2:loc_param}, ${3:opt})" },
        { "trigger": "wrf_user_intrp2d", "contents": "wrf_user_intrp2d(${1:var2d}, ${2:loc}, ${3:angle}, ${4:res})" },
        { "trigger": "wrf_user_intrp3d", "contents": "wrf_user_intrp3d(${1:var3d}, ${2:vert}, ${3:plot_type}, ${4:loc}, ${5:angle}, ${6:res})" },
        { "trigger": "wrf_user_latlon_to_ij", "contents": "wrf_user_latlon_to_ij(${1:nc_file}, ${2:latitude}, ${3:longitude})" },
        { "trigger": "wrf_user_list_times", "contents": "wrf_user_list_times(${1:file_handle})" },
        { "trigger": "wrf_user_ll_to_ij", "contents": "wrf_user_ll_to_ij(${1:file_handle}, ${2:lon}, ${3:lat}, ${4:opt})" },
        { "trigger": "wrf_user_ll_to_xy", "contents": "wrf_user_ll_to_xy(${1:file_handle}, ${2:lon}, ${3:lat}, ${4:opt})" },
        { "trigger": "wrf_user_unstagger", "contents": "wrf_user_unstagger(${1:varin}, ${2:unstagDim})" },
        { "trigger": "wrf_user_vert_cross", "contents": "wrf_user_vert_cross(${1:var3d}, ${2:vert}, ${3:loc_param}, ${4:opt})" },
        { "trigger": "wrf_user_vert_interp", "contents": "wrf_user_vert_interp(${1:file_handle}, ${2:field}, ${3:vert_coordinate}, ${4:interp_levels}, ${5:opts})" },
        { "trigger": "wrf_user_xy_to_ll", "contents": "wrf_user_xy_to_ll(${1:file_handle}, ${2:x}, ${3:y}, ${4:opt})" },
        { "trigger": "wrf_vector", "contents": "wrf_vector(${1:nc_file}, ${2:wks}, ${3:data_u}, ${4:data_v}, ${5:res})" },
        { "trigger": "gsn_add_annotation", "contents": "gsn_add_annotation(${1:plot_id}, ${2:graphic_id}, ${3:res})" },
        { "trigger": "gsn_add_polygon", "contents": "gsn_add_polygon(${1:wks}, ${2:plot}, ${3:x}, ${4:y}, ${5:res})" },
        { "trigger": "gsn_add_polyline", "contents": "gsn_add_polyline(${1:wks}, ${2:plot}, ${3:x}, ${4:y}, ${5:res})" },
        { "trigger": "gsn_add_polymarker", "contents": "gsn_add_polymarker(${1:wks}, ${2:plot}, ${3:x}, ${4:y}, ${5:res})" },
        { "trigger": "gsn_add_shapefile_polygons", "contents": "gsn_add_shapefile_polygons(${1:wks}, ${2:plot}, ${3:shp_name}, ${4:res})" },
        { "trigger": "gsn_add_shapefile_polylines", "contents": "gsn_add_shapefile_polylines(${1:wks}, ${2:plot}, ${3:shp_name}, ${4:res})" },
        { "trigger": "gsn_add_shapefile_polymarkers", "contents": "gsn_add_shapefile_polymarkers(${1:wks}, ${2:plot}, ${3:shp_name}, ${4:res})" },
        { "trigger": "gsn_add_text", "contents": "gsn_add_text(${1:wks}, ${2:plot}, ${3:text}, ${4:x}, ${5:y}, ${6:res})" },
        { "trigger": "gsn_attach_plots", "contents": "gsn_attach_plots(${1:base_plot}, ${2:plots}, ${3:res_base}, ${4:res_plots})" },
        { "trigger": "gsn_blank_plot", "contents": "gsn_blank_plot(${1:wks}, ${2:res})" },
        { "trigger": "gsn_contour", "contents": "gsn_contour(${1:wks}, ${2:data}, ${3:res})" },
        { "trigger": "gsn_contour_map", "contents": "gsn_contour_map(${1:wks}, ${2:data}, ${3:res})" },
        { "trigger": "gsn_contour_shade", "contents": "gsn_contour_shade(${1:plot}, ${2:lowval}, ${3:highval}, ${4:opt})" },
        { "trigger": "gsn_coordinates", "contents": "gsn_coordinates(${1:wks}, ${2:plot}, ${3:data}, ${4:res})" },
        { "trigger": "gsn_create_labelbar", "contents": "gsn_create_labelbar(${1:wks}, ${2:nboxes}, ${3:labels}, ${4:res})" },
        { "trigger": "gsn_create_legend", "contents": "gsn_create_legend(${1:wks}, ${2:nitems}, ${3:labels}, ${4:res})" },
        { "trigger": "gsn_create_text", "contents": "gsn_create_text(${1:wks}, ${2:text}, ${3:res})" },
        { "trigger": "gsn_csm_attach_zonal_means", "contents": "gsn_csm_attach_zonal_means(${1:wks}, ${2:map}, ${3:data}, ${4:res})" },
        { "trigger": "gsn_csm_blank_plot", "contents": "gsn_csm_blank_plot(${1:wks}, ${2:res})" },
        { "trigger": "gsn_csm_contour", "contents": "gsn_csm_contour(${1:wks}, ${2:data}, ${3:res})" },
        { "trigger": "gsn_csm_contour_map", "contents": "gsn_csm_contour_map(${1:wks}, ${2:data}, ${3:res})" },
        { "trigger": "gsn_csm_contour_map_ce", "contents": "gsn_csm_contour_map_ce(${1:wks}, ${2:data}, ${3:res})" },
        { "trigger": "gsn_csm_contour_map_overlay", "contents": "gsn_csm_contour_map_overlay(${1:wks}, ${2:data1}, ${3:data2}, ${4:res1}, ${5:res2})" },
        { "trigger": "gsn_csm_contour_map_polar", "contents": "gsn_csm_contour_map_polar(${1:wks}, ${2:data}, ${3:res})" },
        { "trigger": "gsn_csm_hov", "contents": "gsn_csm_hov(${1:wks}, ${2:data}, ${3:res})" },
        { "trigger": "gsn_csm_lat_time", "contents": "gsn_csm_lat_time(${1:wks}, ${2:data}, ${3:res})" },
        { "trigger": "gsn_csm_map", "contents": "gsn_csm_map(${1:wks}, ${2:res})" },
        { "trigger": "gsn_csm_map_ce", "contents": "gsn_csm_map_ce(${1:wks}, ${2:res})" },
        { "trigger": "gsn_csm_map_polar", "contents": "gsn_csm_map_polar(${1:wks}, ${2:res})" },
        { "trigger": "gsn_csm_pres_hgt", "contents": "gsn_csm_pres_hgt(${1:wks}, ${2:data}, ${3:res})" },
        { "trigger": "gsn_csm_pres_hgt_streamline", "contents": "gsn_csm_pres_hgt_streamline(${1:wks}, ${2:data}, ${3:xcomp}, ${4:zcomp}, ${5:res})" },
        { "trigger": "gsn_csm_pres_hgt_vector", "contents": "gsn_csm_pres_hgt_vector(${1:wks}, ${2:data}, ${3:xcomp}, ${4:zcomp}, ${5:res})" },
        { "trigger": "gsn_csm_streamline", "contents": "gsn_csm_streamline(${1:wks}, ${2:u}, ${3:v}, ${4:res})" },
        { "trigger": "gsn_csm_streamline_contour_map", "contents": "gsn_csm_streamline_contour_map(${1:wks}, ${2:u}, ${3:v}, ${4:data}, ${5:res})" },
        { "trigger": "gsn_csm_streamline_contour_map_ce", "contents": "gsn_csm_streamline_contour_map_ce(${1:wks}, ${2:u}, ${3:v}, ${4:data}, ${5:res})" },
        { "trigger": "gsn_csm_streamline_contour_map_polar", "contents": "gsn_csm_streamline_contour_map_polar(${1:wks}, ${2:u}, ${3:v}, ${4:data}, ${5:res})" },
        { "trigger": "gsn_csm_streamline_map", "contents": "gsn_csm_streamline_map(${1:wks}, ${2:u}, ${3:v}, ${4:res})" },
        { "trigger": "gsn_csm_streamline_map_ce", "contents": "gsn_csm_streamline_map_ce(${1:wks}, ${2:u}, ${3:v}, ${4:res})" },
        { "trigger": "gsn_csm_streamline_map_polar", "contents": "gsn_csm_streamline_map_polar(${1:wks}, ${2:u}, ${3:v}, ${4:res})" },
        { "trigger": "gsn_csm_streamline_scalar", "contents": "gsn_csm_streamline_scalar(${1:wks}, ${2:u}, ${3:v}, ${4:data}, ${5:res})" },
        { "trigger": "gsn_csm_streamline_scalar_map", "contents": "gsn_csm_streamline_scalar_map(${1:wks}, ${2:u}, ${3:v}, ${4:data}, ${5:res})" },
        { "trigger": "gsn_csm_streamline_scalar_map_ce", "contents": "gsn_csm_streamline_scalar_map_ce(${1:wks}, ${2:u}, ${3:v}, ${4:data}, ${5:res})" },
        { "trigger": "gsn_csm_streamline_scalar_map_polar", "contents": "gsn_csm_streamline_scalar_map_polar(${1:wks}, ${2:u}, ${3:v}, ${4:data}, ${5:res})" },
        { "trigger": "gsn_csm_time_lat", "contents": "gsn_csm_time_lat(${1:wks}, ${2:data}, ${3:res})" },
        { "trigger": "gsn_csm_vector", "contents": "gsn_csm_vector(${1:wks}, ${2:u}, ${3:v}, ${4:res})" },
        { "trigger": "gsn_csm_vector_map", "contents": "gsn_csm_vector_map(${1:wks}, ${2:u}, ${3:v}, ${4:res})" },
        { "trigger": "gsn_csm_vector_map_ce", "contents": "gsn_csm_vector_map_ce(${1:wks}, ${2:u}, ${3:v}, ${4:res})" },
        { "trigger": "gsn_csm_vector_map_polar", "contents": "gsn_csm_vector_map_polar(${1:wks}, ${2:u}, ${3:v}, ${4:res})" },
        { "trigger": "gsn_csm_vector_scalar", "contents": "gsn_csm_vector_scalar(${1:wks}, ${2:u}, ${3:v}, ${4:data}, ${5:res})" },
        { "trigger": "gsn_csm_vector_scalar_map", "contents": "gsn_csm_vector_scalar_map(${1:wks}, ${2:u}, ${3:v}, ${4:data}, ${5:res})" },
        { "trigger": "gsn_csm_vector_scalar_map_ce", "contents": "gsn_csm_vector_scalar_map_ce(${1:wks}, ${2:u}, ${3:v}, ${4:data}, ${5:res})" },
        { "trigger": "gsn_csm_vector_scalar_map_polar", "contents": "gsn_csm_vector_scalar_map_polar(${1:wks}, ${2:u}, ${3:v}, ${4:data}, ${5:res})" },
        { "trigger": "gsn_csm_x2y", "contents": "gsn_csm_x2y(${1:wks}, ${2:x1}, ${3:x2}, ${4:y}, ${5:res1}, ${6:res2})" },
        { "trigger": "gsn_csm_x2y2", "contents": "gsn_csm_x2y2(${1:wks}, ${2:x1}, ${3:x2}, ${4:y1}, ${5:y2}, ${6:res1}, ${7:res2})" },
        { "trigger": "gsn_csm_xy", "contents": "gsn_csm_xy(${1:wks}, ${2:x}, ${3:y}, ${4:res})" },
        { "trigger": "gsn_csm_xy2", "contents": "gsn_csm_xy2(${1:wks}, ${2:x}, ${3:y1}, ${4:y2}, ${5:res1}, ${6:res2})" },
        { "trigger": "gsn_csm_xy3", "contents": "gsn_csm_xy3(${1:wks}, ${2:x}, ${3:yL}, ${4:yR}, ${5:yR2}, ${6:resL}, ${7:resR}, ${8:resR2})" },
        { "trigger": "gsn_csm_y", "contents": "gsn_csm_y(${1:wks}, ${2:y}, ${3:res})" },
        { "trigger": "gsn_define_colormap", "contents": "gsn_define_colormap(${1:wks}, ${2:color_map})" },
        { "trigger": "gsn_draw_colormap", "contents": "gsn_draw_colormap(${1:wks})" },
        { "trigger": "gsn_draw_named_colors", "contents": "gsn_draw_named_colors(${1:wks}, ${2:colors}, ${3:dims})" },
        { "trigger": "gsn_histogram", "contents": "gsn_histogram(${1:wks}, ${2:data}, ${3:res})" },
        { "trigger": "gsn_labelbar_ndc", "contents": "gsn_labelbar_ndc(${1:wks}, ${2:nboxes}, ${3:labels}, ${4:x}, ${5:y}, ${6:res})" },
        { "trigger": "gsn_legend_ndc", "contents": "gsn_legend_ndc(${1:wks}, ${2:nitems}, ${3:labels}, ${4:x}, ${5:y}, ${6:res})" },
        { "trigger": "gsn_map", "contents": "gsn_map(${1:wks}, ${2:projection}, ${3:res})" },
        { "trigger": "gsn_merge_colormaps", "contents": "gsn_merge_colormaps(${1:wks}, ${2:color_map1}, ${3:color_map2})" },
        { "trigger": "gsn_open_wks", "contents": "gsn_open_wks(${1:type}, ${2:name})" },
        { "trigger": "gsn_panel", "contents": "gsn_panel(${1:wks}, ${2:plots}, ${3:dims}, ${4:res})" },
        { "trigger": "gsn_polygon", "contents": "gsn_polygon(${1:wks}, ${2:plot}, ${3:x}, ${4:y}, ${5:res})" },
        { "trigger": "gsn_polygon_ndc", "contents": "gsn_polygon_ndc(${1:wks}, ${2:x}, ${3:y}, ${4:res})" },
        { "trigger": "gsn_polyline", "contents": "gsn_polyline(${1:wks}, ${2:plot}, ${3:x}, ${4:y}, ${5:res})" },
        { "trigger": "gsn_polyline_ndc", "contents": "gsn_polyline_ndc(${1:wks}, ${2:x}, ${3:y}, ${4:res})" },
        { "trigger": "gsn_polymarker", "contents": "gsn_polymarker(${1:wks}, ${2:plot}, ${3:x}, ${4:y}, ${5:res})" },
        { "trigger": "gsn_polymarker_ndc", "contents": "gsn_polymarker_ndc(${1:wks}, ${2:x}, ${3:y}, ${4:res})" },
        { "trigger": "gsn_retrieve_colormap", "contents": "gsn_retrieve_colormap(${1:wks})" },
        { "trigger": "gsn_reverse_colormap", "contents": "gsn_reverse_colormap(${1:wks})" },
        { "trigger": "gsn_streamline", "contents": "gsn_streamline(${1:wks}, ${2:u}, ${3:v}, ${4:res})" },
        { "trigger": "gsn_streamline_map", "contents": "gsn_streamline_map(${1:wks}, ${2:u}, ${3:v}, ${4:res})" },
        { "trigger": "gsn_streamline_scalar", "contents": "gsn_streamline_scalar(${1:wks}, ${2:u}, ${3:v}, ${4:data}, ${5:res})" },
        { "trigger": "gsn_streamline_scalar_map", "contents": "gsn_streamline_scalar_map(${1:wks}, ${2:u}, ${3:v}, ${4:data}, ${5:res})" },
        { "trigger": "gsn_table", "contents": "gsn_table(${1:wks}, ${2:dims}, ${3:x}, ${4:y}, ${5:text}, ${6:res})" },
        { "trigger": "gsn_text", "contents": "gsn_text(${1:wks}, ${2:plot}, ${3:text}, ${4:x}, ${5:y}, ${6:res})" },
        { "trigger": "gsn_text_ndc", "contents": "gsn_text_ndc(${1:wks}, ${2:text}, ${3:x}, ${4:y}, ${5:res})" },
        { "trigger": "gsn_vector", "contents": "gsn_vector(${1:wks}, ${2:u}, ${3:v}, ${4:res})" },
        { "trigger": "gsn_vector_map", "contents": "gsn_vector_map(${1:wks}, ${2:u}, ${3:v}, ${4:res})" },
        { "trigger": "gsn_vector_scalar", "contents": "gsn_vector_scalar(${1:wks}, ${2:u}, ${3:v}, ${4:data}, ${5:res})" },
        { "trigger": "gsn_vector_scalar_map", "contents": "gsn_vector_scalar_map(${1:wks}, ${2:u}, ${3:v}, ${4:data}, ${5:res})" },
        { "trigger": "gsn_xy", "contents": "gsn_xy(${1:wks}, ${2:x}, ${3:y}, ${4:res})" },
        { "trigger": "gsn_y", "contents": "gsn_y(${1:wks}, ${2:y}, ${3:res})" },
        { "trigger": "hsv2rgb", "contents": "hsv2rgb(${1:h}, ${2:s}, ${3:v})" },
        { "trigger": "maximize_output", "contents": "maximize_output(${1:wks}, ${2:res})" },
        { "trigger": "reset_device_coordinates", "contents": "reset_device_coordinates(${1:wks})" },
        "amDataXF",
        "amDataYF",
        "amJust",
        "amOn",
        "amOrthogonalPosF",
        "amParallelPosF",
        "amResizeNotify",
        "amSide",
        "amTrackData",
        "amViewId",
        "amZone",
        "appDefaultParent",
        "appFileSuffix",
        "appResources",
        "appSysDir",
        "appUsrDir",
        "caCopyArrays",
        "caXArray",
        "caXCast",
        "caXMaxV",
        "caXMinV",
        "caXMissingV",
        "caYArray",
        "caYCast",
        "caYMaxV",
        "caYMinV",
        "caYMissingV",
        "cnCellFillEdgeColor",
        "cnCellFillMissingValEdgeColor",
        "cnConpackParams",
        "cnConstFEnableFill",
        "cnConstFLabelAngleF",
        "cnConstFLabelBackgroundColor",
        "cnConstFLabelConstantSpacingF",
        "cnConstFLabelFont",
        "cnConstFLabelFontAspectF",
        "cnConstFLabelFontColor",
        "cnConstFLabelFontHeightF",
        "cnConstFLabelFontQuality",
        "cnConstFLabelFontThicknessF",
        "cnConstFLabelFormat",
        "cnConstFLabelFuncCode",
        "cnConstFLabelJust",
        "cnConstFLabelOn",
        "cnConstFLabelOrthogonalPosF",
        "cnConstFLabelParallelPosF",
        "cnConstFLabelPerimColor",
        "cnConstFLabelPerimOn",
        "cnConstFLabelPerimSpaceF",
        "cnConstFLabelPerimThicknessF",
        "cnConstFLabelSide",
        "cnConstFLabelString",
        "cnConstFLabelTextDirection",
        "cnConstFLabelZone",
        "cnConstFUseInfoLabelRes",
        "cnExplicitLabelBarLabelsOn",
        "cnExplicitLegendLabelsOn",
        "cnExplicitLineLabelsOn",
        "cnFillBackgroundColor",
        "cnFillColor",
        "cnFillColors",
        "cnFillDotSizeF",
        "cnFillDrawOrder",
        "cnFillMode",
        "cnFillOn",
        "cnFillOpacityF",
        "cnFillPalette",
        "cnFillPattern",
        "cnFillPatterns",
        "cnFillScaleF",
        "cnFillScales",
        "cnFixFillBleed",
        "cnGridBoundFillColor",
        "cnGridBoundFillPattern",
        "cnGridBoundFillScaleF",
        "cnGridBoundPerimColor",
        "cnGridBoundPerimDashPattern",
        "cnGridBoundPerimOn",
        "cnGridBoundPerimThicknessF",
        "cnHighLabelAngleF",
        "cnHighLabelBackgroundColor",
        "cnHighLabelConstantSpacingF",
        "cnHighLabelCount",
        "cnHighLabelFont",
        "cnHighLabelFontAspectF",
        "cnHighLabelFontColor",
        "cnHighLabelFontHeightF",
        "cnHighLabelFontQuality",
        "cnHighLabelFontThicknessF",
        "cnHighLabelFormat",
        "cnHighLabelFuncCode",
        "cnHighLabelPerimColor",
        "cnHighLabelPerimOn",
        "cnHighLabelPerimSpaceF",
        "cnHighLabelPerimThicknessF",
        "cnHighLabelString",
        "cnHighLabelsOn",
        "cnHighLowLabelOverlapMode",
        "cnHighUseLineLabelRes",
        "cnInfoLabelAngleF",
        "cnInfoLabelBackgroundColor",
        "cnInfoLabelConstantSpacingF",
        "cnInfoLabelFont",
        "cnInfoLabelFontAspectF",
        "cnInfoLabelFontColor",
        "cnInfoLabelFontHeightF",
        "cnInfoLabelFontQuality",
        "cnInfoLabelFontThicknessF",
        "cnInfoLabelFormat",
        "cnInfoLabelFuncCode",
        "cnInfoLabelJust",
        "cnInfoLabelOn",
        "cnInfoLabelOrthogonalPosF",
        "cnInfoLabelParallelPosF",
        "cnInfoLabelPerimColor",
        "cnInfoLabelPerimOn",
        "cnInfoLabelPerimSpaceF",
        "cnInfoLabelPerimThicknessF",
        "cnInfoLabelSide",
        "cnInfoLabelString",
        "cnInfoLabelTextDirection",
        "cnInfoLabelZone",
        "cnLabelBarEndLabelsOn",
        "cnLabelBarEndStyle",
        "cnLabelDrawOrder",
        "cnLabelMasking",
        "cnLabelScaleFactorF",
        "cnLabelScaleValueF",
        "cnLabelScalingMode",
        "cnLegendLevelFlags",
        "cnLevelCount",
        "cnLevelFlag",
        "cnLevelFlags",
        "cnLevelSelectionMode",
        "cnLevelSpacingF",
        "cnLevels",
        "cnLineColor",
        "cnLineColors",
        "cnLineDashPattern",
        "cnLineDashPatterns",
        "cnLineDashSegLenF",
        "cnLineDrawOrder",
        "cnLineLabelAngleF",
        "cnLineLabelBackgroundColor",
        "cnLineLabelConstantSpacingF",
        "cnLineLabelCount",
        "cnLineLabelDensityF",
        "cnLineLabelFont",
        "cnLineLabelFontAspectF",
        "cnLineLabelFontColor",
        "cnLineLabelFontColors",
        "cnLineLabelFontHeightF",
        "cnLineLabelFontQuality",
        "cnLineLabelFontThicknessF",
        "cnLineLabelFormat",
        "cnLineLabelFuncCode",
        "cnLineLabelInterval",
        "cnLineLabelPerimColor",
        "cnLineLabelPerimOn",
        "cnLineLabelPerimSpaceF",
        "cnLineLabelPerimThicknessF",
        "cnLineLabelPlacementMode",
        "cnLineLabelStrings",
        "cnLineLabelsOn",
        "cnLinePalette",
        "cnLineThicknessF",
        "cnLineThicknesses",
        "cnLinesOn",
        "cnLowLabelAngleF",
        "cnLowLabelBackgroundColor",
        "cnLowLabelConstantSpacingF",
        "cnLowLabelCount",
        "cnLowLabelFont",
        "cnLowLabelFontAspectF",
        "cnLowLabelFontColor",
        "cnLowLabelFontHeightF",
        "cnLowLabelFontQuality",
        "cnLowLabelFontThicknessF",
        "cnLowLabelFormat",
        "cnLowLabelFuncCode",
        "cnLowLabelPerimColor",
        "cnLowLabelPerimOn",
        "cnLowLabelPerimSpaceF",
        "cnLowLabelPerimThicknessF",
        "cnLowLabelString",
        "cnLowLabelsOn",
        "cnLowUseHighLabelRes",
        "cnMaxDataValueFormat",
        "cnMaxLevelCount",
        "cnMaxLevelValF",
        "cnMaxPointDistanceF",
        "cnMinLevelValF",
        "cnMissingValFillColor",
        "cnMissingValFillPattern",
        "cnMissingValFillScaleF",
        "cnMissingValPerimColor",
        "cnMissingValPerimDashPattern",
        "cnMissingValPerimGridBoundOn",
        "cnMissingValPerimOn",
        "cnMissingValPerimThicknessF",
        "cnMonoFillColor",
        "cnMonoFillPattern",
        "cnMonoFillScale",
        "cnMonoLevelFlag",
        "cnMonoLineColor",
        "cnMonoLineDashPattern",
        "cnMonoLineLabelFontColor",
        "cnMonoLineThickness",
        "cnNoDataLabelOn",
        "cnNoDataLabelString",
        "cnOutOfRangeFillColor",
        "cnOutOfRangeFillPattern",
        "cnOutOfRangeFillScaleF",
        "cnOutOfRangePerimColor",
        "cnOutOfRangePerimDashPattern",
        "cnOutOfRangePerimOn",
        "cnOutOfRangePerimThicknessF",
        "cnRasterCellSizeF",
        "cnRasterMinCellSizeF",
        "cnRasterModeOn",
        "cnRasterSampleFactorF",
        "cnRasterSmoothingOn",
        "cnScalarFieldData",
        "cnSmoothingDistanceF",
        "cnSmoothingOn",
        "cnSmoothingTensionF",
        "cnSpanFillPalette",
        "cnSpanLinePalette",
        "ctCopyTables",
        "ctXElementSize",
        "ctXMaxV",
        "ctXMinV",
        "ctXMissingV",
        "ctXTable",
        "ctXTableLengths",
        "ctXTableType",
        "ctYElementSize",
        "ctYMaxV",
        "ctYMinV",
        "ctYMissingV",
        "ctYTable",
        "ctYTableLengths",
        "ctYTableType",
        "dcDelayCompute",
        "errBuffer",
        "errFileName",
        "errFilePtr",
        "errLevel",
        "errPrint",
        "errUnitNumber",
        "gsClipOn",
        "gsColors",
        "gsEdgeColor",
        "gsEdgeDashPattern",
        "gsEdgeDashSegLenF",
        "gsEdgeThicknessF",
        "gsEdgesOn",
        "gsFillBackgroundColor",
        "gsFillColor",
        "gsFillDotSizeF",
        "gsFillIndex",
        "gsFillLineThicknessF",
        "gsFillOpacityF",
        "gsFillScaleF",
        "gsFont",
        "gsFontAspectF",
        "gsFontColor",
        "gsFontHeightF",
        "gsFontOpacityF",
        "gsFontQuality",
        "gsFontThicknessF",
        "gsLineColor",
        "gsLineDashPattern",
        "gsLineDashSegLenF",
        "gsLineLabelConstantSpacingF",
        "gsLineLabelFont",
        "gsLineLabelFontAspectF",
        "gsLineLabelFontColor",
        "gsLineLabelFontHeightF",
        "gsLineLabelFontQuality",
        "gsLineLabelFontThicknessF",
        "gsLineLabelFuncCode",
        "gsLineLabelString",
        "gsLineOpacityF",
        "gsLineThicknessF",
        "gsMarkerColor",
        "gsMarkerIndex",
        "gsMarkerOpacityF",
        "gsMarkerSizeF",
        "gsMarkerThicknessF",
        "gsSegments",
        "gsTextAngleF",
        "gsTextConstantSpacingF",
        "gsTextDirection",
        "gsTextFuncCode",
        "gsTextJustification",
        "gsnAboveYRefLineBarColors",
        "gsnAboveYRefLineBarFillScales",
        "gsnAboveYRefLineBarPatterns",
        "gsnAboveYRefLineColor",
        "gsnAddCyclic",
        "gsnAttachBorderOn",
        "gsnAttachPlotsXAxis",
        "gsnBelowYRefLineBarColors",
        "gsnBelowYRefLineBarFillScales",
        "gsnBelowYRefLineBarPatterns",
        "gsnBelowYRefLineColor",
        "gsnBoxMargin",
        "gsnCenterString",
        "gsnCenterStringFontColor",
        "gsnCenterStringFontHeightF",
        "gsnCenterStringFuncCode",
        "gsnCenterStringOrthogonalPosF",
        "gsnCenterStringParallelPosF",
        "gsnContourLineThicknessesScale",
        "gsnContourNegLineDashPattern",
        "gsnContourPosLineDashPattern",
        "gsnContourZeroLineThicknessF",
        "gsnDebugWriteFileName",
        "gsnDraw",
        "gsnFrame",
        "gsnHistogramBarColors",
        "gsnHistogramBarWidthPercent",
        "gsnHistogramBinIntervals",
        "gsnHistogramBinMissing",
        "gsnHistogramBinWidth",
        "gsnHistogramClassIntervals",
        "gsnHistogramCompare",
        "gsnHistogramComputePercentages",
        "gsnHistogramComputePercentagesNoMissing",
        "gsnHistogramDiscreteBinValues",
        "gsnHistogramDiscreteClassValues",
        "gsnHistogramHorizontal",
        "gsnHistogramMinMaxBinsOn",
        "gsnHistogramNumberOfBins",
        "gsnHistogramPercentSign",
        "gsnHistogramSelectNiceIntervals",
        "gsnLeftString",
        "gsnLeftStringFontColor",
        "gsnLeftStringFontHeightF",
        "gsnLeftStringFuncCode",
        "gsnLeftStringOrthogonalPosF",
        "gsnLeftStringParallelPosF",
        "gsnLeftXRefLineBarColors",
        "gsnLeftXRefLineBarFillScales",
        "gsnLeftXRefLineBarPatterns",
        "gsnLeftXRefLineColor",
        "gsnMajorLatSpacing",
        "gsnMajorLonSpacing",
        "gsnMaskLambertConformal",
        "gsnMaskLambertConformalOutlineOn",
        "gsnMaximize",
        "gsnMinorLatSpacing",
        "gsnMinorLonSpacing",
        "gsnPanelBottom",
        "gsnPanelCenter",
        "gsnPanelDebug",
        "gsnPanelFigureStrings",
        "gsnPanelFigureStringsBackgroundFillColor",
        "gsnPanelFigureStringsFontHeightF",
        "gsnPanelFigureStringsJust",
        "gsnPanelFigureStringsPerimOn",
        "gsnPanelLabelBar",
        "gsnPanelLeft",
        "gsnPanelMainFont",
        "gsnPanelMainFontColor",
        "gsnPanelMainFontHeightF",
        "gsnPanelMainPosXF",
        "gsnPanelMainPosYF",
        "gsnPanelMainString",
        "gsnPanelRight",
        "gsnPanelRowSpec",
        "gsnPanelScalePlotIndex",
        "gsnPanelTop",
        "gsnPanelXF",
        "gsnPanelXWhiteSpacePercent",
        "gsnPanelYF",
        "gsnPanelYWhiteSpacePercent",
        "gsnPaperHeight",
        "gsnPaperMargin",
        "gsnPaperOrientation",
        "gsnPaperWidth",
        "gsnPolar",
        "gsnPolarLabelDistance",
        "gsnPolarLabelFont",
        "gsnPolarLabelFontHeightF",
        "gsnPolarLabelSpacing",
        "gsnPolarTime",
        "gsnPolarUT",
        "gsnRightString",
        "gsnRightStringFontColor",
        "gsnRightStringFontHeightF",
        "gsnRightStringFuncCode",
        "gsnRightStringOrthogonalPosF",
        "gsnRightStringParallelPosF",
        "gsnRightXRefLineBarColors",
        "gsnRightXRefLineBarFillScales",
        "gsnRightXRefLineBarPatterns",
        "gsnRightXRefLineColor",
        "gsnScalarContour",
        "gsnScale",
        "gsnShape",
        "gsnSpreadColorEnd",
        "gsnSpreadColorStart",
        "gsnSpreadColors",
        "gsnStringFont",
        "gsnStringFontColor",
        "gsnStringFontHeightF",
        "gsnStringFuncCode",
        "gsnTickMarksOn",
        "gsnXAxisIrregular2Linear",
        "gsnXAxisIrregular2Log",
        "gsnXRefLine",
        "gsnXRefLineColor",
        "gsnXRefLineColors",
        "gsnXRefLineDashPattern",
        "gsnXRefLineDashPatterns",
        "gsnXRefLineThicknessF",
        "gsnXRefLineThicknesses",
        "gsnXYAboveFillColors",
        "gsnXYBarChart",
        "gsnXYBarChartBarWidth",
        "gsnXYBarChartColors",
        "gsnXYBarChartColors2",
        "gsnXYBarChartFillDotSizeF",
        "gsnXYBarChartFillLineThicknessF",
        "gsnXYBarChartFillOpacityF",
        "gsnXYBarChartFillScaleF",
        "gsnXYBarChartOutlineOnly",
        "gsnXYBarChartOutlineThicknessF",
        "gsnXYBarChartPatterns",
        "gsnXYBarChartPatterns2",
        "gsnXYBelowFillColors",
        "gsnXYFillColors",
        "gsnXYFillOpacities",
        "gsnXYLeftFillColors",
        "gsnXYRightFillColors",
        "gsnYAxisIrregular2Linear",
        "gsnYAxisIrregular2Log",
        "gsnYRefLine",
        "gsnYRefLineColor",
        "gsnYRefLineColors",
        "gsnYRefLineDashPattern",
        "gsnYRefLineDashPatterns",
        "gsnYRefLineThicknessF",
        "gsnYRefLineThicknesses",
        "gsnZonalMean",
        "gsnZonalMeanXMaxF",
        "gsnZonalMeanXMinF",
        "gsnZonalMeanYRefLine",
        "lbAutoManage",
        "lbBottomMarginF",
        "lbBoxCount",
        "lbBoxEndCapStyle",
        "lbBoxFractions",
        "lbBoxLineColor",
        "lbBoxLineDashPattern",
        "lbBoxLineDashSegLenF",
        "lbBoxLineThicknessF",
        "lbBoxLinesOn",
        "lbBoxMajorExtentF",
        "lbBoxMinorExtentF",
        "lbBoxSeparatorLinesOn",
        "lbBoxSizing",
        "lbFillBackground",
        "lbFillColor",
        "lbFillColors",
        "lbFillDotSizeF",
        "lbFillLineThicknessF",
        "lbFillOpacityF",
        "lbFillPattern",
        "lbFillPatterns",
        "lbFillScaleF",
        "lbFillScales",
        "lbJustification",
        "lbLabelAlignment",
        "lbLabelAngleF",
        "lbLabelAutoStride",
        "lbLabelBarOn",
        "lbLabelConstantSpacingF",
        "lbLabelDirection",
        "lbLabelFont",
        "lbLabelFontAspectF",
        "lbLabelFontColor",
        "lbLabelFontHeightF",
        "lbLabelFontQuality",
        "lbLabelFontThicknessF",
        "lbLabelFuncCode",
        "lbLabelJust",
        "lbLabelOffsetF",
        "lbLabelPosition",
        "lbLabelStride",
        "lbLabelStrings",
        "lbLabelsOn",
        "lbLeftMarginF",
        "lbMaxLabelLenF",
        "lbMinLabelSpacingF",
        "lbMonoFillColor",
        "lbMonoFillPattern",
        "lbMonoFillScale",
        "lbOrientation",
        "lbOverrideFillOpacity",
        "lbPerimColor",
        "lbPerimDashPattern",
        "lbPerimDashSegLenF",
        "lbPerimFill",
        "lbPerimFillColor",
        "lbPerimOn",
        "lbPerimThicknessF",
        "lbRasterFillOn",
        "lbRightMarginF",
        "lbTitleAngleF",
        "lbTitleConstantSpacingF",
        "lbTitleDirection",
        "lbTitleExtentF",
        "lbTitleFont",
        "lbTitleFontAspectF",
        "lbTitleFontColor",
        "lbTitleFontHeightF",
        "lbTitleFontQuality",
        "lbTitleFontThicknessF",
        "lbTitleFuncCode",
        "lbTitleJust",
        "lbTitleOffsetF",
        "lbTitleOn",
        "lbTitlePosition",
        "lbTitleString",
        "lbTopMarginF",
        "lgAutoManage",
        "lgBottomMarginF",
        "lgBoxBackground",
        "lgBoxLineColor",
        "lgBoxLineDashPattern",
        "lgBoxLineDashSegLenF",
        "lgBoxLineThicknessF",
        "lgBoxLinesOn",
        "lgBoxMajorExtentF",
        "lgBoxMinorExtentF",
        "lgDashIndex",
        "lgDashIndexes",
        "lgItemCount",
        "lgItemOrder",
        "lgItemPlacement",
        "lgItemPositions",
        "lgItemType",
        "lgItemTypes",
        "lgJustification",
        "lgLabelAlignment",
        "lgLabelAngleF",
        "lgLabelAutoStride",
        "lgLabelConstantSpacingF",
        "lgLabelDirection",
        "lgLabelFont",
        "lgLabelFontAspectF",
        "lgLabelFontColor",
        "lgLabelFontHeightF",
        "lgLabelFontQuality",
        "lgLabelFontThicknessF",
        "lgLabelFuncCode",
        "lgLabelJust",
        "lgLabelOffsetF",
        "lgLabelPosition",
        "lgLabelStride",
        "lgLabelStrings",
        "lgLabelsOn",
        "lgLeftMarginF",
        "lgLegendOn",
        "lgLineColor",
        "lgLineColors",
        "lgLineDashSegLenF",
        "lgLineDashSegLens",
        "lgLineLabelConstantSpacingF",
        "lgLineLabelFont",
        "lgLineLabelFontAspectF",
        "lgLineLabelFontColor",
        "lgLineLabelFontColors",
        "lgLineLabelFontHeightF",
        "lgLineLabelFontHeights",
        "lgLineLabelFontQuality",
        "lgLineLabelFontThicknessF",
        "lgLineLabelFuncCode",
        "lgLineLabelStrings",
        "lgLineLabelsOn",
        "lgLineThicknessF",
        "lgLineThicknesses",
        "lgMarkerColor",
        "lgMarkerColors",
        "lgMarkerIndex",
        "lgMarkerIndexes",
        "lgMarkerSizeF",
        "lgMarkerSizes",
        "lgMarkerThicknessF",
        "lgMarkerThicknesses",
        "lgMonoDashIndex",
        "lgMonoItemType",
        "lgMonoLineColor",
        "lgMonoLineDashSegLen",
        "lgMonoLineLabelFontColor",
        "lgMonoLineLabelFontHeight",
        "lgMonoLineThickness",
        "lgMonoMarkerColor",
        "lgMonoMarkerIndex",
        "lgMonoMarkerSize",
        "lgMonoMarkerThickness",
        "lgOrientation",
        "lgPerimColor",
        "lgPerimDashPattern",
        "lgPerimDashSegLenF",
        "lgPerimFill",
        "lgPerimFillColor",
        "lgPerimOn",
        "lgPerimThicknessF",
        "lgRightMarginF",
        "lgTitleAngleF",
        "lgTitleConstantSpacingF",
        "lgTitleDirection",
        "lgTitleExtentF",
        "lgTitleFont",
        "lgTitleFontAspectF",
        "lgTitleFontColor",
        "lgTitleFontHeightF",
        "lgTitleFontQuality",
        "lgTitleFontThicknessF",
        "lgTitleFuncCode",
        "lgTitleJust",
        "lgTitleOffsetF",
        "lgTitleOn",
        "lgTitlePosition",
        "lgTitleString",
        "lgTopMarginF",
        "mpAreaGroupCount",
        "mpAreaMaskingOn",
        "mpAreaNames",
        "mpAreaTypes",
        "mpBottomAngleF",
        "mpBottomMapPosF",
        "mpBottomNDCF",
        "mpBottomNPCF",
        "mpBottomPointLatF",
        "mpBottomPointLonF",
        "mpBottomWindowF",
        "mpCenterLatF",
        "mpCenterLonF",
        "mpCenterRotF",
        "mpCountyLineColor",
        "mpCountyLineDashPattern",
        "mpCountyLineDashSegLenF",
        "mpCountyLineThicknessF",
        "mpDataBaseVersion",
        "mpDataResolution",
        "mpDataSetName",
        "mpDefaultFillColor",
        "mpDefaultFillPattern",
        "mpDefaultFillScaleF",
        "mpDynamicAreaGroups",
        "mpEllipticalBoundary",
        "mpFillAreaSpecifiers",
        "mpFillBoundarySets",
        "mpFillColor",
        "mpFillColors",
        "mpFillDotSizeF",
        "mpFillDrawOrder",
        "mpFillOn",
        "mpFillPatternBackground",
        "mpFillPattern",
        "mpFillPatterns",
        "mpFillScaleF",
        "mpFillScales",
        "mpFixedAreaGroups",
        "mpGeophysicalLineColor",
        "mpGeophysicalLineDashPattern",
        "mpGeophysicalLineDashSegLenF",
        "mpGeophysicalLineThicknessF",
        "mpGreatCircleLinesOn",
        "mpGridAndLimbDrawOrder",
        "mpGridAndLimbOn",
        "mpGridLatSpacingF",
        "mpGridLineColor",
        "mpGridLineDashPattern",
        "mpGridLineDashSegLenF",
        "mpGridLineThicknessF",
        "mpGridLonSpacingF",
        "mpGridMaskMode",
        "mpGridMaxLatF",
        "mpGridPolarLonSpacingF",
        "mpGridSpacingF",
        "mpInlandWaterFillColor",
        "mpInlandWaterFillPattern",
        "mpInlandWaterFillScaleF",
        "mpLabelDrawOrder",
        "mpLabelFontColor",
        "mpLabelFontHeightF",
        "mpLabelsOn",
        "mpLambertMeridianF",
        "mpLambertParallel1F",
        "mpLambertParallel2F",
        "mpLandFillColor",
        "mpLandFillPattern",
        "mpLandFillScaleF",
        "mpLeftAngleF",
        "mpLeftCornerLatF",
        "mpLeftCornerLonF",
        "mpLeftMapPosF",
        "mpLeftNDCF",
        "mpLeftNPCF",
        "mpLeftPointLatF",
        "mpLeftPointLonF",
        "mpLeftWindowF",
        "mpLimbLineColor",
        "mpLimbLineDashPattern",
        "mpLimbLineDashSegLenF",
        "mpLimbLineThicknessF",
        "mpLimitMode",
        "mpMaskAreaSpecifiers",
        "mpMaskOutlineSpecifiers",
        "mpMaxLatF",
        "mpMaxLonF",
        "mpMinLatF",
        "mpMinLonF",
        "mpMonoFillColor",
        "mpMonoFillPattern",
        "mpMonoFillScale",
        "mpNationalLineColor",
        "mpNationalLineDashPattern",
        "mpNationalLineDashSegLenF",
        "mpNationalLineThicknessF",
        "mpOceanFillColor",
        "mpOceanFillPattern",
        "mpOceanFillScaleF",
        "mpOutlineBoundarySets",
        "mpOutlineDrawOrder",
        "mpOutlineMaskingOn",
        "mpOutlineOn",
        "mpOutlineSpecifiers",
        "mpPerimDrawOrder",
        "mpPerimLineColor",
        "mpPerimLineDashPattern",
        "mpPerimLineDashSegLenF",
        "mpPerimLineThicknessF",
        "mpPerimOn",
        "mpPolyMode",
        "mpProjection",
        "mpProvincialLineColor",
        "mpProvincialLineDashPattern",
        "mpProvincialLineDashSegLenF",
        "mpProvincialLineThicknessF",
        "mpRelativeCenterLat",
        "mpRelativeCenterLon",
        "mpRightAngleF",
        "mpRightCornerLatF",
        "mpRightCornerLonF",
        "mpRightMapPosF",
        "mpRightNDCF",
        "mpRightNPCF",
        "mpRightPointLatF",
        "mpRightPointLonF",
        "mpRightWindowF",
        "mpSatelliteAngle1F",
        "mpSatelliteAngle2F",
        "mpSatelliteDistF",
        "mpShapeMode",
        "mpSpecifiedFillColors",
        "mpSpecifiedFillDirectIndexing",
        "mpSpecifiedFillPatterns",
        "mpSpecifiedFillPriority",
        "mpSpecifiedFillScales",
        "mpTopAngleF",
        "mpTopMapPosF",
        "mpTopNDCF",
        "mpTopNPCF",
        "mpTopPointLatF",
        "mpTopPointLonF",
        "mpTopWindowF",
        "mpUSStateLineColor",
        "mpUSStateLineDashPattern",
        "mpUSStateLineDashSegLenF",
        "mpUSStateLineThicknessF",
        "pmAnnoManagers",
        "pmAnnoViews",
        "pmLabelBarDisplayMode",
        "pmLabelBarHeightF",
        "pmLabelBarKeepAspect",
        "pmLabelBarOrthogonalPosF",
        "pmLabelBarParallelPosF",
        "pmLabelBarSide",
        "pmLabelBarWidthF",
        "pmLabelBarZone",
        "pmLegendDisplayMode",
        "pmLegendHeightF",
        "pmLegendKeepAspect",
        "pmLegendOrthogonalPosF",
        "pmLegendParallelPosF",
        "pmLegendSide",
        "pmLegendWidthF",
        "pmLegendZone",
        "pmOverlaySequenceIds",
        "pmTickMarkDisplayMode",
        "pmTickMarkZone",
        "pmTitleDisplayMode",
        "pmTitleZone",
        "prGraphicStyle",
        "prPolyType",
        "prXArray",
        "prYArray",
        "sfCopyData",
        "sfDataArray",
        "sfDataMaxV",
        "sfDataMinV",
        "sfElementNodes",
        "sfExchangeDimensions",
        "sfFirstNodeIndex",
        "sfMissingValueV",
        "sfXArray",
        "sfXCActualEndF",
        "sfXCActualStartF",
        "sfXCEndIndex",
        "sfXCEndSubsetV",
        "sfXCEndV",
        "sfXCStartIndex",
        "sfXCStartSubsetV",
        "sfXCStartV",
        "sfXCStride",
        "sfXCellBounds",
        "sfYArray",
        "sfYCActualEndF",
        "sfYCActualStartF",
        "sfYCEndIndex",
        "sfYCEndSubsetV",
        "sfYCEndV",
        "sfYCStartIndex",
        "sfYCStartSubsetV",
        "sfYCStartV",
        "sfYCStride",
        "sfYCellBounds",
        "stArrowLengthF",
        "stArrowStride",
        "stCrossoverCheckCount",
        "stExplicitLabelBarLabelsOn",
        "stLabelBarEndLabelsOn",
        "stLabelFormat",
        "stLengthCheckCount",
        "stLevelColors",
        "stLevelCount",
        "stLevelPalette",
        "stLevelSelectionMode",
        "stLevelSpacingF",
        "stLevels",
        "stLineColor",
        "stLineOpacityF",
        "stLineStartStride",
        "stLineThicknessF",
        "stMapDirection",
        "stMaxLevelCount",
        "stMaxLevelValF",
        "stMinArrowSpacingF",
        "stMinDistanceF",
        "stMinLevelValF",
        "stMinLineSpacingF",
        "stMinStepFactorF",
        "stMonoLineColor",
        "stNoDataLabelOn",
        "stNoDataLabelString",
        "stScalarFieldData",
        "stScalarMissingValColor",
        "stSpanLevelPalette",
        "stStepSizeF",
        "stStreamlineDrawOrder",
        "stUseScalarArray",
        "stVectorFieldData",
        "stZeroFLabelAngleF",
        "stZeroFLabelBackgroundColor",
        "stZeroFLabelConstantSpacingF",
        "stZeroFLabelFont",
        "stZeroFLabelFontAspectF",
        "stZeroFLabelFontColor",
        "stZeroFLabelFontHeightF",
        "stZeroFLabelFontQuality",
        "stZeroFLabelFontThicknessF",
        "stZeroFLabelFuncCode",
        "stZeroFLabelJust",
        "stZeroFLabelOn",
        "stZeroFLabelOrthogonalPosF",
        "stZeroFLabelParallelPosF",
        "stZeroFLabelPerimColor",
        "stZeroFLabelPerimOn",
        "stZeroFLabelPerimSpaceF",
        "stZeroFLabelPerimThicknessF",
        "stZeroFLabelSide",
        "stZeroFLabelString",
        "stZeroFLabelTextDirection",
        "stZeroFLabelZone",
        "tfDoNDCOverlay",
        "tfPlotManagerOn",
        "tfPolyDrawList",
        "tfPolyDrawOrder",
        "tiDeltaF",
        "tiMainAngleF",
        "tiMainConstantSpacingF",
        "tiMainDirection",
        "tiMainFont",
        "tiMainFontAspectF",
        "tiMainFontColor",
        "tiMainFontHeightF",
        "tiMainFontQuality",
        "tiMainFontThicknessF",
        "tiMainFuncCode",
        "tiMainJust",
        "tiMainOffsetXF",
        "tiMainOffsetYF",
        "tiMainOn",
        "tiMainPosition",
        "tiMainSide",
        "tiMainString",
        "tiUseMainAttributes",
        "tiXAxisAngleF",
        "tiXAxisConstantSpacingF",
        "tiXAxisDirection",
        "tiXAxisFont",
        "tiXAxisFontAspectF",
        "tiXAxisFontColor",
        "tiXAxisFontHeightF",
        "tiXAxisFontQuality",
        "tiXAxisFontThicknessF",
        "tiXAxisFuncCode",
        "tiXAxisJust",
        "tiXAxisOffsetXF",
        "tiXAxisOffsetYF",
        "tiXAxisOn",
        "tiXAxisPosition",
        "tiXAxisSide",
        "tiXAxisString",
        "tiYAxisAngleF",
        "tiYAxisConstantSpacingF",
        "tiYAxisDirection",
        "tiYAxisFont",
        "tiYAxisFontAspectF",
        "tiYAxisFontColor",
        "tiYAxisFontHeightF",
        "tiYAxisFontQuality",
        "tiYAxisFontThicknessF",
        "tiYAxisFuncCode",
        "tiYAxisJust",
        "tiYAxisOffsetXF",
        "tiYAxisOffsetYF",
        "tiYAxisOn",
        "tiYAxisPosition",
        "tiYAxisSide",
        "tiYAxisString",
        "tmBorderLineColor",
        "tmBorderThicknessF",
        "tmEqualizeXYSizes",
        "tmGridDrawOrder",
        "tmLabelAutoStride",
        "tmSciNoteCutoff",
        "tmXBAutoPrecision",
        "tmXBBorderOn",
        "tmXBDataLeftF",
        "tmXBDataRightF",
        "tmXBFormat",
        "tmXBIrrTensionF",
        "tmXBIrregularPoints",
        "tmXBLabelAngleF",
        "tmXBLabelConstantSpacingF",
        "tmXBLabelDeltaF",
        "tmXBLabelDirection",
        "tmXBLabelFont",
        "tmXBLabelFontAspectF",
        "tmXBLabelFontColor",
        "tmXBLabelFontHeightF",
        "tmXBLabelFontQuality",
        "tmXBLabelFontThicknessF",
        "tmXBLabelFuncCode",
        "tmXBLabelJust",
        "tmXBLabelStride",
        "tmXBLabels",
        "tmXBLabelsOn",
        "tmXBMajorLengthF",
        "tmXBMajorLineColor",
        "tmXBMajorOutwardLengthF",
        "tmXBMajorThicknessF",
        "tmXBMaxLabelLenF",
        "tmXBMaxTicks",
        "tmXBMinLabelSpacingF",
        "tmXBMinorLengthF",
        "tmXBMinorLineColor",
        "tmXBMinorOn",
        "tmXBMinorOutwardLengthF",
        "tmXBMinorPerMajor",
        "tmXBMinorThicknessF",
        "tmXBMinorValues",
        "tmXBMode",
        "tmXBOn",
        "tmXBPrecision",
        "tmXBStyle",
        "tmXBTickEndF",
        "tmXBTickSpacingF",
        "tmXBTickStartF",
        "tmXBValues",
        "tmXMajorGrid",
        "tmXMajorGridLineColor",
        "tmXMajorGridLineDashPattern",
        "tmXMajorGridThicknessF",
        "tmXMinorGrid",
        "tmXMinorGridLineColor",
        "tmXMinorGridLineDashPattern",
        "tmXMinorGridThicknessF",
        "tmXTAutoPrecision",
        "tmXTBorderOn",
        "tmXTDataLeftF",
        "tmXTDataRightF",
        "tmXTFormat",
        "tmXTIrrTensionF",
        "tmXTIrregularPoints",
        "tmXTLabelAngleF",
        "tmXTLabelConstantSpacingF",
        "tmXTLabelDeltaF",
        "tmXTLabelDirection",
        "tmXTLabelFont",
        "tmXTLabelFontAspectF",
        "tmXTLabelFontColor",
        "tmXTLabelFontHeightF",
        "tmXTLabelFontQuality",
        "tmXTLabelFontThicknessF",
        "tmXTLabelFuncCode",
        "tmXTLabelJust",
        "tmXTLabelStride",
        "tmXTLabels",
        "tmXTLabelsOn",
        "tmXTMajorLengthF",
        "tmXTMajorLineColor",
        "tmXTMajorOutwardLengthF",
        "tmXTMajorThicknessF",
        "tmXTMaxLabelLenF",
        "tmXTMaxTicks",
        "tmXTMinLabelSpacingF",
        "tmXTMinorLengthF",
        "tmXTMinorLineColor",
        "tmXTMinorOn",
        "tmXTMinorOutwardLengthF",
        "tmXTMinorPerMajor",
        "tmXTMinorThicknessF",
        "tmXTMinorValues",
        "tmXTMode",
        "tmXTOn",
        "tmXTPrecision",
        "tmXTStyle",
        "tmXTTickEndF",
        "tmXTTickSpacingF",
        "tmXTTickStartF",
        "tmXTValues",
        "tmXUseBottom",
        "tmYLAutoPrecision",
        "tmYLBorderOn",
        "tmYLDataBottomF",
        "tmYLDataTopF",
        "tmYLFormat",
        "tmYLIrrTensionF",
        "tmYLIrregularPoints",
        "tmYLLabelAngleF",
        "tmYLLabelConstantSpacingF",
        "tmYLLabelDeltaF",
        "tmYLLabelDirection",
        "tmYLLabelFont",
        "tmYLLabelFontAspectF",
        "tmYLLabelFontColor",
        "tmYLLabelFontHeightF",
        "tmYLLabelFontQuality",
        "tmYLLabelFontThicknessF",
        "tmYLLabelFuncCode",
        "tmYLLabelJust",
        "tmYLLabelStride",
        "tmYLLabels",
        "tmYLLabelsOn",
        "tmYLMajorLengthF",
        "tmYLMajorLineColor",
        "tmYLMajorOutwardLengthF",
        "tmYLMajorThicknessF",
        "tmYLMaxLabelLenF",
        "tmYLMaxTicks",
        "tmYLMinLabelSpacingF",
        "tmYLMinorLengthF",
        "tmYLMinorLineColor",
        "tmYLMinorOn",
        "tmYLMinorOutwardLengthF",
        "tmYLMinorPerMajor",
        "tmYLMinorThicknessF",
        "tmYLMinorValues",
        "tmYLMode",
        "tmYLOn",
        "tmYLPrecision",
        "tmYLStyle",
        "tmYLTickEndF",
        "tmYLTickSpacingF",
        "tmYLTickStartF",
        "tmYLValues",
        "tmYMajorGrid",
        "tmYMajorGridLineColor",
        "tmYMajorGridLineDashPattern",
        "tmYMajorGridThicknessF",
        "tmYMinorGrid",
        "tmYMinorGridLineColor",
        "tmYMinorGridLineDashPattern",
        "tmYMinorGridThicknessF",
        "tmYRAutoPrecision",
        "tmYRBorderOn",
        "tmYRDataBottomF",
        "tmYRDataTopF",
        "tmYRFormat",
        "tmYRIrrTensionF",
        "tmYRIrregularPoints",
        "tmYRLabelAngleF",
        "tmYRLabelConstantSpacingF",
        "tmYRLabelDeltaF",
        "tmYRLabelDirection",
        "tmYRLabelFont",
        "tmYRLabelFontAspectF",
        "tmYRLabelFontColor",
        "tmYRLabelFontHeightF",
        "tmYRLabelFontQuality",
        "tmYRLabelFontThicknessF",
        "tmYRLabelFuncCode",
        "tmYRLabelJust",
        "tmYRLabelStride",
        "tmYRLabels",
        "tmYRLabelsOn",
        "tmYRMajorLengthF",
        "tmYRMajorLineColor",
        "tmYRMajorOutwardLengthF",
        "tmYRMajorThicknessF",
        "tmYRMaxLabelLenF",
        "tmYRMaxTicks",
        "tmYRMinLabelSpacingF",
        "tmYRMinorLengthF",
        "tmYRMinorLineColor",
        "tmYRMinorOn",
        "tmYRMinorOutwardLengthF",
        "tmYRMinorPerMajor",
        "tmYRMinorThicknessF",
        "tmYRMinorValues",
        "tmYRMode",
        "tmYROn",
        "tmYRPrecision",
        "tmYRStyle",
        "tmYRTickEndF",
        "tmYRTickSpacingF",
        "tmYRTickStartF",
        "tmYRValues",
        "tmYUseLeft",
        "trGridType",
        "trLineInterpolationOn",
        "trXAxisType",
        "trXCoordPoints",
        "trXInterPoints",
        "trXLog",
        "trXMaxF",
        "trXMinF",
        "trXReverse",
        "trXSamples",
        "trXTensionF",
        "trYAxisType",
        "trYCoordPoints",
        "trYInterPoints",
        "trYLog",
        "trYMaxF",
        "trYMinF",
        "trYReverse",
        "trYSamples",
        "trYTensionF",
        "txAngleF",
        "txBackgroundFillColor",
        "txConstantSpacingF",
        "txDirection",
        "txFont",
        "txFontAspectF",
        "txFontColor",
        "txFontHeightF",
        "txFontOpacityF",
        "txFontQuality",
        "txFontThicknessF",
        "txFuncCode",
        "txJust",
        "txPerimColor",
        "txPerimDashLengthF",
        "txPerimDashPattern",
        "txPerimOn",
        "txPerimSpaceF",
        "txPerimThicknessF",
        "txPosXF",
        "txPosYF",
        "txString",
        "vcExplicitLabelBarLabelsOn",
        "vcFillArrowEdgeColor",
        "vcFillArrowEdgeThicknessF",
        "vcFillArrowFillColor",
        "vcFillArrowHeadInteriorXF",
        "vcFillArrowHeadMinFracXF",
        "vcFillArrowHeadMinFracYF",
        "vcFillArrowHeadXF",
        "vcFillArrowHeadYF",
        "vcFillArrowMinFracWidthF",
        "vcFillArrowWidthF",
        "vcFillArrowsOn",
        "vcFillOverEdge",
        "vcGlyphOpacityF",
        "vcGlyphStyle",
        "vcLabelBarEndLabelsOn",
        "vcLabelFontColor",
        "vcLabelFontHeightF",
        "vcLabelsOn",
        "vcLabelsUseVectorColor",
        "vcLevelColors",
        "vcLevelCount",
        "vcLevelPalette",
        "vcLevelSelectionMode",
        "vcLevelSpacingF",
        "vcLevels",
        "vcLineArrowColor",
        "vcLineArrowHeadMaxSizeF",
        "vcLineArrowHeadMinSizeF",
        "vcLineArrowThicknessF",
        "vcMagnitudeFormat",
        "vcMagnitudeScaleFactorF",
        "vcMagnitudeScaleValueF",
        "vcMagnitudeScalingMode",
        "vcMapDirection",
        "vcMaxLevelCount",
        "vcMaxLevelValF",
        "vcMaxMagnitudeF",
        "vcMinAnnoAngleF",
        "vcMinAnnoArrowAngleF",
        "vcMinAnnoArrowEdgeColor",
        "vcMinAnnoArrowFillColor",
        "vcMinAnnoArrowLineColor",
        "vcMinAnnoArrowMinOffsetF",
        "vcMinAnnoArrowSpaceF",
        "vcMinAnnoArrowUseVecColor",
        "vcMinAnnoBackgroundColor",
        "vcMinAnnoConstantSpacingF",
        "vcMinAnnoExplicitMagnitudeF",
        "vcMinAnnoFont",
        "vcMinAnnoFontAspectF",
        "vcMinAnnoFontColor",
        "vcMinAnnoFontHeightF",
        "vcMinAnnoFontQuality",
        "vcMinAnnoFontThicknessF",
        "vcMinAnnoFuncCode",
        "vcMinAnnoJust",
        "vcMinAnnoOn",
        "vcMinAnnoOrientation",
        "vcMinAnnoOrthogonalPosF",
        "vcMinAnnoParallelPosF",
        "vcMinAnnoPerimColor",
        "vcMinAnnoPerimOn",
        "vcMinAnnoPerimSpaceF",
        "vcMinAnnoPerimThicknessF",
        "vcMinAnnoSide",
        "vcMinAnnoString1",
        "vcMinAnnoString1On",
        "vcMinAnnoString2",
        "vcMinAnnoString2On",
        "vcMinAnnoTextDirection",
        "vcMinAnnoZone",
        "vcMinDistanceF",
        "vcMinFracLengthF",
        "vcMinLevelValF",
        "vcMinMagnitudeF",
        "vcMonoFillArrowEdgeColor",
        "vcMonoFillArrowFillColor",
        "vcMonoLineArrowColor",
        "vcMonoWindBarbColor",
        "vcNoDataLabelOn",
        "vcNoDataLabelString",
        "vcPositionMode",
        "vcRefAnnoAngleF",
        "vcRefAnnoArrowAngleF",
        "vcRefAnnoArrowEdgeColor",
        "vcRefAnnoArrowFillColor",
        "vcRefAnnoArrowLineColor",
        "vcRefAnnoArrowMinOffsetF",
        "vcRefAnnoArrowSpaceF",
        "vcRefAnnoArrowUseVecColor",
        "vcRefAnnoBackgroundColor",
        "vcRefAnnoConstantSpacingF",
        "vcRefAnnoExplicitMagnitudeF",
        "vcRefAnnoFont",
        "vcRefAnnoFontAspectF",
        "vcRefAnnoFontColor",
        "vcRefAnnoFontHeightF",
        "vcRefAnnoFontQuality",
        "vcRefAnnoFontThicknessF",
        "vcRefAnnoFuncCode",
        "vcRefAnnoJust",
        "vcRefAnnoOn",
        "vcRefAnnoOrientation",
        "vcRefAnnoOrthogonalPosF",
        "vcRefAnnoParallelPosF",
        "vcRefAnnoPerimColor",
        "vcRefAnnoPerimOn",
        "vcRefAnnoPerimSpaceF",
        "vcRefAnnoPerimThicknessF",
        "vcRefAnnoSide",
        "vcRefAnnoString1",
        "vcRefAnnoString1On",
        "vcRefAnnoString2",
        "vcRefAnnoString2On",
        "vcRefAnnoTextDirection",
        "vcRefAnnoZone",
        "vcRefLengthF",
        "vcRefMagnitudeF",
        "vcScalarFieldData",
        "vcScalarMissingValColor",
        "vcScalarValueFormat",
        "vcScalarValueScaleFactorF",
        "vcScalarValueScaleValueF",
        "vcScalarValueScalingMode",
        "vcSpanLevelPalette",
        "vcUseRefAnnoRes",
        "vcUseScalarArray",
        "vcVectorDrawOrder",
        "vcVectorFieldData",
        "vcWindBarbCalmCircleSizeF",
        "vcWindBarbColor",
        "vcWindBarbLineThicknessF",
        "vcWindBarbScaleFactorF",
        "vcWindBarbTickAngleF",
        "vcWindBarbTickLengthF",
        "vcWindBarbTickSpacingF",
        "vcZeroFLabelAngleF",
        "vcZeroFLabelBackgroundColor",
        "vcZeroFLabelConstantSpacingF",
        "vcZeroFLabelFont",
        "vcZeroFLabelFontAspectF",
        "vcZeroFLabelFontColor",
        "vcZeroFLabelFontHeightF",
        "vcZeroFLabelFontQuality",
        "vcZeroFLabelFontThicknessF",
        "vcZeroFLabelFuncCode",
        "vcZeroFLabelJust",
        "vcZeroFLabelOn",
        "vcZeroFLabelOrthogonalPosF",
        "vcZeroFLabelParallelPosF",
        "vcZeroFLabelPerimColor",
        "vcZeroFLabelPerimOn",
        "vcZeroFLabelPerimSpaceF",
        "vcZeroFLabelPerimThicknessF",
        "vcZeroFLabelSide",
        "vcZeroFLabelString",
        "vcZeroFLabelTextDirection",
        "vcZeroFLabelZone",
        "vfCopyData",
        "vfDataArray",
        "vfExchangeDimensions",
        "vfExchangeUVData",
        "vfMagMaxV",
        "vfMagMinV",
        "vfMissingUValueV",
        "vfMissingVValueV",
        "vfPolarData",
        "vfSingleMissingValue",
        "vfUDataArray",
        "vfUMaxV",
        "vfUMinV",
        "vfVDataArray",
        "vfVMaxV",
        "vfVMinV",
        "vfXArray",
        "vfXCActualEndF",
        "vfXCActualStartF",
        "vfXCEndIndex",
        "vfXCEndSubsetV",
        "vfXCEndV",
        "vfXCStartIndex",
        "vfXCStartSubsetV",
        "vfXCStartV",
        "vfXCStride",
        "vfYArray",
        "vfYCActualEndF",
        "vfYCActualStartF",
        "vfYCEndIndex",
        "vfYCEndSubsetV",
        "vfYCEndV",
        "vfYCStartIndex",
        "vfYCStartSubsetV",
        "vfYCStartV",
        "vfYCStride",
        "vpAnnoManagerId",
        "vpClipOn",
        "vpHeightF",
        "vpKeepAspect",
        "vpOn",
        "vpUseSegments",
        "vpWidthF",
        "vpXF",
        "vpYF",
        "wkAntiAlias",
        "wkBackgroundColor",
        "wkBackgroundOpacityF",
        "wkColorMapLen",
        "wkColorMap",
        "wkColorModel",
        "wkDashTableLength",
        "wkDefGraphicStyleId",
        "wkDeviceLowerX",
        "wkDeviceLowerY",
        "wkDeviceUpperX",
        "wkDeviceUpperY",
        "wkFileName",
        "wkFillTableLength",
        "wkForegroundColor",
        "wkFormat",
        "wkFullBackground",
        "wkGksWorkId",
        "wkHeight",
        "wkMarkerTableLength",
        "wkMetaName",
        "wkOrientation",
        "wkPDFFileName",
        "wkPDFFormat",
        "wkPDFResolution",
        "wkPSFileName",
        "wkPSFormat",
        "wkPSResolution",
        "wkPaperHeightF",
        "wkPaperSize",
        "wkPaperWidthF",
        "wkTopLevelViews",
        "wkViews",
        "wkVisualType",
        "wkWidth",
        "wsCurrentSize",
        "wsMaximumSize",
        "wsThresholdSize",
        "xyComputeXMax",
        "xyComputeXMin",
        "xyComputeYMax",
        "xyComputeYMin",
        "xyCoordData",
        "xyCoordDataSpec",
        "xyCurveDrawOrder",
        "xyDashPattern",
        "xyDashPatterns",
        "xyExplicitLabels",
        "xyExplicitLegendLabels",
        "xyLabelMode",
        "xyLineColor",
        "xyLineColors",
        "xyLineDashSegLenF",
        "xyLineLabelConstantSpacingF",
        "xyLineLabelFont",
        "xyLineLabelFontAspectF",
        "xyLineLabelFontColor",
        "xyLineLabelFontColors",
        "xyLineLabelFontHeightF",
        "xyLineLabelFontQuality",
        "xyLineLabelFontThicknessF",
        "xyLineLabelFuncCode",
        "xyLineOpacities",
        "xyLineOpacityF",
        "xyLineThicknessF",
        "xyLineThicknesses",
        "xyMarkLineMode",
        "xyMarkLineModes",
        "xyMarker",
        "xyMarkerColor",
        "xyMarkerColors",
        "xyMarkerOpacities",
        "xyMarkerOpacityF",
        "xyMarkerSizeF",
        "xyMarkerSizes",
        "xyMarkerThicknessF",
        "xyMarkerThicknesses",
        "xyMarkers",
        "xyMonoDashPattern",
        "xyMonoLineColor",
        "xyMonoLineLabelFontColor",
        "xyMonoLineThickness",
        "xyMonoMarkLineMode",
        "xyMonoMarker",
        "xyMonoMarkerColor",
        "xyMonoMarkerSize",
        "xyMonoMarkerThickness",
        "xyXIrrTensionF",
        "xyXIrregularPoints",
        "xyXStyle",
        "xyYIrrTensionF",
        "xyYIrregularPoints",
        "xyYStyle",
        "CenterCenter",
        "Bottom",
        "NhlDEFAULT_APP",
        "0",
        "MultipleVectors",
        "SingleVector",
        "N",
        "SplitVectors",
        "CellFill",
        "Transparent",
        "Randomized",
        "Computed",
        "Background",
        "High",
        "Foreground",
        "Top",
        "BottomRight",
        "BottomCenter",
        "BottomLeft",
        "TopRight",
        "TopCenter",
        "TopLeft",
        "Right",
        "CenterLeft",
        "Left",
        "CenterRight",
        "Down",
        "Across",
        "SolidFill",
        "HollowFill",
        "False",
        "True",
        "PreDraw",
        "Draw",
        "PostDraw",
        "AreaFill",
        "RasterFill",
        "TriangularMesh",
        "None",
        "Solid",
        "IgnoreOverlap",
        "OmitOverHL",
        "OmitOverVP",
        "OmitOverVPAndHL",
        "AdjustVP",
        "AdjustVPOmitOverHL",
        "IncludeOuterBoxes",
        "IncludeMinMaxLabels",
        "ExcludeOuterBoxes",
        "ScaleFactor",
        "ConfineToRange",
        "TrimZeros",
        "MaxSigDigitsLeft",
        "AllIntegers",
        "NoLine",
        "LineOnly",
        "LabelOnly",
        "LineAndLabel",
        "AutomaticLevels",
        "ManualLevels",
        "ExplicitLevels",
        "EqualSpacedLevels",
        "SolidLine",
        "Constant",
        "CellFil",
        "pwritx",
        "Medium",
        "Low",
        "RectangleEnds",
        "TriangleLowEnd",
        "TriangleHighEnd",
        "TriangleBothEnds",
        "ExplicitSizing",
        "UniformSizing",
        "BoxCenters",
        "InteriorEdges",
        "ExternalEdges",
        "Horizontal",
        "Center",
        "Vertical",
        "Solidline",
        "Lines",
        "Markers",
        "UniformPlacement",
        "ExplicitPlacement",
        "ItemCenters",
        "AboveItems",
        "BelowItems",
        "AboveBoxes",
        "BelowBoxes",
        "RANGS",
        "Ncarg4_0",
        "Ncarg4_1",
        "NULL",
        "Angles",
        "NDC",
        "NPC",
        "Points",
        "Window",
        "LambertConformal",
        "MediumRes",
        "LowRes",
        "RANGS_GSHHS",
        "HighRes",
        "Dynamic",
        "Geophysical",
        "UnspecifiedResolution",
        "Unspecified",
        "FinestResolution",
        "Finest",
        "FineResolution",
        "Fine",
        "MediumResolution",
        "CoarseResolution",
        "Coarse",
        "CoarsestResolution",
        "Coarsest",
        "NullArea",
        "NoBoundaries",
        "National",
        "USStates",
        "GeophysicalAndUSStates",
        "AllBoundaries",
        "mpGeophysical",
        "mpContinental",
        "CylindricalEquidistant",
        "MaskNone",
        "MaskOcean",
        "MaskNotOcean",
        "MaskLand",
        "MaskNotLand",
        "MaskFillArea",
        "MaskMaskArea",
        "Corners",
        "MaximalArea",
        "LatLon",
        "Orthographic",
        "Stereographic",
        "LambertEqualArea",
        "Gnomonic",
        "AzimuthalEquidistant",
        "Satellite",
        "Mollweide",
        "Mercator",
        "Robinson",
        "CylindricalEqualArea",
        "RotatedMercator",
        "PseudoMollweide",
        "Aitoff",
        "Hammer",
        "WinkelTripel",
        "FreeAspect",
        "FixedAspectFitBB",
        "FixedAspectNoFitBB",
        "NullColor",
        "NullFill",
        "GeophysicalPriority",
        "PoliticalPriority",
        "NoCreate",
        "Never",
        "Always",
        "Conditional",
        "NullObjId",
        "Polyline",
        "Polygon",
        "Polymarker",
        "DataTransform",
        "NDCViewport",
        "NDCDataExtent",
        "Manual",
        "Automatic",
        "Log",
        "Irregular",
        "Explicit",
        "Linear",
        "Time",
        "Geographic",
        "Map",
        "LogLin",
        "Curvilinear",
        "Spherical",
        "IrregularAxis",
        "LinearAxis",
        "LogAxis",
        "FillArrow",
        "LineArrow",
        "WindBarb",
        "CurlyVector",
        "ArrowHead",
        "ArrowCenter",
        "ArrowTail",
        "On",
        "Off",
        "TextOnly",
        "NhlBACKGROUND",
        "NhlFOREGROUND",
        "stdout",
        "NoLabels",
        "Lettered",
        "Custom",
        "MarkLines",
        "amwg256",
        "BkBlAqGrYeOrReViWh200",
        "BlAqGrYeOrRe",
        "BlAqGrYeOrReVi200",
        "BlGrYeOrReVi200",
        "example",
        "GMT_seis",
        "GMT_wysiwygcont",
        "matlab_hsv",
        "matlab_jet",
        "MPL_gist_ncar",
        "MPL_gist_rainbow",
        "MPL_hsv",
        "MPL_jet",
        "MPL_rainbow",
        "MPL_Spectral",
        "NCV_bright",
        "NCV_jaisnd",
        "NCV_jet",
        "NCV_rainbow2",
        "ncview_default",
        "nice_gfdl",
        "rainbow",
        "tbrAvg1",
        "tbrStd1",
        "tbrVar1",
        "temp1",
        "testcmap",
        "ViBlGrWhYeOrRe",
        "WhBlGrYeRe",
        "WhiteBlueGreenYellowRed",
        "WhViBlGrYeOrRe",
        "WhViBlGrYeOrReWh",
        "amwg",
        "BlAqGrWh2YeOrReVi22",
        "cosam",
        "cosam12",
        "cyclic",
        "GHRSST_anomaly",
        "GMT_wysiwyg",
        "grads_rainbow",
        "gui_default",
        "prcp_1",
        "prcp_2",
        "prcp_3",
        "radar",
        "radar_1",
        "seaice_1",
        "seaice_2",
        "so4_21",
        "so4_23",
        "wgne15",
        "cmocean_deep",
        "cmp_haxby",
        "GMT_drywet",
        "GMT_globe",
        "GMT_haxby",
        "GMT_nighttime",
        "GMT_ocean",
        "GMT_relief",
        "GMT_relief_oceanonly",
        "GMT_topo",
        "MPL_BrBG",
        "MPL_gist_earth",
        "MPL_ocean",
        "MPL_terrain",
        "NCV_gebco",
        "OceanLakeLandSnow",
        "topo_15lev",
        "cmocean_algae",
        "cmocean_amp",
        "cmocean_balance",
        "cmocean_curl",
        "cmocean_delta",
        "cmocean_dense",
        "cmocean_gray",
        "cmocean_haline",
        "cmocean_ice",
        "cmocean_matter",
        "cmocean_oxy",
        "cmocean_phase",
        "cmocean_solar",
        "cmocean_speed",
        "cmocean_tempo",
        "cmocean_thermal",
        "cmocean_turbid",
        "BlueDarkOrange18",
        "BlueDarkRed18",
        "BlueGreen14",
        "BrownBlue12",
        "Cat12",
        "cb_9step",
        "cb_rainbow",
        "cb_rainbow_inv",
        "CBR_coldhot",
        "CBR_drywet",
        "CBR_wet",
        "cividis",
        "GreenMagenta16",
        "posneg_1",
        "posneg_2",
        "srip_reanalysis",
        "StepSeq25",
        "hotcold_18lev",
        "hotcolr_19lev",
        "mch_default",
        "perc2_9lev",
        "percent_11lev",
        "precip2_15lev",
        "precip2_17lev",
        "precip3_16lev",
        "precip4_11lev",
        "precip4_diff_19lev",
        "precip_11lev",
        "precip_diff_12lev",
        "precip_diff_1lev",
        "rh_19lev",
        "spread_15lev",
        "sunshine_9lev",
        "sunshine_diff_12lev",
        "t2m_29lev",
        "temp_19lev",
        "temp_diff_18lev",
        "temp_diff_1lev",
        "wind_17lev",
        "BlRe",
        "BlueRed",
        "BlueRedGray",
        "BlWhRe",
        "cmp_b2r",
        "GMT_polar",
        "GMT_split",
        "hotres",
        "MPL_bwr",
        "MPL_coolwarm",
        "MPL_RdBu",
        "MPL_seismic",
        "NCV_blu_red",
        "NCV_blue_red",
        "WhBlReWh",
        "GMT_gebco",
        "GSFC_landsat_udf_density",
        "MPL_BuGn",
        "MPL_GnBu",
        "MPL_PuBuGn",
        "MPL_viridis",
        "MPL_winter",
        "MPL_YlGnBu",
        "GMT_hot",
        "matlab_hot",
        "MPL_afmhot",
        "MPL_autumn",
        "MPL_gist_heat",
        "MPL_hot",
        "MPL_Oranges",
        "MPL_OrRd",
        "MPL_Reds",
        "MPL_YlOrBr",
        "MPL_YlOrRd",
        "WhiteYellowOrangeRed",
        "drought_severity",
        "GMT_red2green",
        "helix1",
        "MPL_RdYlGn",
        "SVG_fs2006",
        "GreenYellow",
        "MPL_summer",
        "MPL_YlGn",
        "MPL_gnuplot",
        "MPL_PuRd",
        "MPL_RdPu",
        "GMT_cool",
        "MPL_cool",
        "MPL_PRGn",
        "GMT_copper",
        "MPL_copper",
        "MPL_pink",
        "MPL_s3pcpn",
        "SVG_bhw3_22",
        "SVG_es_landscape_79",
        "amwg_blueyellowred",
        "BlueWhiteOrangeRed",
        "BlueYellowRed",
        "cmp_flux",
        "GMT_jet",
        "GMT_no_green",
        "GMT_panoply",
        "MPL_RdYlBu",
        "ncl_default",
        "nrl_sirkes",
        "nrl_sirkes_nowhite",
        "UKM_hadcrut",
        "MPL_Blues",
        "MPL_PuBu",
        "WhiteBlue",
        "MPL_BuPu",
        "MPL_Purples",
        "MPL_Greens",
        "WhiteGreen",
        "GMT_gray",
        "GrayWhiteGray",
        "gscyclic",
        "gsdtol",
        "gsltod",
        "MPL_gist_gray",
        "MPL_gist_yarg",
        "MPL_Greys",
        "MPL_RdGy",
        "wxpEnIR",
        "3gauss",
        "3saw",
        "detail",
        "extrema",
        "matlab_lines",
        "MPL_StepSeq",
        "NCV_banded",
        "NCV_manga",
        "NCV_roullet",
        "psgcap",
        "SVG_Gallet13",
        "SVG_Lindaa06",
        "SVG_Lindaa07",
        "uniform",
        "CBR_set3",
        "MPL_Accent",
        "MPL_Dark2",
        "MPL_Paired",
        "MPL_Pastel1",
        "MPL_Pastel2",
        "MPL_Set1",
        "MPL_Set2",
        "MPL_Set3",
        "SVG_feb_sunrise",
        "SVG_foggy_sunrise",
        "circular_0",
        "circular_1",
        "circular_2",
        "default",
        "helix",
        "hlu_default",
        "lithology",
        "thelix",
        "NEO_div_vegetation_a",
        "NEO_div_vegetation_b",
        "NEO_div_vegetation_c",
        "NEO_modis_ndvi",
        "NOC_ndvi",
        "vegetation_ClarkU",
        "vegetation_modis",
        "MPL_PiYG",
        "MPL_PuOr",
        "GMT_paired",
        "grads_default",
        "MPL_bone",
        "MPL_brg",
        "MPL_cubehelix",
        "MPL_flag",
        "MPL_gist_stern",
        "MPL_gnuplot2",
        "MPL_prism",
        "MPL_s3pcpn_l",
        "MPL_spring",
        "MPL_sstanom",
    ]
}
